{"version":3,"sources":["webpack:///./resources/js/dashboard/EventBus.js","webpack:///./resources/js/dashboard/views/setting/Settings.vue","webpack:///./resources/js/dashboard/static/setting/setting.js","webpack:///./resources/js/dashboard/views/setting/Settings.vue?6be0","webpack:///resources/js/dashboard/views/setting/Settings.vue","webpack:///./resources/js/dashboard/views/setting/Settings.vue?e1d5","webpack:///./resources/js/dashboard/components/images/ImageUpload.vue","webpack:///./resources/js/dashboard/components/images/ImageUpload.vue?1869","webpack:///resources/js/dashboard/components/images/ImageUpload.vue","webpack:///./resources/js/dashboard/components/images/ImageUpload.vue?cfc1"],"names":["EventBus","Vue","settingsList","slug","type","value","options","labelKey","valueKey","name","instance","data","components","vSelect","ImageUpload","instanceSlug","settings","API","methods","getOptionsData","component","forEach","item","getData","getOptions","find","params","_this","items","axios","get","list","then","response","container","undefined","getSettings","_this2","setValues","setting","settingItem","content","updateSettings","_this3","requestUrl","update","requestParams","settingObject","id","push","put","showNotification","error","getSettingName","$t","message","color","customInstance","isPlural","count","$tc","title","text","$vs","notify","created","mounted","_vm","this","_c","_self","attrs","staticClass","_l","index","key","_v","_s","on","$event","$set","model","callback","$$v","expression","_e","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","props","per_page","Number","multiple","Boolean","isQuillEditor","previewWidth","String","maxFileSize","allowedFileTypes","popupActive","uploadPopupActive","uploadLabel","uploadUrl","files","images","currentImage","selectedImages","sort_key","sort_order","pagination","currentPage","nextPageUrl","totalPages","loadedImages","watch","oldValue","getImages","setData","hideLoad","length","loading","close","showLoading","request_url","image","page","next_page_url","last_page","imageUploaded","selectImage","setCurrentImage","imagesCount","multipleUpload","existingImage","isEmpty","splice","handleSelect","isSelected","updateImage","removeImage","selectedPosition","indexOf","deleteImage","position","scale","background","setImages","Object","assign","obj","prop","hasOwnProperty","showImagesModal","closeImagesModal","e","$emit","$attrs","Array","isArray","JSON","parse","setUploadUrl","getActionName","action","useModel","actionText","getPropertyTitle","property","create","listenEvents","_this4","$on","style","width","url","class","description","alt"],"mappings":"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","file":"25.js","sourcesContent":["import Vue from 'vue';\nexport const EventBus = new Vue();\nexport default EventBus;","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('vx-card',{attrs:{\"title\":_vm.$t('settings.pageTitle')}},[_c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col w-full\"},_vm._l((_vm.settingsList),function(setting,index){return _c('div',{key:index,staticClass:\"vx-row mb-3\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold mb-2\"},[_vm._v(_vm._s(_vm.getSettingName(setting.slug)))])]),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full\"},[(setting.type === 'select')?_c('vs-select',{staticClass:\"w-full\",attrs:{\"autocomplete\":\"\",\"is-selected\":setting.value},on:{\"update:isSelected\":function($event){return _vm.$set(setting, \"value\", $event)},\"update:is-selected\":function($event){return _vm.$set(setting, \"value\", $event)}},model:{value:(setting.value),callback:function ($$v) {_vm.$set(setting, \"value\", $$v)},expression:\"setting.value\"}},_vm._l((_vm.getOptions(setting.options)),function(item,index){return _c('vs-select-item',{key:index,attrs:{\"value\":item[setting.valueKey],\"text\":item[setting.labelKey]}})}),1):_vm._e(),_vm._v(\" \"),(setting.type === 'textarea')?_c('vs-textarea',{staticClass:\"mb-0\",model:{value:(setting.value),callback:function ($$v) {_vm.$set(setting, \"value\", $$v)},expression:\"setting.value\"}}):_vm._e(),_vm._v(\" \"),(setting.type === 'textInput')?_c('vs-input',{staticClass:\"w-full mb-0\",model:{value:(setting.value),callback:function ($$v) {_vm.$set(setting, \"value\", $$v)},expression:\"setting.value\"}}):_vm._e(),_vm._v(\" \"),(setting.type === 'image')?_c('image-upload',{model:{value:(setting.value),callback:function ($$v) {_vm.$set(setting, \"value\", $$v)},expression:\"setting.value\"}}):_vm._e()],1)])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('vs-button',{on:{\"click\":function($event){return _vm.updateSettings()}}},[_vm._v(_vm._s(_vm.$t('actions.update')))])],1)])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//The list of all settings\nexport const settingsList = [\n\n    {\n        slug: 'site_logo',\n        type: 'image',\n        value: ''\n    },\n    {\n        slug: 'default_currency',\n        type: 'select',\n        options: 'currencies',\n        labelKey: 'title',\n        valueKey: 'code',\n        value: ''\n    },\n    {\n        slug: 'order_status',\n        type: 'select',\n        options: 'orderStatuses',\n        labelKey: 'title',\n        valueKey: 'id',\n        value: ''\n    },\n    {\n        slug: 'analytics_code',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'pixel_code',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'custom_js',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'custom_css',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'fb_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'twitter_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'instagram_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'youtube_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'contact_phone',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'contact_email',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'categories_seo_title',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'categories_seo_keywords',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'categories_seo_description',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'home_seo_title',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'home_seo_keywords',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'home_seo_description',\n        type: 'textarea',\n        value: ''\n    }\n\n];\n\nexport const options = [\n\n    {\n        name: 'currencies',\n        instance: 'currency',\n        data: []\n    },\n    {\n        name: 'orderStatuses',\n        instance: 'orderStatus',\n        data: []\n    }\n\n];","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js\"","<template>\r\n\r\n    <div>\r\n\r\n        <vx-card :title=\"$t('settings.pageTitle')\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\">\r\n\r\n                    <div class=\"vx-row mb-3\" :key=\"index\" v-for=\"setting, index in settingsList\">\r\n\r\n                        <div class=\"vx-col w-full\">\r\n                            <p class=\"font-bold mb-2\">{{ getSettingName(setting.slug) }}</p>\r\n                        </div>\r\n                        <div class=\"vx-col w-full\">\r\n\r\n                            <!--Select-->\r\n                            <vs-select\r\n                                autocomplete\r\n                                v-model=\"setting.value\"\r\n                                :is-selected.sync=\"setting.value\"\r\n                                class=\"w-full\"\r\n                                v-if=\"setting.type === 'select'\"\r\n                            >\r\n                                <vs-select-item :key=\"index\" :value=\"item[setting.valueKey]\" :text=\"item[setting.labelKey]\" v-for=\"item,index in getOptions(setting.options)\" />\r\n                            </vs-select>\r\n\r\n                            <!--Textarea-->\r\n                            <vs-textarea\r\n                                v-model=\"setting.value\"\r\n                                class=\"mb-0\"\r\n                                v-if=\"setting.type === 'textarea'\"\r\n                            >\r\n                            </vs-textarea>\r\n\r\n                            <!--Text input-->\r\n                            <vs-input\r\n                                v-model=\"setting.value\"\r\n                                class=\"w-full mb-0\"\r\n                                v-if=\"setting.type === 'textInput'\"\r\n                            >\r\n                            </vs-input>\r\n\r\n                            <!-- Image upload component -->\r\n                            <image-upload v-if=\"setting.type === 'image'\" v-model=\"setting.value\"></image-upload>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\">\r\n                    <vs-button @click=\"updateSettings()\">{{ $t('actions.update') }}</vs-button>\r\n                </div>\r\n            </div>\r\n        </vx-card>\r\n\r\n    </div>\r\n\r\n</template>\r\n<script>\r\n\r\n    //Library for working with requests\r\n    import axios from 'axios';\r\n\r\n    //Vue select\r\n    import vSelect from 'vue-select'\r\n\r\n    //Image uploader\r\n    import ImageUpload from '../../components/images/ImageUpload';\r\n\r\n    //Settings list\r\n    import { settingsList, options } from \"../../static/setting/setting\";\r\n\r\n    //Applications routes\r\n    import { API } from '@/mixins/api/api';\r\n\r\n    export default {\r\n        components: {vSelect, ImageUpload},\r\n        data() {\r\n\r\n            return {\r\n\r\n                instance: 'setting',\r\n                instanceSlug: 'settings',\r\n                settingsList,\r\n                options,\r\n                settings: [],\r\n                API\r\n            }\r\n\r\n        },\r\n        methods: {\r\n\r\n            getOptionsData(){\r\n\r\n                let component = this;\r\n\r\n                this.options.forEach(function(item){\r\n\r\n                    component.getData(item.instance);\r\n\r\n                });\r\n\r\n            },\r\n            getOptions(name){\r\n\r\n                let container = this.options.find(function(item){\r\n\r\n                    return item.name === name;\r\n\r\n                });\r\n\r\n                return container.data;\r\n\r\n            },\r\n            getData(instance, params){\r\n\r\n                let items = [];\r\n\r\n                axios.get(this.API[instance].list, params).then(response => {\r\n\r\n                    items = response.data.data;\r\n\r\n                    let container = this.options.find(function(item){\r\n\r\n                        return item.instance === instance;\r\n\r\n                    });\r\n\r\n                    if(container !== undefined){\r\n\r\n                        container.data = items;\r\n\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            },\r\n            getSettings(params){\r\n\r\n                axios.get(this.API[this.instance].list, params).then(response => {\r\n\r\n                    this.settings = response.data.data;\r\n\r\n                    //Set values for settings\r\n                    this.setValues();\r\n\r\n                });\r\n\r\n            },\r\n            setValues(){\r\n\r\n                let settings = this.settings;\r\n\r\n                this.settingsList.forEach(function(setting){\r\n\r\n                    let settingItem = settings.find(function(item){\r\n\r\n                        return item.slug === setting.slug;\r\n\r\n                    });\r\n\r\n                    if(settingItem !== undefined){\r\n\r\n                        setting.value = settingItem.content;\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            },\r\n            updateSettings(){\r\n\r\n                let component = this;\r\n\r\n                let settings = this.settings;\r\n\r\n                let requestUrl = this.API[this.instance].update;\r\n\r\n                let requestParams = {\r\n                    settings: []\r\n                };\r\n\r\n                this.settingsList.forEach(function(setting){\r\n\r\n\r\n                    let settingItem = settings.find(function(item){\r\n\r\n                        return item.slug === setting.slug;\r\n\r\n                    });\r\n\r\n                    if(settingItem !== undefined && setting.value !== settingItem.content){\r\n\r\n                        let settingObject = {\r\n                            id: settingItem.id,\r\n                            content: setting.value\r\n                        };\r\n\r\n                        requestParams.settings.push(settingObject);\r\n\r\n                    }\r\n\r\n\r\n                });\r\n\r\n\r\n                axios.put(requestUrl, requestParams).then(\r\n                    response => {\r\n\r\n                        if (response.data === 'success') {\r\n\r\n                            this.showNotification('success', 'request.updatedSuccess', 'success', undefined, true);\r\n\r\n                        }\r\n\r\n                    })\r\n                    .catch(\r\n                        error => {\r\n\r\n                            this.showNotification('success', 'request.error', 'danger');\r\n\r\n                        }\r\n                    );\r\n\r\n            },\r\n            getSettingName(slug){\r\n\r\n                return this.$t('settings.' + slug + '.title');\r\n\r\n            },\r\n            showNotification(type, message, color, customInstance, isPlural){\r\n\r\n                let instance = '';\r\n\r\n                let count = 1;\r\n\r\n                if(isPlural){\r\n\r\n                    count = 2;\r\n\r\n                }\r\n\r\n                if(customInstance){\r\n\r\n                    instance = this.$tc('models.' + customInstance + '.title', count);\r\n\r\n                }\r\n                else{\r\n\r\n                    instance = this.$tc('models.' + this.instance + '.title', count);\r\n\r\n                }\r\n\r\n                let title = this.$t('messages.' + type);\r\n\r\n                let text = this.$tc('messages.' + message, count, { instance: instance });\r\n\r\n                this.$vs.notify(\r\n                    {\r\n                        title: title,\r\n                        text:  text,\r\n                        color: color\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n        },\r\n        created(){\r\n\r\n        },\r\n        mounted() {\r\n\r\n            //Get the data for selects\r\n            this.getOptionsData();\r\n\r\n            //Get settings values\r\n            this.getSettings();\r\n\r\n        }\r\n    }\r\n</script>","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=2a07a2cc\"\nimport script from \"./Settings.vue?vue&type=script&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(!_vm.isQuillEditor)?_c('div',{staticClass:\"vx-row mb-3\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('div',{staticClass:\"abr-form-images flex flex-wrap content-start w-full\"},_vm._l((_vm.selectedImages),function(image){return _c('div',{key:image.id,staticClass:\"abr-form-image\",style:({width: _vm.previewWidth}),attrs:{\"image-id\":image.id}},[_c('img',{staticClass:\"object-cover rounded\",attrs:{\"src\":image.url,\"width\":\"100%\"}}),_vm._v(\" \"),_c('div',{staticClass:\"abr-image-btn bg-danger rounded shadow\",on:{\"click\":function($event){return _vm.removeImage(image)}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"\\n                            close\\n                        \")])])])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"filled\"},on:{\"click\":function($event){return _vm.showImagesModal()}}},[_vm._v(_vm._s(_vm.getActionName('choose', true, _vm.multiple)))])],1)]):_vm._e(),_vm._v(\" \"),_c('vs-popup',{attrs:{\"fullscreen\":\"\",\"title\":_vm.getPropertyTitle('uploaderTitle'),\"active\":_vm.popupActive},on:{\"update:active\":function($event){_vm.popupActive=$event}}},[_c('div',{staticClass:\"vx-row abr-images-container mb-0\"},[_c('div',{staticClass:\"vx-col w-3/4 h-full abr-images flex flex-wrap content-start mb-0 pr-0 vs-con-loading__container\",attrs:{\"id\":\"abr-images\"}},_vm._l((_vm.images),function(image,index){return _c('div',{key:image.id,staticClass:\"abr-images-item rounded\",class:{'border-primary': _vm.isSelected(image.id)},attrs:{\"image-id\":image.id}},[_c('img',{staticClass:\"object-cover\",attrs:{\"src\":image.url,\"width\":\"100%\"},on:{\"click\":function($event){return _vm.selectImage(image)},\"load\":function($event){return _vm.hideLoad(index)}}}),_vm._v(\" \"),(_vm.isSelected(image.id))?_c('div',{staticClass:\"abr-image-btn bg-danger rounded shadow\",on:{\"click\":function($event){return _vm.removeImage(image)}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"\\n                            close\\n                        \")])]):_vm._e()])}),0),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-1/4 pl-0\"},[_c('div',{staticClass:\"vx-row\"},[(!_vm.isEmpty(_vm.currentImage))?_c('div',{staticClass:\"vx-col w-full abr-selected-image\"},[_c('h3',{staticClass:\"mb-6\"},[_vm._v(_vm._s(_vm.getPropertyTitle('imageParameters')))]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row abr-image-preview mb-6\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('img',{staticClass:\"mb-3\",attrs:{\"src\":_vm.currentImage.url}}),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.currentImage.title))])])]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row abr-image-form\"},[_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-input',{staticClass:\"w-full\",attrs:{\"label-placeholder\":_vm.getPropertyTitle('title')},on:{\"change\":function($event){return _vm.updateImage(_vm.currentImage)}},model:{value:(_vm.currentImage.title),callback:function ($$v) {_vm.$set(_vm.currentImage, \"title\", $$v)},expression:\"currentImage.title\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-input',{staticClass:\"w-full\",attrs:{\"label-placeholder\":_vm.getPropertyTitle('description')},on:{\"change\":function($event){return _vm.updateImage(_vm.currentImage)}},model:{value:(_vm.currentImage.description),callback:function ($$v) {_vm.$set(_vm.currentImage, \"description\", $$v)},expression:\"currentImage.description\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-input',{staticClass:\"w-full\",attrs:{\"label-placeholder\":_vm.getPropertyTitle('alt')},on:{\"change\":function($event){return _vm.updateImage(_vm.currentImage)}},model:{value:(_vm.currentImage.alt),callback:function ($$v) {_vm.$set(_vm.currentImage, \"alt\", $$v)},expression:\"currentImage.alt\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-button',{staticClass:\"w-1/2\",attrs:{\"color\":\"danger\",\"type\":\"filled\"},on:{\"click\":function($event){return _vm.deleteImage(_vm.currentImage)}}},[_vm._v(_vm._s(_vm.getActionName('delete', true)))])],1)])]):_vm._e()])])]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row abr-images-pagination mb-0\"},[_c('div',{staticClass:\"vx-col flex justify-center items-center w-3/4\"},[_c('vs-pagination',{attrs:{\"total\":_vm.pagination.totalPages},model:{value:(_vm.pagination.currentPage),callback:function ($$v) {_vm.$set(_vm.pagination, \"currentPage\", $$v)},expression:\"pagination.currentPage\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col flex justify-center items-center w-1/4 pl-0\"},[_c('vs-button',{staticClass:\"mr-3\",attrs:{\"color\":\"primary\",\"type\":\"filled\"},on:{\"click\":function($event){return _vm.closeImagesModal()}}},[_vm._v(_vm._s(_vm.getActionName('choose', true, _vm.multiple)))]),_vm._v(\" \"),_c('vs-button',{attrs:{\"type\":\"border\"},on:{\"click\":function($event){_vm.uploadPopupActive = true}}},[_vm._v(_vm._s(_vm.getActionName('upload')))])],1)]),_vm._v(\" \"),_c('vs-popup',{attrs:{\"title\":_vm.getActionName('upload', true, _vm.multiple),\"active\":_vm.uploadPopupActive},on:{\"update:active\":function($event){_vm.uploadPopupActive=$event}}},[_c('div',{staticClass:\"vx-row m-0\"},[_c('div',{staticClass:\"vx-col w-full p-0\"},[_c('file-pond',{attrs:{\"name\":\"file[]\",\"label-idle\":_vm.uploadLabel,\"allow-multiple\":\"true\",\"accepted-file-types\":_vm.allowedFileTypes,\"server\":_vm.uploadUrl,\"files\":_vm.files,\"max-file-size\":_vm.maxFileSize},on:{\"processfiles\":function($event){return _vm.imageUploaded()}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full p-0\"},[_c('vs-button',{staticClass:\"float-right\",on:{\"click\":function($event){_vm.uploadPopupActive = false}}},[_vm._v(_vm._s(_vm.getActionName('close')))])],1)])])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageUpload.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageUpload.vue?vue&type=script&lang=js\"","<template>\n\n\n    <div>\n\n        <div class=\"vx-row mb-3\" v-if=\"!isQuillEditor\">\n\n            <div class=\"vx-col w-full\">\n                <div class=\"abr-form-images flex flex-wrap content-start w-full\">\n\n                    <div class=\"abr-form-image\" :style=\"{width: previewWidth}\" :key=\"image.id\" v-for=\"image in selectedImages\" :image-id=\"image.id\">\n                        <img :src=\"image.url\" width=\"100%\" class=\"object-cover rounded\" />\n                        <div class=\"abr-image-btn bg-danger rounded shadow\" @click=\"removeImage(image)\">\n                            <i class=\"material-icons\">\n                                close\n                            </i>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"vx-col w-full\">\n                <vs-button color=\"primary\" type=\"filled\" @click=\"showImagesModal()\">{{ getActionName('choose', true, multiple) }}</vs-button>\n            </div>\n\n        </div>\n\n        <vs-popup fullscreen :title=\"getPropertyTitle('uploaderTitle')\" :active.sync=\"popupActive\">\n\n            <div class=\"vx-row abr-images-container mb-0\">\n                <div id=\"abr-images\" class=\"vx-col w-3/4 h-full abr-images flex flex-wrap content-start mb-0 pr-0 vs-con-loading__container\">\n\n                    <div class=\"abr-images-item rounded\" v-bind:class=\"{'border-primary': isSelected(image.id)}\" :key=\"image.id\" v-for=\"image, index in images\" :image-id=\"image.id\">\n                        <img :src=\"image.url\" width=\"100%\" class=\"object-cover\" v-on:click=\"selectImage(image)\" @load=\"hideLoad(index)\" />\n                        <div class=\"abr-image-btn bg-danger rounded shadow\" v-if=\"isSelected(image.id)\" @click=\"removeImage(image)\">\n                            <i class=\"material-icons\">\n                                close\n                            </i>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"vx-col w-1/4 pl-0\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col w-full abr-selected-image\" v-if=\"!isEmpty(currentImage)\">\n                            <h3 class=\"mb-6\">{{ getPropertyTitle('imageParameters') }}</h3>\n                            <div class=\"vx-row abr-image-preview mb-6\">\n                                <div class=\"vx-col w-full\">\n                                    <img :src=\"currentImage.url\" class=\"mb-3\" />\n                                    <p>{{ currentImage.title }}</p>\n                                </div>\n                            </div>\n                            <div class=\"vx-row abr-image-form\">\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-input :label-placeholder=\"getPropertyTitle('title')\" class=\"w-full\" v-model=\"currentImage.title\" @change=\"updateImage(currentImage)\" />\n                                </div>\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-input :label-placeholder=\"getPropertyTitle('description')\" class=\"w-full\" v-model=\"currentImage.description\" @change=\"updateImage(currentImage)\" />\n                                </div>\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-input :label-placeholder=\"getPropertyTitle('alt')\" class=\"w-full\" v-model=\"currentImage.alt\" @change=\"updateImage(currentImage)\" />\n                                </div>\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-button color=\"danger\" class=\"w-1/2\" type=\"filled\" @click=\"deleteImage(currentImage)\">{{ getActionName('delete', true) }}</vs-button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"vx-row abr-images-pagination mb-0\">\n                <div class=\"vx-col flex justify-center items-center w-3/4\">\n                    <vs-pagination :total=\"pagination.totalPages\" v-model=\"pagination.currentPage\"></vs-pagination>\n                </div>\n                <div class=\"vx-col flex justify-center items-center w-1/4 pl-0\">\n                    <vs-button color=\"primary\" type=\"filled\" class=\"mr-3\" @click=\"closeImagesModal()\">{{ getActionName('choose', true, multiple) }}</vs-button>\n                    <vs-button type=\"border\" @click=\"uploadPopupActive = true\">{{ getActionName('upload') }}</vs-button>\n                </div>\n            </div>\n\n            <vs-popup :title=\"getActionName('upload', true, multiple)\" :active.sync=\"uploadPopupActive\">\n                <div class=\"vx-row m-0\">\n                    <div class=\"vx-col w-full p-0\">\n                        <file-pond\n                                name=\"file[]\"\n                                :label-idle=\"uploadLabel\"\n                                allow-multiple=\"true\"\n                                :accepted-file-types=\"allowedFileTypes\"\n                                :server=\"uploadUrl\"\n                                v-bind:files=\"files\"\n                                v-on:processfiles=\"imageUploaded()\"\n                                :max-file-size=\"maxFileSize\"\n                        />\n                    </div>\n                    <div class=\"vx-col w-full p-0\">\n                        <vs-button class=\"float-right\" @click=\"uploadPopupActive = false\">{{ getActionName('close') }}</vs-button>\n                    </div>\n                </div>\n            </vs-popup>\n\n        </vs-popup>\n\n    </div>\n\n\n</template>\n\n<script>\n\n    import axios from 'axios';\n\n    //Application routes\n    import { API } from '../../mixins/api/api.js';\n\n    // Import Vue FilePond\n    import vueFilePond from 'vue-filepond';\n\n    // Import FilePond styles\n    import 'filepond/dist/filepond.min.css';\n\n    //FilePond plugins\n    import FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\n    import FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\n\n    // Create component\n    const FilePond = vueFilePond(FilePondPluginFileValidateType, FilePondPluginFileValidateSize);\n\n    //Events bus\n    import { EventBus } from '../../EventBus';\n\n    export default {\n        name: \"ImageUpload\",\n        components: { FilePond },\n        props: {\n            per_page: {\n                type: Number,\n                default: 20\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            isQuillEditor: {\n                type: Boolean,\n                default: false\n            },\n            previewWidth: {\n                type: String,\n                default: '24%'\n            },\n            maxFileSize: {\n                type: String,\n                default: '1MB'\n            },\n            allowedFileTypes: {\n                type: String,\n                default: 'image/jpeg, image/png, image/svg+xml'\n            }\n        },\n        data() {\n            return {\n                popupActive: false,\n                uploadPopupActive: false,\n                uploadLabel: 'Drag & Drop your image or <span class=\"filepond--label-action\"> Browse </span>',\n                uploadUrl: '',\n                files: [],\n                images: [],\n                currentImage: {},\n                selectedImages: [],\n                requestParams: {\n                    per_page: this.per_page,\n                    sort_key: 'created_at',\n                    sort_order: 'desc'\n                },\n                pagination: {\n                    currentPage: 1,\n                    nextPageUrl: '',\n                    totalPages: 1\n                },\n                loadedImages: [],\n                API\n            }\n        },\n        watch: {\n\n            'pagination.currentPage': function(value, oldValue) {\n\n                this.getImages();\n\n            },\n            '$attrs.value': function (value, oldValue) {\n\n                this.setData();\n\n            }\n\n        },\n        methods: {\n            hideLoad(index){\n\n                this.loadedImages.push(index);\n\n                if(this.loadedImages.length === this.images.length){\n\n                    this.$vs.loading.close('#abr-images > .con-vs-loading')\n\n                }\n\n            },\n            getImages() {\n\n                this.showLoading();\n\n                let request_url = this.API.image.list;\n\n                let page = this.pagination.currentPage;\n\n                if (this.pagination.nextPageUrl != '') {\n\n                    request_url = request_url + '?page=' + page\n\n                }\n\n                //Clear the loaded images list\n                this.images = [];\n                this.loadedImages = [];\n\n                axios.get(request_url, {params: this.requestParams}).then(response => {\n\n                    this.images = response.data.data;\n\n                    this.pagination.nextPageUrl = response.data.next_page_url;\n\n                    this.pagination.totalPages = response.data.last_page;\n\n                });\n\n            },\n            imageUploaded(){\n\n                this.getImages();\n\n            },\n            selectImage(image){\n\n                //Set current image for the image form\n                this.setCurrentImage(image);\n\n                let selectedImages = this.selectedImages;\n\n                let imagesCount = selectedImages.length;\n\n                let multipleUpload = this.multiple;\n\n                let existingImage = selectedImages.find(function (item) {\n\n                    return item.id === image.id;\n\n                });\n\n                if(this.isEmpty(existingImage)){\n\n                    if(multipleUpload){\n\n                        this.selectedImages.push(image);\n\n                    }\n                    else{\n\n                        this.selectedImages.splice(0, 1);\n\n                        this.selectedImages.push(image);\n\n                    }\n\n                }\n\n                if(imagesCount < 1 || multipleUpload) {\n\n                    let existingImage = selectedImages.find(function (item) {\n\n                        return item.id === image.id;\n\n                    });\n\n                    if(this.isEmpty(existingImage)){\n\n                        this.selectedImages.push(image);\n\n                    }\n\n                }\n\n                //Send the selected image\n                this.handleSelect();\n\n            },\n            isSelected(image){\n\n                let selectedImage = this.selectedImages.find(function(item){\n\n                    return item.id === image;\n\n                });\n\n                if(selectedImage){\n\n                    return true;\n\n                }\n\n            },\n            updateImage(image){\n\n                axios.put(this.API.image.update + '/' + image.id, image).then(response => {\n\n                    if(response.data === 'success'){\n\n                        this.showNotification('success', 'request.updatedSuccess', 'success');\n\n                    }\n                    else{\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n\n                });\n\n            },\n            removeImage(image){\n\n                let selectedImages = this.selectedImages;\n\n                let existingImage = selectedImages.find(function(item){\n\n                    return item.id === image.id;\n\n                });\n\n                if(existingImage !== undefined){\n\n                    let selectedPosition = selectedImages.indexOf(existingImage);\n\n                    selectedImages.splice(selectedPosition, 1);\n\n                }\n\n                if(this.currentImage.id === image.id){\n\n                    this.currentImage = {};\n\n                }\n\n            },\n            deleteImage(image){\n\n                this.removeImage(image);\n\n                let images = this.images;\n\n                let existingImage = images.find(function(item){\n\n                    return item.id === image.id;\n\n                });\n\n                axios.delete(this.API.image.delete + '/' + image.id).then(response => {\n\n                    if(response.data === 'success'){\n\n                        this.showNotification('success', 'request.deletedSuccess', 'success');\n\n                        if(existingImage !== undefined){\n\n                            let position = images.indexOf(image);\n\n                            images.splice(position, 1);\n\n                        }\n\n                    }\n                    else{\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n\n                });\n\n            },\n            showNotification(type, message, color, customInstance, isPlural){\n\n                let instance = '';\n\n                let count = 1;\n\n                if(isPlural){\n\n                    count = 2;\n\n                }\n\n                if(customInstance){\n\n                    instance = this.$tc('models.' + customInstance + '.title', count);\n\n                }\n                else{\n\n                    instance = this.$tc('models.image.title', count);\n\n                }\n\n                let title = this.$t('messages.' + type);\n\n                let text = this.$tc('messages.' + message, count, { instance: instance });\n\n                this.$vs.notify(\n                    {\n                        title: title,\n                        text:  text,\n                        color: color\n                    }\n                );\n\n            },\n            showLoading(){\n\n                this.$vs.loading({\n                    container: '#abr-images',\n                    scale: 1,\n                    background: '#fff',\n                    color: 'primary'\n                });\n\n            },\n            setImages(images){\n\n                this.selectedImages = images;\n\n                if(this.currentImage === {}){\n\n                    this.setCurrentImage();\n\n                }\n\n            },\n            setCurrentImage(image){\n\n                if(image === undefined){\n\n                    if (this.selectedImages.length > 0) {\n\n                        this.currentImage = Object.assign({}, this.selectedImages[0]);\n\n                    }\n                    else {\n\n                        this.currentImage = {};\n\n                    }\n\n                }\n                else {\n\n                    this.currentImage = Object.assign(image);\n\n                }\n\n            },\n            isEmpty(obj) {\n                for (var prop in obj) {\n                    if (obj.hasOwnProperty(prop)) return false;\n                }\n                return true;\n            },\n            showImagesModal(){\n                this.popupActive = true;\n                if(this.selectedImages.length === 0 && this.pagination.currentPage === 1) {\n\n                    //Show loading animation\n                    this.showLoading();\n\n                }\n                this.getImages();\n                this.setCurrentImage();\n            },\n            closeImagesModal(){\n                this.popupActive = false;\n            },\n            handleSelect (e) {\n\n                this.$emit('input', this.selectedImages);\n\n            },\n            setData(){\n\n                let images = this.$attrs.value;\n\n                if(images !== \"\" && images !== undefined){\n\n                    if(!Array.isArray(images)){\n\n                        images = JSON.parse(images);\n\n                    }\n\n                    this.setImages(images);\n\n                }\n\n                this.setUploadUrl();\n\n            },\n            getActionName(action, useModel, isPlural){\n\n                let count = 1;\n\n                if(isPlural){\n\n                    count = 2;\n\n                }\n\n                let actionText = this.$t('actions.' + action);\n\n                if(useModel){\n\n                    let instanceTitle = this.$tc('models.image.title', count);\n\n                    return actionText + ' ' + instanceTitle;\n\n                }\n                else{\n\n                    return actionText;\n\n                }\n\n            },\n            //Newer and more advanced method for retrieving a model property name\n            getPropertyTitle(property){\n\n                return this.$t('models.image.properties.' + property);\n\n            },\n            setUploadUrl(){\n\n                this.uploadUrl = this.API.image.create;\n\n            },\n            listenEvents(){\n\n                //Open images manager from quill editor\n                EventBus.$on('open-image-uploader', action => {\n\n                    this.showImagesModal();\n\n                });\n\n            }\n        },\n        created() {\n\n            //Set data for the images manager\n            this.setData();\n\n            //Listen to events\n            this.listenEvents();\n\n        }\n    }\n</script>","import { render, staticRenderFns } from \"./ImageUpload.vue?vue&type=template&id=50de4f08\"\nimport script from \"./ImageUpload.vue?vue&type=script&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}