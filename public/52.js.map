{"version":3,"sources":["webpack:///resources/js/dashboard/views/products/Form.vue","webpack:///./resources/js/dashboard/views/products/Form.vue?5fe6","webpack:///./resources/js/dashboard/views/products/Form.vue?bbfa","webpack:///./resources/js/dashboard/views/products/Form.vue?38f7","webpack:///./resources/js/dashboard/EventBus.js","webpack:///./resources/js/dashboard/mixins/forms/helper.js","webpack:///./resources/js/dashboard/static/product/product.js","webpack:///./resources/js/dashboard/views/products/Form.vue","webpack:///./resources/js/dashboard/views/products/Form.vue?b096","webpack:///./resources/js/dashboard/views/products/Form.vue?ebaa","webpack:///./resources/js/dashboard/views/products/Form.vue?332d"],"names":["EventBus","Vue","formHelper","components","Datepicker","props","statuses","type","Array","title","$t","value","data","instance","model","products","producents","categories","banners","filters","attributes","selectedImages","shippingMethods","paymentMethods","orderStatuses","API","methods","setInstance","getFormTitle","isEdit","getSectionTitle","slug","getFormSectionTitle","getPropertyTitle","property","getFieldLabel","section","field","validateField","$v","$invalid","redirectToIndex","route","$router","push","name","getProducts","params","axios","get","product","list","then","response","getProducents","producent","getCategories","category","getBanners","banner","getFilters","filter","getAttributes","attribute","getShippingMethods","requestUrl","shippingMethod","getPaymentMethods","paymentMethod","getOrderStatuses","orderStatus","searchProducts","search","loading","requestParams","searchCategories","searchFilters","showNotification","message","color","customInstance","isPlural","count","$tc","text","$vs","notify","getOptions","options","normalizeData","normalized","forEach","option","id","updateImages","images","listenToEvents","$on","convertDate","date","format","connection_string","selectedDate","Date","dateDay","getDate","dateMonth","getMonth","dateYear","getFullYear","connector","undefined","buildAddress","order","address","customer_name","customer_surname","address_one","address_two","city","zip_code","country","created","mounted","productTypes","description","short_description","seo_title","seo_description","seo_keywords","price","company_price","currency","view_count","like_count","status","product_id","producent_id","validations","required","selectedCategories"],"mappings":"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B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,oCAAoC;AACpC,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,0CAA0C,EAAE;AAC7E,uBAAuB,8BAA8B;AACrD,yBAAyB,6BAA6B;AACtD;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,6BAA6B,wCAAwC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,6BAA6B,wCAAwC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,gDAAgD,EAAE;AACxE;AACA,yBAAyB,8BAA8B;AACvD,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,oCAAoC;AACpC,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,6BAA6B,+BAA+B;AAC5D;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,+CAA+C,EAAE;AACvE;AACA,yBAAyB,8BAA8B;AACvD,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC,6BAA6B;AAC9D,mCAAmC,8BAA8B;AACjE,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA,mCAAmC,8BAA8B;AACjE,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA,uCAAuC,8BAA8B;AACrE,uCAAuC,mCAAmC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D;AACA;AACA,0CAA0C,kCAAkC;AAC5E;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B;AAC5D,+BAA+B,wBAAwB;AACvD;AACA;AACA,yBAAyB,mCAAmC;AAC5D;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iCAAiC,4BAA4B;AAC7D;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,2CAA2C,EAAE;AACnE;AACA,yBAAyB,8BAA8B;AACvD,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,wCAAwC,EAAE;AAC3E,uBAAuB,8BAA8B;AACrD,yBAAyB,+BAA+B;AACxD,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,6CAA6C,EAAE;AACrE;AACA,yBAAyB,8BAA8B;AACvD;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,mCAAmC,8BAA8B;AACjE,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8BAA8B;AACjE,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8BAA8B;AACjE,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAsD;AAC/E;AACA,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8BAA8B;AAC3D;AACA;AACA,wCAAwC,kCAAkC;AAC1E;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+BAA+B,wBAAwB;AACvD;AACA;AACA,yBAAyB,mCAAmC;AAC5D;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iCAAiC,6BAA6B;AAC9D;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,6CAA6C,EAAE;AACrE;AACA,yBAAyB,8BAA8B;AACvD,2BAA2B,+BAA+B;AAC1D,6BAA6B,6BAA6B;AAC1D,+BAA+B,6BAA6B;AAC5D,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B;AAC5D,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6BAA6B;AAC1D;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA,iCAAiC,wCAAwC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,sCAAsC;AACtC,6BAA6B;AAC7B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACviCA;AAAA;AAAA;AAAA;AAAA;AACO,IAAMA,QAAQ,GAAG,IAAIC,0CAAJ,EAAjB;AACQD,uEAAf,E;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;CAGA;;CAGA;;CAGA;;AACA;AAEA,IAAME,UAAU,GAAG;AACfC,YAAU,EAAE;AAAEC,cAAU,EAAVA,wDAAUA;AAAZ,GADG;AAEfC,OAAK,EAAE;AACHC,YAAQ,EAAE;AACNC,UAAI,EAAEC,KADA;AAAA,qCAEI;AACN,eAAO,CACH;AACIC,eAAK,EAAE,KAAKC,EAAL,CAAQ,4BAAR,CADX;AAEIC,eAAK,EAAE;AAFX,SADG,EAKH;AACIF,eAAK,EAAE,KAAKC,EAAL,CAAQ,yBAAR,CADX;AAEIC,eAAK,EAAE;AAFX,SALG,CAAP;AAUH;AAbK;AADP,GAFQ;AAmBfC,MAnBe,kBAmBR;AAEH,WAAO;AAEHC,cAAQ,EAAE,EAFP;AAGHC,WAAK,EAAE,EAHJ;AAIHC,cAAQ,EAAE,EAJP;AAKHC,gBAAU,EAAE,EALT;AAMHC,gBAAU,EAAE,EANT;AAOHC,aAAO,EAAE,EAPN;AAQHC,aAAO,EAAE,EARN;AASHC,gBAAU,EAAE,EATT;AAUHC,oBAAc,EAAE,EAVb;AAWHC,qBAAe,EAAE,EAXd;AAYHC,oBAAc,EAAE,EAZb;AAaHC,mBAAa,EAAE,EAbZ;AAcHC,SAAG,EAAHA,mDAAGA;AAdA,KAAP;AAkBH,GAvCc;AAwCfC,SAAO,EAAE;AAELC,eAFK,uBAEOd,QAFP,EAEgB;AAEjB,WAAKA,QAAL,GAAgBA,QAAhB;AAEH,KANI;AAOLe,gBAPK,wBAOQC,MAPR,EAOe;AAEhB,UAAGA,MAAH,EAAU;AAEN,eAAO,KAAKnB,EAAL,CAAQ,WAAW,KAAKG,QAAhB,GAA2B,cAAnC,CAAP;AAEH,OAJD,MAKI;AAEA,eAAO,KAAKH,EAAL,CAAQ,WAAW,KAAKG,QAAhB,GAA2B,gBAAnC,CAAP;AAEH;AAEJ,KApBI;AAqBLiB,mBArBK,2BAqBWC,IArBX,EAqBgB;AAEjB,aAAO,KAAKrB,EAAL,CAAQ,WAAW,KAAKG,QAAhB,GAA2B,YAA3B,GAA0CkB,IAA1C,GAAiD,QAAzD,CAAP;AAEH,KAzBI;AA0BL;AACAC,uBA3BK,+BA2BeD,IA3Bf,EA2BoB;AAErB,aAAO,KAAKrB,EAAL,CAAQ,YAAY,KAAKG,QAAjB,GAA4B,QAA5B,GAAuCkB,IAA/C,CAAP;AAEH,KA/BI;AAgCL;AACAE,oBAjCK,4BAiCYC,QAjCZ,EAiCqB;AAEtB,aAAO,KAAKxB,EAAL,CAAQ,YAAY,KAAKG,QAAjB,GAA4B,cAA5B,GAA6CqB,QAArD,CAAP;AAEH,KArCI;AAsCLC,iBAtCK,yBAsCSC,OAtCT,EAsCkBC,KAtClB,EAsCwB;AAEzB,aAAO,KAAK3B,EAAL,CAAQ,WAAW,KAAKG,QAAhB,GAA2B,YAA3B,GAA0CuB,OAA1C,GAAoD,UAApD,GAAiEC,KAAzE,CAAP;AAEH,KA1CI;AA2CLC,iBA3CK,yBA2CSD,KA3CT,EA2Ce;AAGhB,UAAG,KAAKE,EAAL,CAAQzB,KAAR,CAAcuB,KAAd,CAAH,EAAwB;AAEpB,eAAO,KAAKE,EAAL,CAAQzB,KAAR,CAAcuB,KAAd,EAAqBG,QAA5B;AAEH;AAEJ,KApDI;AAqDLC,mBArDK,2BAqDWC,KArDX,EAqDiB;AAElB,WAAKC,OAAL,CAAaC,IAAb,CAAkB;AAAEC,YAAI,EAAEH;AAAR,OAAlB;AAEH,KAzDI;AA0DLI,eA1DK,uBA0DOC,MA1DP,EA0De;AAAA;;AAEhBC,kDAAK,CAACC,GAAN,CAAU,KAAKxB,GAAL,CAASyB,OAAT,CAAiBC,IAA3B,EAAiCJ,MAAjC,EAAyCK,IAAzC,CAA8C,UAAAC,QAAQ,EAAI;AAEtD,aAAI,CAACtC,QAAL,GAAiBsC,QAAQ,CAACzC,IAAT,CAAcA,IAA/B;AAEH,OAJD;AAMH,KAlEI;AAmEL0C,iBAnEK,yBAmESP,MAnET,EAmEiB;AAAA;;AAElBC,kDAAK,CAACC,GAAN,CAAU,KAAKxB,GAAL,CAAS8B,SAAT,CAAmBJ,IAA7B,EAAmCJ,MAAnC,EAA2CK,IAA3C,CAAgD,UAAAC,QAAQ,EAAI;AAExD,cAAI,CAACrC,UAAL,GAAmBqC,QAAQ,CAACzC,IAAT,CAAcA,IAAjC;AAEH,OAJD;AAMH,KA3EI;AA4EL4C,iBA5EK,yBA4EST,MA5ET,EA4EiB;AAAA;;AAElBC,kDAAK,CAACC,GAAN,CAAU,KAAKxB,GAAL,CAASgC,QAAT,CAAkBN,IAA5B,EAAkCJ,MAAlC,EAA0CK,IAA1C,CAA+C,UAAAC,QAAQ,EAAI;AAEvD,cAAI,CAACpC,UAAL,GAAmBoC,QAAQ,CAACzC,IAAT,CAAcA,IAAjC;AAEH,OAJD;AAMH,KApFI;AAqFL8C,cArFK,sBAqFMX,MArFN,EAqFc;AAAA;;AAEfC,kDAAK,CAACC,GAAN,CAAU,KAAKxB,GAAL,CAASkC,MAAT,CAAgBR,IAA1B,EAAgCJ,MAAhC,EAAwCK,IAAxC,CAA6C,UAAAC,QAAQ,EAAI;AAErD,cAAI,CAACnC,OAAL,GAAemC,QAAQ,CAACzC,IAAT,CAAcA,IAA7B;AAEH,OAJD;AAMH,KA7FI;AA8FLgD,cA9FK,sBA8FMb,MA9FN,EA8Fc;AAAA;;AAEfC,kDAAK,CAACC,GAAN,CAAU,KAAKxB,GAAL,CAASoC,MAAT,CAAgBV,IAA1B,EAAgCJ,MAAhC,EAAwCK,IAAxC,CAA6C,UAAAC,QAAQ,EAAI;AAErD,cAAI,CAAClC,OAAL,GAAekC,QAAQ,CAACzC,IAAT,CAAcA,IAA7B;AAEH,OAJD;AAMH,KAtGI;AAuGLkD,iBAvGK,yBAuGSf,MAvGT,EAuGiB;AAAA;;AAElBC,kDAAK,CAACC,GAAN,CAAU,KAAKxB,GAAL,CAASsC,SAAT,CAAmBZ,IAA7B,EAAmCJ,MAAnC,EAA2CK,IAA3C,CAAgD,UAAAC,QAAQ,EAAI;AAExD,cAAI,CAACjC,UAAL,GAAkBiC,QAAQ,CAACzC,IAAT,CAAcA,IAAhC;AAEH,OAJD;AAMH,KA/GI;AAgHLoD,sBAhHK,gCAgHe;AAAA;;AAEhB,UAAIC,UAAU,GAAG,KAAKxC,GAAL,CAASyC,cAAT,CAAwBf,IAAzC;AAEAH,kDAAK,CAACC,GAAN,CAAUgB,UAAV,EAAsBb,IAAtB,CAA2B,UAAAC,QAAQ,EAAI;AAEnC,cAAI,CAAC/B,eAAL,GAAuB+B,QAAQ,CAACzC,IAAT,CAAcA,IAArC;AAEH,OAJD;AAMH,KA1HI;AA2HLuD,qBA3HK,+BA2Hc;AAAA;;AAEf,UAAIF,UAAU,GAAG,KAAKxC,GAAL,CAAS2C,aAAT,CAAuBjB,IAAxC;AAEAH,kDAAK,CAACC,GAAN,CAAUgB,UAAV,EAAsBb,IAAtB,CAA2B,UAAAC,QAAQ,EAAI;AAEnC,cAAI,CAAC9B,cAAL,GAAsB8B,QAAQ,CAACzC,IAAT,CAAcA,IAApC;AAEH,OAJD;AAMH,KArII;AAsILyD,oBAtIK,8BAsIa;AAAA;;AAEd,UAAIJ,UAAU,GAAG,KAAKxC,GAAL,CAAS6C,WAAT,CAAqBnB,IAAtC;AAEAH,kDAAK,CAACC,GAAN,CAAUgB,UAAV,EAAsBb,IAAtB,CAA2B,UAAAC,QAAQ,EAAI;AAEnC,cAAI,CAAC7B,aAAL,GAAqB6B,QAAQ,CAACzC,IAA9B;AAEH,OAJD;AAMH,KAhJI;AAiJL2D,kBAjJK,0BAiJUC,MAjJV,EAiJkBC,OAjJlB,EAiJ0B;AAE3B,UAAIC,aAAa,GAAG;AAEhB3B,cAAM,EAAE;AACJyB,gBAAM,EAAEA;AADJ;AAFQ,OAApB,CAF2B,CAU3B;;AACA,WAAK1B,WAAL,CAAiB4B,aAAjB;AAEH,KA9JI;AA+JLC,oBA/JK,4BA+JYH,MA/JZ,EA+JoBC,OA/JpB,EA+J4B;AAE7B,UAAIC,aAAa,GAAG;AAEhB3B,cAAM,EAAE;AACJyB,gBAAM,EAAEA;AADJ;AAFQ,OAApB,CAF6B,CAU7B;;AACA,WAAKhB,aAAL,CAAmBkB,aAAnB;AAEH,KA5KI;AA6KLE,iBA7KK,yBA6KSJ,MA7KT,EA6KiBC,OA7KjB,EA6KyB;AAE1B,UAAIC,aAAa,GAAG;AAEhB3B,cAAM,EAAE;AACJyB,gBAAM,EAAEA;AADJ;AAFQ,OAApB,CAF0B,CAU1B;;AACA,WAAKZ,UAAL,CAAgBc,aAAhB;AAEH,KA1LI;AA2LLG,oBA3LK,4BA2LYtE,IA3LZ,EA2LkBuE,OA3LlB,EA2L2BC,KA3L3B,EA2LkCC,cA3LlC,EA2LkDC,QA3LlD,EA2L2D;AAE5D,UAAIpE,QAAQ,GAAG,EAAf;AAEA,UAAIqE,KAAK,GAAG,CAAZ;;AAEA,UAAGD,QAAH,EAAY;AAERC,aAAK,GAAG,CAAR;AAEH;;AAED,UAAGF,cAAH,EAAkB;AAEdnE,gBAAQ,GAAG,KAAKsE,GAAL,CAAS,YAAYH,cAAZ,GAA6B,QAAtC,EAAgDE,KAAhD,CAAX;AAEH,OAJD,MAKI;AAEArE,gBAAQ,GAAG,KAAKsE,GAAL,CAAS,YAAY,KAAKtE,QAAjB,GAA4B,QAArC,EAA+CqE,KAA/C,CAAX;AAEH;;AAED,UAAIzE,KAAK,GAAG,KAAKC,EAAL,CAAQ,cAAcH,IAAtB,CAAZ;AAEA,UAAI6E,IAAI,GAAG,KAAKD,GAAL,CAAS,cAAcL,OAAvB,EAAgCI,KAAhC,EAAuC;AAAErE,gBAAQ,EAAEA;AAAZ,OAAvC,CAAX;AAEA,WAAKwE,GAAL,CAASC,MAAT,CACI;AACI7E,aAAK,EAAEA,KADX;AAEI2E,YAAI,EAAGA,IAFX;AAGIL,aAAK,EAAEA;AAHX,OADJ;AAQH,KA9NI;AA+NLQ,cA/NK,sBA+NMC,OA/NN,EA+Nc;AAEf;AACA,aAAO,KAAKA,OAAL,CAAP;AAEH,KApOI;AAqOLC,iBArOK,yBAqOSD,OArOT,EAqOiB;AAElB,UAAIE,UAAU,GAAG,EAAjB;AAEAF,aAAO,CAACG,OAAR,CAAgB,UAASC,MAAT,EAAgB;AAE5BF,kBAAU,CAAC9C,IAAX,CAAgBgD,MAAM,CAACC,EAAvB;AAEH,OAJD;AAMA,aAAOH,UAAP;AAEH,KAjPI;AAkPLI,gBAlPK,wBAkPQC,MAlPR,EAkPe;AAEhB,WAAK1E,cAAL,GAAsB0E,MAAtB;AAEH,KAtPI;AAuPLC,kBAvPK,4BAuPW;AAEZ;AACAhG,uDAAQ,CAACiG,GAAT,CAAa,iBAAb,EAAgC,KAAKH,YAArC;AAEH,KA5PI;AA6PLI,eA7PK,uBA6POC,IA7PP,EA6PaC,MA7Pb,EA6PqBC,iBA7PrB,EA6PwC;AACzC,UAAIC,YAAY,GAAG,IAAIC,IAAJ,CAASJ,IAAT,CAAnB;AACA,UAAIK,OAAO,GAAGF,YAAY,CAACG,OAAb,EAAd;AACA,UAAIC,SAAS,GAAGJ,YAAY,CAACK,QAAb,KAAwB,CAAxC;AACA,UAAIC,QAAQ,GAAGN,YAAY,CAACO,WAAb,EAAf;;AAEA,UAAGL,OAAO,GAAG,EAAb,EAAgB;AACZA,eAAO,GAAG,MAAMA,OAAhB;AACH;;AAED,UAAGE,SAAS,GAAG,EAAf,EAAkB;AACdA,iBAAS,GAAG,MAAMA,SAAlB;AACH;;AAED,UAAII,SAAS,GAAG,GAAhB;;AAEA,UAAGT,iBAAiB,KAAKU,SAAzB,EAAmC;AAE/BD,iBAAS,GAAGT,iBAAZ;AAEH;;AAED,UAAGD,MAAM,KAAK,OAAd,EAAsB;AAElB,eAAOI,OAAO,GAAGM,SAAV,GAAsBJ,SAAtB,GAAkCI,SAAlC,GAA8CF,QAArD;AAEH,OAJD,MAKI;AAEA,eAAOA,QAAQ,GAAGE,SAAX,GAAuBJ,SAAvB,GAAmCI,SAAnC,GAA+CN,OAAtD;AAEH;AAEJ,KA9RI;AA+RLQ,gBA/RK,0BA+RS;AAEV,UAAIC,KAAK,GAAG,KAAKA,KAAjB;AAEA,UAAIC,OAAO,GAAGD,KAAK,CAACE,aAAN,GAAsB,GAAtB,GAA4BF,KAAK,CAACG,gBAAlC,GAAqD,IAArD,GAA4DH,KAAK,CAACI,WAAlE,GAAgF,GAAhF,GAAsFJ,KAAK,CAACK,WAA5F,GAA0G,IAA1G,GAAiHL,KAAK,CAACM,IAAvH,GAA8H,IAA9H,GAAqIN,KAAK,CAACO,QAA3I,GAAsJ,IAAtJ,GAA6JP,KAAK,CAACQ,OAAjL;AAEA,aAAOP,OAAP;AAEH;AAvSI,GAxCM;AAiVfQ,SAjVe,qBAiVL;AAEN;AACA,SAAK1B,cAAL;AAEH,GAtVc;AAuVf2B,SAAO,EAAE,mBAAU,CAElB;AAzVc,CAAnB;AA6VezH,yEAAf,E;;;;;;;;;;;;ACzWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;CAGA;;AACO,IAAM0H,YAAY,GAAG,CAExB;AACInH,OAAK,EAAE,SADX;AAEIsB,MAAI,EAAE;AAFV,CAFwB,EAMxB;AACItB,OAAK,EAAE,WADX;AAEIsB,MAAI,EAAE;AAFV,CANwB,CAArB,C,CAaP;;AACO,IAAMjB,KAAK,GAAG;AAEbL,OAAK,EAAE,SAFM;AAGboH,aAAW,EAAE,SAHA;AAIbC,mBAAiB,EAAE,EAJN;AAKbC,WAAS,EAAE,EALE;AAMbC,iBAAe,EAAE,EANJ;AAObC,cAAY,EAAE,EAPD;AAQbC,OAAK,EAAE,MARM;AASbC,eAAa,EAAE,KATF;AAUbC,UAAQ,EAAE,KAVG;AAWbrG,MAAI,EAAE,SAXO;AAYbsG,YAAU,EAAE,GAZC;AAabC,YAAU,EAAE,GAbC;AAcbC,QAAM,EAAE,KAdK;AAebC,YAAU,EAAE,EAfC;AAgBbC,cAAY,EAAE,EAhBD;AAiBblI,MAAI,EAAEqH,YAAY,CAAC,CAAD,CAAZ,CAAgB7F,IAjBT;AAkBbX,YAAU,EAAE,EAlBC;AAmBbH,YAAU,EAAE,EAnBC;AAoBb8E,QAAM,EAAE;AApBK,CAAd,C,CAwBP;;AACO,IAAM2C,WAAW,GAAG;AAEvBxF,SAAO,EAAE;AAELzC,SAAK,EAAE;AACHkI,cAAQ,EAARA,iEAAQA;AADL,KAFF;AAKLd,eAAW,EAAE;AACTc,cAAQ,EAARA,iEAAQA;AADC,KALR;AAQLT,SAAK,EAAE;AACHS,cAAQ,EAARA,iEAAQA;AADL,KARF;AAWLR,iBAAa,EAAE;AACXQ,cAAQ,EAARA,iEAAQA;AADG,KAXV;AAcLN,cAAU,EAAE;AACRM,cAAQ,EAARA,iEAAQA;AADA,KAdP;AAiBLL,cAAU,EAAE;AACRK,cAAQ,EAARA,iEAAQA;AADA;AAjBP,GAFc;AAwBvBC,oBAAkB,EAAE;AAChBD,YAAQ,EAARA,iEAAQA;AADQ;AAxBG,CAApB,C;;;;;;;;;;;;AC3CP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AAC3B;AACL;AAC+C;AAClC;;;AAGhE;AACmG;AACnG,gBAAgB,2GAAU;AAC1B,EAAE,0EAAM;AACR,EAAE,+EAAM;AACR,EAAE,wFAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACxCf;AAAA;AAAA,wCAAgM,CAAgB,gPAAG,EAAC,C;;;;;;;;;;;;ACApN;AAAA;AAAA;AAAA;AAA4X,CAAgB,4XAAG,EAAC,C;;;;;;;;;;;;ACAhZ;AAAA;AAAA;AAAA;AAAA;AAAA","file":"52.js","sourcesContent":["<template>\n\n    <vx-card :title=\"getFormTitle(isEditForm)\" noShadow cardBorder>\n\n        <vs-tabs class=\"px-0\">\n\n            <!-- General -->\n            <vs-tab :label=\"getFormSectionTitle('general')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('title') }}\n                            </p>\n                            <vs-input type=\"text\" class=\"w-full\" v-model=\"product.title\" />\n                            <span class=\"text-danger text-xs\" v-show=\"$v.product.description.$invalid\">{{ $t('messages.validation.invalidField') }}</span>\n                        </div>\n                    </div>\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('description') }}\n                            </p>\n                            <vs-textarea v-model=\"product.description\" class=\"mb-0\" />\n                            <span class=\"text-danger text-xs\" v-show=\"$v.product.description.$invalid\">{{ $t('messages.validation.invalidField') }}</span>\n                        </div>\n                    </div>\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('short_description') }}\n                            </p>\n                            <vs-textarea v-model=\"product.short_description\" class=\"mb-0\" />\n                        </div>\n                    </div>\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('slug') }}\n                            </p>\n                            <vs-input type=\"text\" class=\"w-full\" v-model=\"product.slug\" />\n                        </div>\n                    </div>\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('slug') }}\n                            </p>\n                            <vs-select\n                                    class=\"w-full\"\n                                    v-model=\"product.status\"\n                            >\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.title\" v-for=\"item,index in statuses\" />\n                            </vs-select>\n                        </div>\n                    </div>\n                </div>\n            </vs-tab>\n\n\n\n            <!-- Price -->\n            <vs-tab :label=\"getFormSectionTitle('price')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('price') }}\n                            </p>\n                            <vs-input\n                                    type=\"number\"\n                                    class=\"w-full\"\n                                    v-model=\"product.price\"\n                                    :danger=\"$v.product.price.$invalid\"\n                                    val-icon-danger=\"close\"\n                            />\n                            <span class=\"text-danger text-xs\" v-show=\"$v.product.price.$invalid\">{{ $t('messages.validation.invalidField') }}</span>\n                        </div>\n                        <div class=\"vx-col\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('company_price') }}\n                            </p>\n                            <vs-input\n                                    type=\"number\"\n                                    class=\"w-full\"\n                                    v-model=\"product.company_price\"\n                                    :danger=\"$v.product.company_price.$invalid\"\n                                    val-icon-danger=\"close\"\n                            />\n                            <span class=\"text-danger text-xs\" v-show=\"$v.product.company_price.$invalid\">{{ $t('messages.validation.invalidField') }}</span>\n                        </div>\n                    </div>\n                </div>\n            </vs-tab>\n\n\n\n            <!-- Connections -->\n            <vs-tab :label=\"getFormSectionTitle('connections')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('producentId') }}\n                            </p>\n                            <vs-select\n                                    class=\"w-full\"\n                                    v-model=\"product.producent_id\"\n                            >\n                                <vs-select-item :key=\"index\" :value=\"item.id\" :text=\"item.title\" v-for=\"item,index in producents\" />\n                            </vs-select>\n                        </div>\n                    </div>\n                    <div class=\"vx-row mb-6\">\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">\n                                {{ getPropertyTitle('categories') }}\n                            </p>\n                            <v-select v-model=\"selectedCategories\" label=\"title\" multiple :options=\"categories\" :reduce=\"category => category.id\" @search=\"searchCategories\"></v-select>\n                            <span class=\"text-danger text-xs\" v-show=\"$v.selectedCategories.$invalid\">{{ $t('messages.validation.invalidField') }}</span>\n                        </div>\n                    </div>\n                </div>\n\n\n            </vs-tab>\n\n\n\n            <!-- Attributes -->\n            <vs-tab :label=\"getFormSectionTitle('attributes')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-row mb-6\">\n\n                        <div class=\"vx-col w-full\" v-show=\"productFilters.length > 0\">\n                            <div class=\"vx-row mb-3\">\n                                <div class=\"vx-col w-1/6\">\n                                    <p class=\"font-bold text-sm\">{{ getPropertyTitle('filter.title') }}</p>\n                                </div>\n                                <div class=\"vx-col w-2/3\">\n                                    <p class=\"font-bold text-sm\">{{ getPropertyTitle('filter.attributes') }}</p>\n                                </div>\n                            </div>\n                            <div class=\"vx-row mb-3\" :key=\"index\" v-for=\"filter,index in productFilters\">\n                                <div class=\"vx-col w-1/6\">\n                                    <p class=\"font-bold text-sm\">{{ filter.name }}</p>\n                                </div>\n                                <div class=\"vx-col w-2/3\">\n\n                                    <v-select v-model=\"filter.selected\"\n                                              label=\"name\"\n                                              multiple\n                                              :key=\"filter.name\"\n                                              :options=\"filter.attributes\"\n                                              :reduce=\"attribute => ({id: attribute.id, name: attribute.name})\"\n                                    ></v-select>\n\n                                </div>\n                                <div class=\"vx-col w-1/6\">\n                                    <vs-button color=\"danger\" icon=\"delete\" @click=\"removeFilter(index)\"></vs-button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"vx-col w-full\">\n                            <div class=\"vx-row\">\n                                <div class=\"vx-col w-2/3 mb-3\">\n                                    <p class=\"font-bold text-sm mb-3\">{{ getPropertyTitle('filter.search') }}</p>\n                                    <v-select v-model=\"selectedFilter\" label=\"name\" :options=\"filters\" :reduce=\"filter => ({id: filter.id, name: filter.name, attributes: filter.attributes})\" @search=\"searchFilters\"></v-select>\n                                </div>\n                                <div class=\"vx-col w-1/3 mb-3 flex items-end\">\n                                    <vs-button @click=\"addFilter()\">{{ $t('actions.addNew') }}</vs-button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </vs-tab>\n\n\n\n            <!-- Images -->\n            <vs-tab :label=\"getFormSectionTitle('images')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-row mb-0\">\n                        <div class=\"vx-col w-full\">\n                            <image-upload multiple v-model=\"selectedImages\"></image-upload>\n                        </div>\n                    </div>\n                </div>\n            </vs-tab>\n\n\n\n            <!-- SEO -->\n            <vs-tab :label=\"getFormSectionTitle('seo')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-col w-full\">\n                        <div class=\"vx-row mb-6\">\n                            <div class=\"vx-col w-full\">\n                                <p class=\"font-bold text-sm mb-2\">\n                                    {{ getPropertyTitle('seoTitle') }}\n                                </p>\n                                <vs-input type=\"text\" class=\"w-full\" v-model=\"product.seo_title\" />\n                            </div>\n                        </div>\n                        <div class=\"vx-row mb-6\">\n                            <div class=\"vx-col w-full\">\n                                <p class=\"font-bold text-sm mb-2\">\n                                    {{ getPropertyTitle('seoDescription') }}\n                                </p>\n                                <vs-textarea v-model=\"product.seo_description\" class=\"mb-0\" />\n                            </div>\n                        </div>\n                        <div class=\"vx-row mb-6\">\n                            <div class=\"vx-col w-full\">\n                                <p class=\"font-bold text-sm mb-2\">\n                                    {{ getPropertyTitle('seoKeywords') }}\n                                </p>\n                                <vs-textarea v-model=\"product.seo_keywords\" class=\"mb-0\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </vs-tab>\n\n            <!-- Product versions -->\n            <vs-tab :label=\"getFormSectionTitle('versions')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-col w-full\">\n                        <div class=\"vx-row mb-3\" v-show=\"versions.length > 0\">\n                            <div class=\"vx-col w-2/3\">\n                                <p class=\"font-bold text-sm\">{{ getPropertyTitle('version.title') }}</p>\n                            </div>\n                            <div class=\"vx-col w-1/6\">\n                                <p class=\"font-bold text-sm\">{{ getPropertyTitle('version.price') }}</p>\n                            </div>\n                            <div class=\"vx-col w-1/6\">\n                                <p class=\"font-bold text-sm\">{{ getPropertyTitle('version.actions') }}</p>\n                            </div>\n                        </div>\n                        <div class=\"vx-row mb-3 items-center\" :key=\"index\" v-for=\"version,index in versions\">\n                            <div class=\"vx-col w-2/3\">\n                                <p>{{ version.title }}</p>\n                            </div>\n                            <div class=\"vx-col w-1/6\">\n                                <p>{{ version.price + ' ' + defaultCurrency }}</p>\n                            </div>\n                            <div class=\"vx-col w-1/6\">\n                                <vs-button color=\"danger\" icon=\"delete\" @click=\"removeVersion(version.id)\"></vs-button>\n                            </div>\n                        </div>\n                        <div class=\"vx-row\">\n                            <div class=\"vx-col w-2/3 mb-3\">\n                                <p class=\"font-bold text-sm mb-3\">{{ getPropertyTitle('version.search') }}</p>\n                                <v-select v-model=\"selectedVersion\" label=\"title\" :options=\"products\" :reduce=\"version => ({id: version.id, title: version.title, price: version.price})\" @search=\"searchProducts\"></v-select>\n                            </div>\n                            <div class=\"vx-col w-1/3 mb-3 flex items-end\">\n                                <vs-button @click=\"addVersion()\">{{ $t('actions.addNew') }}</vs-button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </vs-tab>\n\n            <!-- Settings -->\n            <vs-tab :label=\"getFormSectionTitle('settings')\">\n                <div class=\"con-tab pt-3\">\n                    <div class=\"vx-col w-full\">\n                        <div class=\"vx-row mb-6\">\n                            <div class=\"vx-col w-25\">\n                                <p class=\"font-bold text-sm mb-2\">\n                                    {{ getPropertyTitle('viewCount') }}\n                                </p>\n                                <div class=\"w-2/3\">\n                                    <vs-input-number min=\"0\" v-model=\"product.view_count\"/>\n                                </div>\n                                <span class=\"text-danger text-xs\" v-show=\"$v.product.view_count.$invalid\">{{ $t('messages.validation.invalidField') }}</span>\n                            </div>\n                            <div class=\"vx-col w-25\">\n                                <p class=\"font-bold text-sm mb-2\">\n                                    {{ getPropertyTitle('likeCount') }}\n                                </p>\n                                <div class=\"w-2/3\">\n                                    <vs-input-number min=\"0\" v-model=\"product.like_count\"/>\n                                </div>\n                                <span class=\"text-danger text-xs\" v-show=\"$v.product.like_count.$invalid\">{{ $t('messages.validation.invalidField') }}</span>\n                            </div>\n                        </div>\n                        <div class=\"vx-row mb-6\">\n                            <div class=\"vx-col w-full\">\n                                <p class=\"font-bold text-sm mb-2\">\n                                    {{ getPropertyTitle('type') }}\n                                </p>\n                                <vs-select\n                                        class=\"w-full\"\n                                        v-model=\"product.type\"\n                                >\n                                    <vs-select-item :key=\"index\" :value=\"item.slug\" :text=\"item.title\" v-for=\"item,index in types\" />\n                                </vs-select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </vs-tab>\n        </vs-tabs>\n\n        <!-- Actions -->\n        <div class=\"vx-row\">\n            <div class=\"vx-col w-full\">\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"!isEditForm\">{{ $t('actions.create') }}</vs-button>\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"isEditForm\">{{ $t('actions.update') }}</vs-button>\n                <vs-button color=\"danger\" type=\"border\" class=\"mb-2\" :to=\"{ name: indexRoute }\">{{ $t('actions.cancel') }}</vs-button>\n            </div>\n        </div>\n\n    </vx-card>\n\n</template>\n<script>\n\n    //Library for working with requests\n    import axios from 'axios';\n\n    //Event bus for sending and processing global events\n    import EventBus from '../../EventBus';\n\n    //Product model, validations and types\n    import { model, validations, productTypes } from \"@/static/product/product\";\n\n    //Form helper functions\n    import formHelper from \"@/mixins/forms/helper\";\n\n    //Vuesax card component\n    import VxCard from \"../../components/vx-card/VxCard\";\n\n    //Image manager\n    import ImageUpload from '../../components/images/ImageUpload';\n\n    //Vue select\n    import vSelect from 'vue-select'\n\n    export default {\n        components: {VxCard, ImageUpload, vSelect},\n        mixins: [ formHelper ],\n        props: {\n            isEditForm: Boolean,\n            formModel: {\n\n                type: String,\n                default: 'product'\n\n            },\n            indexRoute: {\n\n                type: String,\n                default: 'products'\n\n            },\n            statuses: {\n                type: Array,\n                default: function() {\n\n                    return [\n\n                        {\n                            title: 'Published',\n                            value: true\n                        },\n                        {\n                            title: 'Hidden',\n                            value: false\n                        }\n\n                    ];\n\n                }\n            }\n        },\n        data() {\n\n            return {\n\n                product: model,\n                defaultCurrency: applicationParams.defaultCurrency,\n                selectedCategories: [],\n                selectedFilter: {},\n                selectedImages: [],\n                productFilters: [],\n                types: productTypes,\n                versions: [],\n                selectedVersion: {\n                    id: '',\n                    title: ''\n                }\n\n            }\n\n        },\n        validations: validations,\n        methods: {\n            //Products\n            createProduct(){\n\n                //Prepare product data\n                this.assembleProduct();\n\n                let requestParams = this.product;\n\n                axios.post(this.API[this.instance].create, requestParams).then(response => {\n\n                    if(response.data.message === 'success'){\n\n                        this.showNotification('success', 'request.createdSuccess', 'success');\n\n                        let id = response.data.id;\n\n                        //Refresh the form\n                        this.getSingleProduct(id);\n\n                        //Save product versions\n                        this.createVersions(id);\n\n                        //Change the form type\n                        this.isEditForm = true;\n\n                    }\n                    else{\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n\n                });\n\n            },\n            updateProduct(){\n\n                //Prepare product data\n                this.assembleProduct();\n\n                let requestParams = this.product;\n\n                let product_id = this.product.id;\n\n                axios.put(this.API[this.instance].update + '/' + product_id, requestParams).then(response => {\n\n                    if(response.data === 'success'){\n\n                        this.showNotification('success', 'request.updatedSuccess', 'success');\n\n                    }\n                    else{\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n\n                });\n\n            },\n            getSingleProduct(id){\n\n                let product_id = id;\n\n                if(id === undefined){\n\n                    product_id = this.$route.params.productId;\n\n                }\n\n                let requestParams = {\n\n                    params: {\n\n                        product_id: product_id\n\n                    }\n\n                };\n\n                axios.get(this.API[this.instance].single, requestParams).then(response => {\n                    this.product = response.data;\n                    this.selectedCategories = this.normalizeData(response.data.categories);\n                    this.selectedProducent = response.data.producent;\n                    this.versions = response.data.children;\n                    this.updateImages(response.data.images);\n                    this.prepareAttributes();\n                });\n\n            },\n            assembleProduct(){\n\n                const product = this.product;\n\n                //Images\n                product.images = [];\n\n                this.selectedImages.forEach(function(image){\n\n                    product.images.push(image.id);\n\n                });\n\n                //Categories\n                product.categories = this.selectedCategories;\n\n                //Attributes\n                let attributes = [];\n\n                this.productFilters.forEach(function(filter){\n\n                    filter.selected.forEach(function(attribute){\n\n                        attributes.push(attribute.id);\n\n                    });\n\n                });\n\n                this.product.attributes = attributes;\n\n\n            },\n            //Product versions\n            addVersion(){\n\n                let versionId = this.selectedVersion.id;\n\n                //Push selected version to versions\n                if(versionId !== ''){\n\n                    let exisitngVersion = this.versions.find(function (item) {\n\n                        return item.id === versionId;\n\n                    });\n\n                    if(exisitngVersion === undefined){\n\n                        let productId = this.product.id;\n\n                        if(productId !== versionId || productId === undefined){\n\n                            this.versions.push(this.selectedVersion);\n\n                            if(this.isEditForm){\n\n                                //Save a version\n                                this.saveVersion(productId, versionId);\n\n                            }\n\n                        }\n\n                    }\n\n                }\n\n            },\n            removeVersion(id){\n\n                let version = this.versions.find(function(item){\n\n                    return item.id === id;\n\n                });\n\n                let position = this.versions.indexOf(version);\n\n                if(this.isEditForm){\n\n                    let requestBase = this.API[this.instance].update;\n\n                    let requestUrl = requestBase + '/' + version.id;\n\n                    let requestParams = {\n\n                        product_id: null\n\n                    };\n\n                    axios.put(requestUrl, requestParams).then(\n                        response => {\n\n                            if (response.data === 'success') {\n\n                                this.showNotification('success', 'request.removedSuccess', 'success', 'productVersion');\n\n                            }\n\n                        })\n                        .catch(\n                            error => {\n\n                                this.showNotification('success', 'request.error', 'danger');\n\n                            }\n                        );\n\n                }\n\n                this.versions.splice(position, 1);\n\n            },\n            createVersions(id){\n\n                let product_id = id;\n\n                this.versions.forEach(function(version){\n\n                    //Save a version\n                    this.saveVersion(product_id, version.id)\n\n                });\n\n            },\n            saveVersion(product_id, version_id){\n\n                let requestBase = this.API[this.instance].update;\n\n                let requestUrl = requestBase + '/' + version_id;\n\n                let requestParams = {\n\n                    product_id: product_id\n\n                };\n\n                axios.put(requestUrl, requestParams).then(\n                    response => {\n\n                        if (response.data === 'success') {\n\n                            this.showNotification('success', 'request.addedSuccess', 'success', 'productVersion');\n\n                        }\n\n                    })\n                    .catch(\n                        error => {\n\n                            this.showNotification('success', 'request.error', 'danger');\n\n                        }\n                    );\n\n            },\n            //Filters and attributes\n            addFilter(){\n\n                let selectedFilter = this.selectedFilter;\n\n                let filterId = selectedFilter.id;\n\n                let filter = {\n                    id: filterId,\n                    name: selectedFilter.name,\n                    attributes: selectedFilter.attributes,\n                    selected: []\n                };\n\n                //Push selected filter to the list of product filters\n                if(filterId !== ''){\n\n                    let exisitngFilter = this.productFilters.find(function (item) {\n\n                        return item.id === filterId;\n\n                    });\n\n                    if(exisitngFilter === undefined){\n\n                        this.productFilters.push(filter);\n\n                    }\n\n                }\n\n            },\n            removeFilter(index){\n\n                let filter = this.productFilters[index];\n\n                filter.selected = [];\n\n                this.productFilters.splice(index, 1);\n\n            },\n            prepareAttributes(){\n\n                let filters = [];\n\n                this.product.attributes.forEach(function (attribute) {\n\n                    let attributeItem = {\n                        id: attribute.id,\n                        name: attribute.name\n                    };\n\n                    let filter = attribute.filter;\n\n                    let existingFilter = filters.find(function(item){\n\n                        return item.id === filter.id;\n\n                    });\n\n                    if(existingFilter === undefined){\n\n                        filters.push({\n                            id: filter.id,\n                            name: filter.name,\n                            attributes: filter.attributes,\n                            selected: [attributeItem]\n                        });\n\n                    }\n                    else{\n\n                        existingFilter.selected.push(attributeItem);\n\n                    }\n\n                });\n\n                this.productFilters = filters;\n\n            },\n            //Images\n            removeImage(id){\n\n                let selectedImages = this.selectedImages;\n\n                let existingImage = selectedImages.find(function(item){\n\n                    return item.id === id;\n\n                });\n\n                if(existingImage){\n\n                    let  position = selectedImages.indexOf(existingImage);\n\n                    selectedImages.splice(position, 1);\n\n                    this.sendEvents();\n\n                }\n\n            },\n            sendEvents(){\n\n                //Send events\n                EventBus.$emit('images-changed', this.selectedImages);\n\n            },\n            listenEvents(){\n\n                //Listen to the events\n                EventBus.$on('images-selected', this.updateImages);\n\n            },\n            updateImages(images){\n\n                this.selectedImages = images;\n\n            },\n            loadData(){\n\n                //Get producents list\n                this.getProducents();\n\n                //Get filter list with attributes\n                this.getFilters();\n\n                //Get categories list\n                this.getCategories();\n\n                //Get list of products\n                this.searchProducts();\n\n                //Get the product for editing\n                if(this.isEditForm){\n\n                    this.getSingleProduct();\n\n                }\n\n            },\n            submitForm() {\n\n                if(!this.$v.$invalid){\n\n                    if(this.isEditForm){\n\n                        this.updateProduct();\n\n                    }\n                    else{\n\n                        this.createProduct();\n\n                    }\n\n                }\n                else{\n\n                    this.showNotification('error', 'validation.invalidForm', 'danger');\n\n                }\n\n            }\n        },\n        mounted() {\n\n            //Load necessary data\n            this.loadData();\n\n        },\n        created: function () {\n\n            //Set an instance for the form rendering\n            this.setInstance(this.formModel);\n\n            //Listen to the events\n            this.listenEvents();\n\n        }\n\n    }\n\n</script>\n\n\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n\n\n<style>\n    .abr-form-images .abr-form-image{\n        width: 24%;\n        height: 200px;\n        margin-right: 1%;\n        margin-bottom: 20px;\n        position: relative;\n    }\n    .abr-form-images .abr-form-image img{\n        height: 100%;\n    }\n    .abr-form-images .abr-form-image .abr-image-btn{\n        width: 35px;\n        height: 35px;\n        color: white;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: absolute;\n        top: 0.5rem;\n        right: 0.5rem;\n        cursor: pointer;\n    }\n    body .con-vs-tabs, body .con-vs-tabs .con-slot-tabs{\n        overflow: visible;\n    }\n</style>","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".abr-form-images .abr-form-image{\\n  width: 24%;\\n  height: 200px;\\n  margin-right: 1%;\\n  margin-bottom: 20px;\\n  position: relative;\\n}\\n.abr-form-images .abr-form-image img{\\n  height: 100%;\\n}\\n.abr-form-images .abr-form-image .abr-image-btn{\\n  width: 35px;\\n  height: 35px;\\n  color: white;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: absolute;\\n  top: 0.5rem;\\n  right: 0.5rem;\\n  cursor: pointer;\\n}\\nbody .con-vs-tabs, body .con-vs-tabs .con-slot-tabs{\\n  overflow: visible;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--9-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=1&lang=css&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--9-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=1&lang=css&\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--9-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=1&lang=css&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    {\n      attrs: {\n        title: _vm.getFormTitle(_vm.isEditForm),\n        noShadow: \"\",\n        cardBorder: \"\"\n      }\n    },\n    [\n      _c(\n        \"vs-tabs\",\n        { staticClass: \"px-0\" },\n        [\n          _c(\n            \"vs-tab\",\n            { attrs: { label: _vm.getFormSectionTitle(\"general\") } },\n            [\n              _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.getPropertyTitle(\"title\")) +\n                            \"\\n                        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-input\", {\n                        staticClass: \"w-full\",\n                        attrs: { type: \"text\" },\n                        model: {\n                          value: _vm.product.title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.product, \"title\", $$v)\n                          },\n                          expression: \"product.title\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.$v.product.description.$invalid,\n                              expression: \"$v.product.description.$invalid\"\n                            }\n                          ],\n                          staticClass: \"text-danger text-xs\"\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.getPropertyTitle(\"description\")) +\n                            \"\\n                        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-textarea\", {\n                        staticClass: \"mb-0\",\n                        model: {\n                          value: _vm.product.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.product, \"description\", $$v)\n                          },\n                          expression: \"product.description\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.$v.product.description.$invalid,\n                              expression: \"$v.product.description.$invalid\"\n                            }\n                          ],\n                          staticClass: \"text-danger text-xs\"\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.getPropertyTitle(\"short_description\")) +\n                            \"\\n                        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-textarea\", {\n                        staticClass: \"mb-0\",\n                        model: {\n                          value: _vm.product.short_description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.product, \"short_description\", $$v)\n                          },\n                          expression: \"product.short_description\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.getPropertyTitle(\"slug\")) +\n                            \"\\n                        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-input\", {\n                        staticClass: \"w-full\",\n                        attrs: { type: \"text\" },\n                        model: {\n                          value: _vm.product.slug,\n                          callback: function($$v) {\n                            _vm.$set(_vm.product, \"slug\", $$v)\n                          },\n                          expression: \"product.slug\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.getPropertyTitle(\"slug\")) +\n                            \"\\n                        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"vs-select\",\n                        {\n                          staticClass: \"w-full\",\n                          model: {\n                            value: _vm.product.status,\n                            callback: function($$v) {\n                              _vm.$set(_vm.product, \"status\", $$v)\n                            },\n                            expression: \"product.status\"\n                          }\n                        },\n                        _vm._l(_vm.statuses, function(item, index) {\n                          return _c(\"vs-select-item\", {\n                            key: index,\n                            attrs: { value: item.value, text: item.title }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\"vs-tab\", { attrs: { label: _vm.getFormSectionTitle(\"price\") } }, [\n            _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n              _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"vx-col\" },\n                  [\n                    _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                      _vm._v(\n                        \"\\n                            \" +\n                          _vm._s(_vm.getPropertyTitle(\"price\")) +\n                          \"\\n                        \"\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"vs-input\", {\n                      staticClass: \"w-full\",\n                      attrs: {\n                        type: \"number\",\n                        danger: _vm.$v.product.price.$invalid,\n                        \"val-icon-danger\": \"close\"\n                      },\n                      model: {\n                        value: _vm.product.price,\n                        callback: function($$v) {\n                          _vm.$set(_vm.product, \"price\", $$v)\n                        },\n                        expression: \"product.price\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.$v.product.price.$invalid,\n                            expression: \"$v.product.price.$invalid\"\n                          }\n                        ],\n                        staticClass: \"text-danger text-xs\"\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"vx-col\" },\n                  [\n                    _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                      _vm._v(\n                        \"\\n                            \" +\n                          _vm._s(_vm.getPropertyTitle(\"company_price\")) +\n                          \"\\n                        \"\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"vs-input\", {\n                      staticClass: \"w-full\",\n                      attrs: {\n                        type: \"number\",\n                        danger: _vm.$v.product.company_price.$invalid,\n                        \"val-icon-danger\": \"close\"\n                      },\n                      model: {\n                        value: _vm.product.company_price,\n                        callback: function($$v) {\n                          _vm.$set(_vm.product, \"company_price\", $$v)\n                        },\n                        expression: \"product.company_price\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.$v.product.company_price.$invalid,\n                            expression: \"$v.product.company_price.$invalid\"\n                          }\n                        ],\n                        staticClass: \"text-danger text-xs\"\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"vs-tab\",\n            { attrs: { label: _vm.getFormSectionTitle(\"connections\") } },\n            [\n              _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.getPropertyTitle(\"producentId\")) +\n                            \"\\n                        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"vs-select\",\n                        {\n                          staticClass: \"w-full\",\n                          model: {\n                            value: _vm.product.producent_id,\n                            callback: function($$v) {\n                              _vm.$set(_vm.product, \"producent_id\", $$v)\n                            },\n                            expression: \"product.producent_id\"\n                          }\n                        },\n                        _vm._l(_vm.producents, function(item, index) {\n                          return _c(\"vs-select-item\", {\n                            key: index,\n                            attrs: { value: item.id, text: item.title }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.getPropertyTitle(\"categories\")) +\n                            \"\\n                        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"v-select\", {\n                        attrs: {\n                          label: \"title\",\n                          multiple: \"\",\n                          options: _vm.categories,\n                          reduce: function(category) {\n                            return category.id\n                          }\n                        },\n                        on: { search: _vm.searchCategories },\n                        model: {\n                          value: _vm.selectedCategories,\n                          callback: function($$v) {\n                            _vm.selectedCategories = $$v\n                          },\n                          expression: \"selectedCategories\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.$v.selectedCategories.$invalid,\n                              expression: \"$v.selectedCategories.$invalid\"\n                            }\n                          ],\n                          staticClass: \"text-danger text-xs\"\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"vs-tab\",\n            { attrs: { label: _vm.getFormSectionTitle(\"attributes\") } },\n            [\n              _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.productFilters.length > 0,\n                          expression: \"productFilters.length > 0\"\n                        }\n                      ],\n                      staticClass: \"vx-col w-full\"\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"vx-row mb-3\" }, [\n                        _c(\"div\", { staticClass: \"vx-col w-1/6\" }, [\n                          _c(\"p\", { staticClass: \"font-bold text-sm\" }, [\n                            _vm._v(_vm._s(_vm.getPropertyTitle(\"filter.title\")))\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"vx-col w-2/3\" }, [\n                          _c(\"p\", { staticClass: \"font-bold text-sm\" }, [\n                            _vm._v(\n                              _vm._s(_vm.getPropertyTitle(\"filter.attributes\"))\n                            )\n                          ])\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(_vm.productFilters, function(filter, index) {\n                        return _c(\n                          \"div\",\n                          { key: index, staticClass: \"vx-row mb-3\" },\n                          [\n                            _c(\"div\", { staticClass: \"vx-col w-1/6\" }, [\n                              _c(\"p\", { staticClass: \"font-bold text-sm\" }, [\n                                _vm._v(_vm._s(filter.name))\n                              ])\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              { staticClass: \"vx-col w-2/3\" },\n                              [\n                                _c(\"v-select\", {\n                                  key: filter.name,\n                                  attrs: {\n                                    label: \"name\",\n                                    multiple: \"\",\n                                    options: filter.attributes,\n                                    reduce: function(attribute) {\n                                      return {\n                                        id: attribute.id,\n                                        name: attribute.name\n                                      }\n                                    }\n                                  },\n                                  model: {\n                                    value: filter.selected,\n                                    callback: function($$v) {\n                                      _vm.$set(filter, \"selected\", $$v)\n                                    },\n                                    expression: \"filter.selected\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"div\",\n                              { staticClass: \"vx-col w-1/6\" },\n                              [\n                                _c(\"vs-button\", {\n                                  attrs: { color: \"danger\", icon: \"delete\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.removeFilter(index)\n                                    }\n                                  }\n                                })\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n                    _c(\"div\", { staticClass: \"vx-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col w-2/3 mb-3\" },\n                        [\n                          _c(\"p\", { staticClass: \"font-bold text-sm mb-3\" }, [\n                            _vm._v(\n                              _vm._s(_vm.getPropertyTitle(\"filter.search\"))\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"v-select\", {\n                            attrs: {\n                              label: \"name\",\n                              options: _vm.filters,\n                              reduce: function(filter) {\n                                return {\n                                  id: filter.id,\n                                  name: filter.name,\n                                  attributes: filter.attributes\n                                }\n                              }\n                            },\n                            on: { search: _vm.searchFilters },\n                            model: {\n                              value: _vm.selectedFilter,\n                              callback: function($$v) {\n                                _vm.selectedFilter = $$v\n                              },\n                              expression: \"selectedFilter\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col w-1/3 mb-3 flex items-end\" },\n                        [\n                          _c(\n                            \"vs-button\",\n                            {\n                              on: {\n                                click: function($event) {\n                                  return _vm.addFilter()\n                                }\n                              }\n                            },\n                            [_vm._v(_vm._s(_vm.$t(\"actions.addNew\")))]\n                          )\n                        ],\n                        1\n                      )\n                    ])\n                  ])\n                ])\n              ])\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"vs-tab\",\n            { attrs: { label: _vm.getFormSectionTitle(\"images\") } },\n            [\n              _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n                _c(\"div\", { staticClass: \"vx-row mb-0\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"image-upload\", {\n                        attrs: { multiple: \"\" },\n                        model: {\n                          value: _vm.selectedImages,\n                          callback: function($$v) {\n                            _vm.selectedImages = $$v\n                          },\n                          expression: \"selectedImages\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\"vs-tab\", { attrs: { label: _vm.getFormSectionTitle(\"seo\") } }, [\n            _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n              _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.getPropertyTitle(\"seoTitle\")) +\n                            \"\\n                            \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-input\", {\n                        staticClass: \"w-full\",\n                        attrs: { type: \"text\" },\n                        model: {\n                          value: _vm.product.seo_title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.product, \"seo_title\", $$v)\n                          },\n                          expression: \"product.seo_title\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.getPropertyTitle(\"seoDescription\")) +\n                            \"\\n                            \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-textarea\", {\n                        staticClass: \"mb-0\",\n                        model: {\n                          value: _vm.product.seo_description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.product, \"seo_description\", $$v)\n                          },\n                          expression: \"product.seo_description\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"vx-col w-full\" },\n                    [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.getPropertyTitle(\"seoKeywords\")) +\n                            \"\\n                            \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-textarea\", {\n                        staticClass: \"mb-0\",\n                        model: {\n                          value: _vm.product.seo_keywords,\n                          callback: function($$v) {\n                            _vm.$set(_vm.product, \"seo_keywords\", $$v)\n                          },\n                          expression: \"product.seo_keywords\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"vs-tab\",\n            { attrs: { label: _vm.getFormSectionTitle(\"versions\") } },\n            [\n              _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"vx-col w-full\" },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.versions.length > 0,\n                            expression: \"versions.length > 0\"\n                          }\n                        ],\n                        staticClass: \"vx-row mb-3\"\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"vx-col w-2/3\" }, [\n                          _c(\"p\", { staticClass: \"font-bold text-sm\" }, [\n                            _vm._v(\n                              _vm._s(_vm.getPropertyTitle(\"version.title\"))\n                            )\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"vx-col w-1/6\" }, [\n                          _c(\"p\", { staticClass: \"font-bold text-sm\" }, [\n                            _vm._v(\n                              _vm._s(_vm.getPropertyTitle(\"version.price\"))\n                            )\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"vx-col w-1/6\" }, [\n                          _c(\"p\", { staticClass: \"font-bold text-sm\" }, [\n                            _vm._v(\n                              _vm._s(_vm.getPropertyTitle(\"version.actions\"))\n                            )\n                          ])\n                        ])\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.versions, function(version, index) {\n                      return _c(\n                        \"div\",\n                        { key: index, staticClass: \"vx-row mb-3 items-center\" },\n                        [\n                          _c(\"div\", { staticClass: \"vx-col w-2/3\" }, [\n                            _c(\"p\", [_vm._v(_vm._s(version.title))])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"vx-col w-1/6\" }, [\n                            _c(\"p\", [\n                              _vm._v(\n                                _vm._s(\n                                  version.price + \" \" + _vm.defaultCurrency\n                                )\n                              )\n                            ])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"vx-col w-1/6\" },\n                            [\n                              _c(\"vs-button\", {\n                                attrs: { color: \"danger\", icon: \"delete\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.removeVersion(version.id)\n                                  }\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ]\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"vx-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col w-2/3 mb-3\" },\n                        [\n                          _c(\"p\", { staticClass: \"font-bold text-sm mb-3\" }, [\n                            _vm._v(\n                              _vm._s(_vm.getPropertyTitle(\"version.search\"))\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"v-select\", {\n                            attrs: {\n                              label: \"title\",\n                              options: _vm.products,\n                              reduce: function(version) {\n                                return {\n                                  id: version.id,\n                                  title: version.title,\n                                  price: version.price\n                                }\n                              }\n                            },\n                            on: { search: _vm.searchProducts },\n                            model: {\n                              value: _vm.selectedVersion,\n                              callback: function($$v) {\n                                _vm.selectedVersion = $$v\n                              },\n                              expression: \"selectedVersion\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col w-1/3 mb-3 flex items-end\" },\n                        [\n                          _c(\n                            \"vs-button\",\n                            {\n                              on: {\n                                click: function($event) {\n                                  return _vm.addVersion()\n                                }\n                              }\n                            },\n                            [_vm._v(_vm._s(_vm.$t(\"actions.addNew\")))]\n                          )\n                        ],\n                        1\n                      )\n                    ])\n                  ],\n                  2\n                )\n              ])\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"vs-tab\",\n            { attrs: { label: _vm.getFormSectionTitle(\"settings\") } },\n            [\n              _c(\"div\", { staticClass: \"con-tab pt-3\" }, [\n                _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n                  _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                    _c(\"div\", { staticClass: \"vx-col w-25\" }, [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.getPropertyTitle(\"viewCount\")) +\n                            \"\\n                            \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"w-2/3\" },\n                        [\n                          _c(\"vs-input-number\", {\n                            attrs: { min: \"0\" },\n                            model: {\n                              value: _vm.product.view_count,\n                              callback: function($$v) {\n                                _vm.$set(_vm.product, \"view_count\", $$v)\n                              },\n                              expression: \"product.view_count\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.$v.product.view_count.$invalid,\n                              expression: \"$v.product.view_count.$invalid\"\n                            }\n                          ],\n                          staticClass: \"text-danger text-xs\"\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                          )\n                        ]\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"vx-col w-25\" }, [\n                      _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.getPropertyTitle(\"likeCount\")) +\n                            \"\\n                            \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"w-2/3\" },\n                        [\n                          _c(\"vs-input-number\", {\n                            attrs: { min: \"0\" },\n                            model: {\n                              value: _vm.product.like_count,\n                              callback: function($$v) {\n                                _vm.$set(_vm.product, \"like_count\", $$v)\n                              },\n                              expression: \"product.like_count\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.$v.product.like_count.$invalid,\n                              expression: \"$v.product.like_count.$invalid\"\n                            }\n                          ],\n                          staticClass: \"text-danger text-xs\"\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                          )\n                        ]\n                      )\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"vx-row mb-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"vx-col w-full\" },\n                      [\n                        _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                          _vm._v(\n                            \"\\n                                \" +\n                              _vm._s(_vm.getPropertyTitle(\"type\")) +\n                              \"\\n                            \"\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"vs-select\",\n                          {\n                            staticClass: \"w-full\",\n                            model: {\n                              value: _vm.product.type,\n                              callback: function($$v) {\n                                _vm.$set(_vm.product, \"type\", $$v)\n                              },\n                              expression: \"product.type\"\n                            }\n                          },\n                          _vm._l(_vm.types, function(item, index) {\n                            return _c(\"vs-select-item\", {\n                              key: index,\n                              attrs: { value: item.slug, text: item.title }\n                            })\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ])\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"vx-row\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"vx-col w-full\" },\n          [\n            !_vm.isEditForm\n              ? _c(\n                  \"vs-button\",\n                  {\n                    staticClass: \"mr-3 mb-2\",\n                    attrs: { color: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitForm()\n                      }\n                    }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"actions.create\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.isEditForm\n              ? _c(\n                  \"vs-button\",\n                  {\n                    staticClass: \"mr-3 mb-2\",\n                    attrs: { color: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitForm()\n                      }\n                    }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"actions.update\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"vs-button\",\n              {\n                staticClass: \"mb-2\",\n                attrs: {\n                  color: \"danger\",\n                  type: \"border\",\n                  to: { name: _vm.indexRoute }\n                }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"actions.cancel\")))]\n            )\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nexport const EventBus = new Vue();\nexport default EventBus;","//Application routes\nimport { API } from \"@/mixins/api/api\";\n\n//Library for working with requests\nimport axios from 'axios';\n\n//Event bus for sending and processing global events\nimport EventBus from '../../EventBus';\n\n//Datepicker component\nimport Datepicker from 'vuejs-datepicker';\n\nconst formHelper = {\n    components: { Datepicker },\n    props: {\n        statuses: {\n            type: Array,\n            default() {\n                return [\n                    {\n                        title: this.$t('statuses.general.published'),\n                        value: true\n                    },\n                    {\n                        title: this.$t('statuses.general.hidden'),\n                        value: false\n                    }\n                ]\n            }\n        }\n    },\n    data() {\n\n        return {\n\n            instance: '',\n            model: {},\n            products: [],\n            producents: [],\n            categories: [],\n            banners: [],\n            filters: [],\n            attributes: [],\n            selectedImages: [],\n            shippingMethods: [],\n            paymentMethods: [],\n            orderStatuses: [],\n            API\n\n        }\n\n    },\n    methods: {\n\n        setInstance(instance){\n\n            this.instance = instance;\n\n        },\n        getFormTitle(isEdit){\n\n            if(isEdit){\n\n                return this.$t('forms.' + this.instance + '.titles.edit');\n\n            }\n            else{\n\n                return this.$t('forms.' + this.instance + '.titles.create');\n\n            }\n\n        },\n        getSectionTitle(slug){\n\n            return this.$t('forms.' + this.instance + '.sections.' + slug + '.label');\n\n        },\n        //Newer and more advanced method for retrieving a form section title\n        getFormSectionTitle(slug){\n\n            return this.$t('models.' + this.instance + '.form.' + slug);\n\n        },\n        //Newer and more advanced method for retrieving a model property name\n        getPropertyTitle(property){\n\n            return this.$t('models.' + this.instance + '.properties.' + property);\n\n        },\n        getFieldLabel(section, field){\n\n            return this.$t('forms.' + this.instance + '.sections.' + section + '.fields.' + field);\n\n        },\n        validateField(field){\n\n\n            if(this.$v.model[field]){\n\n                return this.$v.model[field].$invalid;\n\n            }\n\n        },\n        redirectToIndex(route){\n\n            this.$router.push({ name: route });\n\n        },\n        getProducts(params) {\n\n            axios.get(this.API.product.list, params).then(response => {\n\n                this.products =  response.data.data\n\n            });\n\n        },\n        getProducents(params) {\n\n            axios.get(this.API.producent.list, params).then(response => {\n\n                this.producents =  response.data.data\n\n            });\n\n        },\n        getCategories(params) {\n\n            axios.get(this.API.category.list, params).then(response => {\n\n                this.categories =  response.data.data\n\n            });\n\n        },\n        getBanners(params) {\n\n            axios.get(this.API.banner.list, params).then(response => {\n\n                this.banners = response.data.data\n\n            });\n\n        },\n        getFilters(params) {\n\n            axios.get(this.API.filter.list, params).then(response => {\n\n                this.filters = response.data.data\n\n            });\n\n        },\n        getAttributes(params) {\n\n            axios.get(this.API.attribute.list, params).then(response => {\n\n                this.attributes = response.data.data\n\n            });\n\n        },\n        getShippingMethods(){\n\n            let requestUrl = this.API.shippingMethod.list;\n\n            axios.get(requestUrl).then(response => {\n\n                this.shippingMethods = response.data.data;\n\n            });\n\n        },\n        getPaymentMethods(){\n\n            let requestUrl = this.API.paymentMethod.list;\n\n            axios.get(requestUrl).then(response => {\n\n                this.paymentMethods = response.data.data;\n\n            });\n\n        },\n        getOrderStatuses(){\n\n            let requestUrl = this.API.orderStatus.list;\n\n            axios.get(requestUrl).then(response => {\n\n                this.orderStatuses = response.data;\n\n            });\n\n        },\n        searchProducts(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getProducts(requestParams);\n\n        },\n        searchCategories(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getCategories(requestParams);\n\n        },\n        searchFilters(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getFilters(requestParams);\n\n        },\n        showNotification(type, message, color, customInstance, isPlural){\n\n            let instance = '';\n\n            let count = 1;\n\n            if(isPlural){\n\n                count = 2;\n\n            }\n\n            if(customInstance){\n\n                instance = this.$tc('models.' + customInstance + '.title', count);\n\n            }\n            else{\n\n                instance = this.$tc('models.' + this.instance + '.title', count);\n\n            }\n\n            let title = this.$t('messages.' + type);\n\n            let text = this.$tc('messages.' + message, count, { instance: instance });\n\n            this.$vs.notify(\n                {\n                    title: title,\n                    text:  text,\n                    color: color\n                }\n            );\n\n        },\n        getOptions(options){\n\n            //Get the form's field options by the property name\n            return this[options];\n\n        },\n        normalizeData(options){\n\n            let normalized = [];\n\n            options.forEach(function(option){\n\n                normalized.push(option.id);\n\n            });\n\n            return normalized;\n\n        },\n        updateImages(images){\n\n            this.selectedImages = images;\n\n        },\n        listenToEvents(){\n\n            //Listen to the events\n            EventBus.$on('images-selected', this.updateImages);\n\n        },\n        convertDate(date, format, connection_string) {\n            let selectedDate = new Date(date);\n            let dateDay = selectedDate.getDate();\n            let dateMonth = selectedDate.getMonth()+1;\n            let dateYear = selectedDate.getFullYear();\n\n            if(dateDay < 10){\n                dateDay = '0' + dateDay;\n            }\n\n            if(dateMonth < 10){\n                dateMonth = '0' + dateMonth;\n            }\n\n            let connector = '-';\n\n            if(connection_string !== undefined){\n\n                connector = connection_string;\n\n            }\n\n            if(format === 'd/m/y'){\n\n                return dateDay + connector + dateMonth + connector + dateYear;\n\n            }\n            else{\n\n                return dateYear + connector + dateMonth + connector + dateDay;\n\n            }\n\n        },\n        buildAddress(){\n\n            let order = this.order;\n\n            let address = order.customer_name + ' ' + order.customer_surname + ', ' + order.address_one + '/' + order.address_two + ', ' + order.city + ', ' + order.zip_code + ', ' + order.country;\n\n            return address;\n\n        }\n    },\n    created() {\n\n        //Listen to the events\n        this.listenToEvents();\n\n    },\n    mounted: function(){\n\n    }\n\n};\n\nexport default formHelper;","//Validation library\nimport { required, minLength, between } from 'vuelidate/lib/validators';\n\n//Product types list\nexport const productTypes = [\n\n    {\n        title: 'Product',\n        slug: 'product'\n    },\n    {\n        title: 'Gift Card',\n        slug: 'gift_card'\n    }\n\n];\n\n//Product model\nexport const model = {\n\n        title: 'Testowy',\n        description: 'Testowy',\n        short_description: '',\n        seo_title: '',\n        seo_description: '',\n        seo_keywords: '',\n        price: '1000',\n        company_price: '900',\n        currency: 'RSD',\n        slug: 'testowy',\n        view_count: '0',\n        like_count: '0',\n        status: false,\n        product_id: '',\n        producent_id: '',\n        type: productTypes[0].slug,\n        attributes: [],\n        categories: [],\n        images: []\n\n};\n\n//Product validation params\nexport const validations = {\n\n    product: {\n\n        title: {\n            required\n        },\n        description: {\n            required\n        },\n        price: {\n            required\n        },\n        company_price: {\n            required\n        },\n        view_count: {\n            required\n        },\n        like_count: {\n            required\n        }\n\n    },\n    selectedCategories: {\n        required\n    }\n\n};","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=001a6476&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\nimport style0 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./Form.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/html/posebanpoklon/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('001a6476')) {\n      api.createRecord('001a6476', component.options)\n    } else {\n      api.reload('001a6476', component.options)\n    }\n    module.hot.accept(\"./Form.vue?vue&type=template&id=001a6476&\", function () {\n      api.rerender('001a6476', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/dashboard/views/products/Form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js??ref--9-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js??ref--9-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=1&lang=css&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=template&id=001a6476&\""],"sourceRoot":""}