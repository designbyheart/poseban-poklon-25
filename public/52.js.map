{"version":3,"sources":["webpack:///resources/js/dashboard/views/giftCard/Form.vue","webpack:///./resources/js/dashboard/views/giftCard/Form.vue","webpack:///./resources/js/dashboard/mixins/forms/helper.js","webpack:///./resources/js/dashboard/static/giftCard/giftCard.js","webpack:///./resources/js/dashboard/views/giftCard/Form.vue?d165","webpack:///./resources/js/dashboard/views/giftCard/Form.vue?fb9b","webpack:///./resources/js/dashboard/views/giftCard/Form.vue?48aa"],"names":["mixins","formHelper","components","ImageUpload","props","isEditForm","Boolean","formModel","type","String","indexRoute","data","formStructure","giftCardStatuses","title","$t","value","validations","methods","create","_this","assembleItem","requestParams","model","requestUrl","API","instance","axios","post","then","response","showNotification","afterCreateCallback","error","update","_this2","id","$route","params","put","component","setTimeout","redirectToIndex","setModel","Object","assign","getSingleItem","_this3","single","get","loadData","getProducts","getCategories","submitForm","$v","$invalid","mounted","created","setInstance","render","_vm","_c","_self","attrs","getFormTitle","noShadow","cardBorder","staticClass","_l","sections","item","index","key","label","getSectionTitle","slug","fields","field","getFieldLabel","danger","validateField","callback","$$v","$set","expression","_e","_v","autocomplete","multiple","on","updateIsSelected","$event","getOptions","options","valueKey","text","labelKey","_s","selectedImages","placeholder","format","directives","name","rawName","validates","color","click","to","staticRenderFns","_withStripped","Datepicker","statuses","Array","default","products","producents","categories","banners","filters","attributes","shippingMethods","paymentMethods","orderStatuses","isEdit","getFormSectionTitle","getPropertyTitle","property","section","product","list","getProducents","producent","category","getBanners","_this4","banner","getFilters","_this5","filter","getAttributes","_this6","attribute","getShippingMethods","_this7","shippingMethod","defaultSortParams","getPaymentMethods","_this8","paymentMethod","getOrderStatuses","_this9","orderStatus","searchProducts","search","loading","searchCategories","searchFilters","message","customInstance","isPlural","count","$tc","$vs","notify","normalizeData","normalized","forEach","option","push","code","status","required"],"mappings":"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","file":"52.js","sourcesContent":["<template>\n\n    <vx-card :title=\"getFormTitle(isEditForm)\" noShadow cardBorder>\n\n        <vs-tabs class=\"px-0\">\n\n            <vs-tab :label=\"getSectionTitle(item.slug)\" :key=\"index\" v-for=\"item, index in formStructure.sections\">\n\n                <div class=\"vx-row mb-6\" v-for=\"field, index in item.fields\" :key=\"index\">\n\n                    <div class=\"vx-col w-full\">\n\n                        <!-- Render inputs dynamically based on its types -->\n\n                        <!-- Input type text or number -->\n                        <vs-input\n                                v-if=\"field.type === 'text' || field.type === 'number'\"\n                                :type=\"field.type\"\n                                class=\"w-full\"\n                                :label=\"getFieldLabel(item.slug, field.model)\"\n                                v-model=\"model[field.model]\"\n                                :danger=\"validateField(field.model)\"\n                                val-icon-danger=\"close\"\n                        />\n\n                        <!-- Textarea -->\n                        <vs-textarea v-if=\"field.type === 'textarea'\" :label=\"getFieldLabel(item.slug, field.model)\" v-model=\"model[field.model]\" class=\"mb-0\" />\n\n                        <!-- Select -->\n                        <vs-select\n                                v-if=\"field.type === 'select'\"\n                                autocomplete\n                                class=\"w-full\"\n                                :label=\"getFieldLabel(item.slug, field.model)\"\n                                v-model=\"model[field.model]\"\n                                :multiple=\"field.multiple\"\n                                :is-selected.sync=\"model[field.model]\"\n                        >\n                            <vs-select-item :key=\"index\" :value=\"item[field.valueKey]\" :text=\"item[field.labelKey]\" v-for=\"item,index in getOptions(field.options)\" />\n                        </vs-select>\n\n                        <!-- Checkbox -->\n                        <vs-checkbox v-model=\"model[field.model]\" v-if=\"field.type === 'checkbox'\">{{ getFieldLabel(item.slug, field.model) }}</vs-checkbox>\n\n                        <!-- Image upload component -->\n                        <image-upload :selected-images=\"selectedImages\" v-if=\"field.type === 'imageUpload'\"></image-upload>\n\n                        <!-- Datepicker component -->\n                        <datepicker :placeholder=\"getFieldLabel(item.slug, field.model)\" v-model=\"model[field.model]\" v-if=\"field.type === 'date'\" format=\"dd.MM.yyyy\"></datepicker>\n\n                        <!-- Validation text -->\n                        <span class=\"text-danger text-xs\" v-show=\"field.validates && validateField(field.model)\">{{ $t('messages.validation.invalidField') }}</span>\n\n                    </div>\n\n                </div>\n\n            </vs-tab>\n\n        </vs-tabs>\n\n        <!-- Actions -->\n        <div class=\"vx-row\">\n            <div class=\"vx-col w-full\">\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"!isEditForm\">{{ $t('actions.create') }}</vs-button>\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"isEditForm\">{{ $t('actions.update') }}</vs-button>\n                <vs-button color=\"danger\" type=\"border\" class=\"mb-2\" :to=\"{ name: indexRoute }\">{{ $t('actions.cancel') }}</vs-button>\n            </div>\n        </div>\n\n    </vx-card>\n\n</template>\n<script>\n\n    //Library for working with requests\n    import axios from 'axios';\n\n    //Form helper functions\n    import formHelper from \"@/mixins/forms/helper\";\n\n    //Model, validations and types\n    import { model, validations, formStructure } from \"@/static/giftCard/giftCard\";\n\n    //Image manager\n    import ImageUpload from '../../components/images/ImageUpload';\n\n    export default {\n        mixins: [ formHelper ],\n        components: {ImageUpload},\n        props: {\n            isEditForm: Boolean,\n            formModel: {\n\n                type: String,\n                default: 'giftCard'\n\n            },\n            indexRoute: {\n\n                type: String,\n                default: 'giftCards'\n\n            }\n        },\n        data() {\n\n            return {\n                formStructure,\n                giftCardStatuses: [\n                    {\n                        title: this.$t('statuses.giftCard.activated'),\n                        value: true\n                    },\n                    {\n                        title: this.$t('statuses.giftCard.notActivated'),\n                        value: false\n                    }\n                ]\n            }\n\n        },\n        validations: validations,\n        methods: {\n            create(){\n\n                //Assemble an item\n                this.assembleItem();\n\n                let requestParams = this.model;\n\n                let requestUrl = this.API[this.instance].create;\n\n                axios.post(requestUrl, requestParams)\n                    .then(\n                        response => {\n\n                            if (response.data === 'success') {\n\n                                this.showNotification('success', 'request.createdSuccess', 'success');\n\n                                this.afterCreateCallback();\n\n                            }\n\n                        })\n                    .catch(\n                        error => {\n\n                            this.showNotification('error', 'request.error', 'danger');\n\n                        }\n                    );\n\n            },\n            update(){\n\n                //Assemble an item\n                this.assembleItem();\n\n                let requestParams = this.model;\n\n                let id = this.$route.params.id;\n\n                let requestUrl = this.API[this.instance].update + '/' + id;\n\n                axios.put(requestUrl, requestParams)\n                    .then(\n                        response => {\n\n                            if (response.data === 'success') {\n\n                                this.showNotification('success', 'request.updatedSuccess', 'success');\n\n                            }\n\n                        })\n                    .catch(\n                        error => {\n\n                            this.showNotification('error', 'request.error', 'danger');\n\n                        }\n                    );\n\n            },\n            afterCreateCallback(){\n\n                const component = this;\n\n                setTimeout(function () {\n                    component.redirectToIndex(component.indexRoute);\n                    component.setModel();\n                }, 500);\n\n            },\n            setModel(){\n\n                this.model = Object.assign({}, model);\n\n            },\n            getSingleItem(){\n\n                let id = this.$route.params.id;\n\n                let requestParams = {\n\n                    params: {\n\n                        id: id\n\n                    }\n\n                };\n\n                let requestUrl = this.API[this.instance].single;\n\n                axios.get(requestUrl, requestParams).then(response => {\n\n                    this.model = response.data;\n\n                });\n\n            },\n            loadData(){\n\n                //Get products\n                this.getProducts();\n\n                //Get categories\n                this.getCategories();\n\n                //Get the data for editing\n                if(this.isEditForm){\n\n                    this.getSingleItem();\n\n                }\n\n            },\n            assembleItem(){\n\n            },\n            submitForm() {\n\n                if(!this.$v.$invalid){\n\n                    if(this.isEditForm){\n\n                        this.update();\n\n                    }\n                    else{\n\n                        this.create();\n\n                    }\n\n                }\n                else{\n\n                    this.showNotification('error', 'validation.invalidForm', 'danger');\n\n                }\n\n            }\n        },\n        mounted() {\n\n            //Set the model\n            this.setModel();\n\n            //Load the necessary data\n            this.loadData();\n\n        },\n        created: function () {\n\n            //Set an instance for the form rendering\n            this.setInstance(this.formModel);\n\n        }\n\n    }\n\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"vx-card\",\n    {\n      attrs: {\n        title: _vm.getFormTitle(_vm.isEditForm),\n        noShadow: \"\",\n        cardBorder: \"\",\n      },\n    },\n    [\n      _c(\n        \"vs-tabs\",\n        { staticClass: \"px-0\" },\n        _vm._l(_vm.formStructure.sections, function (item, index) {\n          return _c(\n            \"vs-tab\",\n            { key: index, attrs: { label: _vm.getSectionTitle(item.slug) } },\n            _vm._l(item.fields, function (field, index) {\n              return _c(\"div\", { key: index, staticClass: \"vx-row mb-6\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"vx-col w-full\" },\n                  [\n                    field.type === \"text\" || field.type === \"number\"\n                      ? _c(\"vs-input\", {\n                          staticClass: \"w-full\",\n                          attrs: {\n                            type: field.type,\n                            label: _vm.getFieldLabel(item.slug, field.model),\n                            danger: _vm.validateField(field.model),\n                            \"val-icon-danger\": \"close\",\n                          },\n                          model: {\n                            value: _vm.model[field.model],\n                            callback: function ($$v) {\n                              _vm.$set(_vm.model, field.model, $$v)\n                            },\n                            expression: \"model[field.model]\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    field.type === \"textarea\"\n                      ? _c(\"vs-textarea\", {\n                          staticClass: \"mb-0\",\n                          attrs: {\n                            label: _vm.getFieldLabel(item.slug, field.model),\n                          },\n                          model: {\n                            value: _vm.model[field.model],\n                            callback: function ($$v) {\n                              _vm.$set(_vm.model, field.model, $$v)\n                            },\n                            expression: \"model[field.model]\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    field.type === \"select\"\n                      ? _c(\n                          \"vs-select\",\n                          {\n                            staticClass: \"w-full\",\n                            attrs: {\n                              autocomplete: \"\",\n                              label: _vm.getFieldLabel(item.slug, field.model),\n                              multiple: field.multiple,\n                              \"is-selected\": _vm.model[field.model],\n                            },\n                            on: {\n                              \"update:isSelected\": function ($event) {\n                                return _vm.$set(_vm.model, field.model, $event)\n                              },\n                              \"update:is-selected\": function ($event) {\n                                return _vm.$set(_vm.model, field.model, $event)\n                              },\n                            },\n                            model: {\n                              value: _vm.model[field.model],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, field.model, $$v)\n                              },\n                              expression: \"model[field.model]\",\n                            },\n                          },\n                          _vm._l(\n                            _vm.getOptions(field.options),\n                            function (item, index) {\n                              return _c(\"vs-select-item\", {\n                                key: index,\n                                attrs: {\n                                  value: item[field.valueKey],\n                                  text: item[field.labelKey],\n                                },\n                              })\n                            }\n                          ),\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    field.type === \"checkbox\"\n                      ? _c(\n                          \"vs-checkbox\",\n                          {\n                            model: {\n                              value: _vm.model[field.model],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, field.model, $$v)\n                              },\n                              expression: \"model[field.model]\",\n                            },\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(_vm.getFieldLabel(item.slug, field.model))\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    field.type === \"imageUpload\"\n                      ? _c(\"image-upload\", {\n                          attrs: { \"selected-images\": _vm.selectedImages },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    field.type === \"date\"\n                      ? _c(\"datepicker\", {\n                          attrs: {\n                            placeholder: _vm.getFieldLabel(\n                              item.slug,\n                              field.model\n                            ),\n                            format: \"dd.MM.yyyy\",\n                          },\n                          model: {\n                            value: _vm.model[field.model],\n                            callback: function ($$v) {\n                              _vm.$set(_vm.model, field.model, $$v)\n                            },\n                            expression: \"model[field.model]\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value:\n                              field.validates && _vm.validateField(field.model),\n                            expression:\n                              \"field.validates && validateField(field.model)\",\n                          },\n                        ],\n                        staticClass: \"text-danger text-xs\",\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                        ),\n                      ]\n                    ),\n                  ],\n                  1\n                ),\n              ])\n            }),\n            0\n          )\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"vx-row\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"vx-col w-full\" },\n          [\n            !_vm.isEditForm\n              ? _c(\n                  \"vs-button\",\n                  {\n                    staticClass: \"mr-3 mb-2\",\n                    attrs: { color: \"primary\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.submitForm()\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"actions.create\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.isEditForm\n              ? _c(\n                  \"vs-button\",\n                  {\n                    staticClass: \"mr-3 mb-2\",\n                    attrs: { color: \"primary\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.submitForm()\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"actions.update\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"vs-button\",\n              {\n                staticClass: \"mb-2\",\n                attrs: {\n                  color: \"danger\",\n                  type: \"border\",\n                  to: { name: _vm.indexRoute },\n                },\n              },\n              [_vm._v(_vm._s(_vm.$t(\"actions.cancel\")))]\n            ),\n          ],\n          1\n        ),\n      ]),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","//Library for working with requests\nimport axios from 'axios';\n\n//Event bus for sending and processing global events\nimport EventBus from '../../EventBus';\n\n//Datepicker component\nimport Datepicker from 'vuejs-datepicker';\n\nconst formHelper = {\n    components: { Datepicker },\n    props: {\n        statuses: {\n            type: Array,\n            default() {\n                return [\n                    {\n                        title: this.$t('statuses.general.published'),\n                        value: true\n                    },\n                    {\n                        title: this.$t('statuses.general.hidden'),\n                        value: false\n                    }\n                ]\n            }\n        }\n    },\n    data() {\n\n        return {\n\n            instance: '',\n            model: {},\n            products: [],\n            producents: [],\n            categories: [],\n            banners: [],\n            filters: [],\n            attributes: [],\n            selectedImages: [],\n            shippingMethods: [],\n            paymentMethods: [],\n            orderStatuses: []\n\n        }\n\n    },\n    methods: {\n\n        setInstance(instance){\n\n            this.instance = instance;\n\n        },\n        getFormTitle(isEdit){\n\n            if(isEdit){\n\n                return this.$t('forms.' + this.instance + '.titles.edit');\n\n            }\n            else{\n\n                return this.$t('forms.' + this.instance + '.titles.create');\n\n            }\n\n        },\n        getSectionTitle(slug){\n\n            return this.$t('forms.' + this.instance + '.sections.' + slug + '.label');\n\n        },\n        //Newer and more advanced method for retrieving a form section title\n        getFormSectionTitle(slug){\n\n            return this.$t('models.' + this.instance + '.form.' + slug);\n\n        },\n        //Newer and more advanced method for retrieving a model property name\n        getPropertyTitle(property){\n\n            return this.$t('models.' + this.instance + '.properties.' + property);\n\n        },\n        getFieldLabel(section, field){\n\n            return this.$t('forms.' + this.instance + '.sections.' + section + '.fields.' + field);\n\n        },\n        getProducts(params) {\n\n            axios.get(this.API.product.list, params).then(response => {\n\n                this.products =  response.data.data\n\n            });\n\n        },\n        getProducents(params) {\n\n            axios.get(this.API.producent.list, params).then(response => {\n\n                this.producents =  response.data.data\n\n            });\n\n        },\n        getCategories(params) {\n\n            axios.get(this.API.category.list, params).then(response => {\n\n                this.categories =  response.data.data\n\n            });\n\n        },\n        getBanners(params) {\n\n            axios.get(this.API.banner.list, params).then(response => {\n\n                this.banners = response.data.data\n\n            });\n\n        },\n        getFilters(params) {\n\n            axios.get(this.API.filter.list, params).then(response => {\n\n                this.filters = response.data.data\n\n            });\n\n        },\n        getAttributes(params) {\n\n            axios.get(this.API.attribute.list, params).then(response => {\n\n                this.attributes = response.data.data\n\n            });\n\n        },\n        getShippingMethods(){\n\n            let requestUrl = this.API.shippingMethod.list;\n\n            let requestParams = this.defaultSortParams();\n\n            axios.get(requestUrl, {params: requestParams}).then(response => {\n\n                this.shippingMethods = response.data.data;\n\n            });\n\n        },\n        getPaymentMethods(){\n\n            let requestUrl = this.API.paymentMethod.list;\n\n            let requestParams = this.defaultSortParams();\n\n            axios.get(requestUrl, {params: requestParams}).then(response => {\n\n                this.paymentMethods = response.data.data;\n\n            });\n\n        },\n        getOrderStatuses(){\n\n            let requestUrl = this.API.orderStatus.list;\n\n            axios.get(requestUrl).then(response => {\n\n                this.orderStatuses = response.data.data;\n\n            });\n\n        },\n        searchProducts(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getProducts(requestParams);\n\n        },\n        searchCategories(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getCategories(requestParams);\n\n        },\n        searchFilters(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getFilters(requestParams);\n\n        },\n        showNotification(type, message, color, customInstance, isPlural){\n\n            let instance = '';\n\n            let count = 1;\n\n            if(isPlural){\n\n                count = 2;\n\n            }\n\n            if(customInstance){\n\n                instance = this.$tc('models.' + customInstance + '.title', count);\n\n            }\n            else{\n\n                instance = this.$tc('models.' + this.instance + '.title', count);\n\n            }\n\n            let title = this.$t('messages.' + type);\n\n            let text = this.$tc('messages.' + message, count, { instance: instance });\n\n            this.$vs.notify(\n                {\n                    title: title,\n                    text:  text,\n                    color: color\n                }\n            );\n\n        },\n        getOptions(options){\n\n            //Get the form's field options by the property name\n            return this[options];\n\n        },\n        normalizeData(options){\n\n            let normalized = [];\n\n            options.forEach(function(option){\n\n                normalized.push(option.id);\n\n            });\n\n            return normalized;\n\n        }\n    },\n    created() {\n\n    },\n    mounted: function(){\n\n    }\n\n};\n\nexport default formHelper;","//Validation library\nimport { required, minLength, between, url } from 'vuelidate/lib/validators';\n\n//Model\nexport const model = {\n\n    value: \"\",\n    code: \"\",\n    status: false\n\n};\n\n//Shipping method validation params\nexport const validations = {\n\n    model: {\n\n        value: {\n            required\n        },\n        code: {\n            required\n        },\n        status: {\n            required\n        }\n\n    }\n\n};\n\n//Form structure\nexport const formStructure = {\n\n    sections: [\n\n        {\n            slug: 'general',\n            fields: [\n\n                {\n                    model: 'value',\n                    type: 'number',\n                    validates: true\n                },\n                {\n                    model: 'code',\n                    type: 'text',\n                    validates: true\n                },\n                {\n                    model: 'status',\n                    type: 'select',\n                    validates: true,\n                    labelKey: 'title',\n                    valueKey: 'value',\n                    options: 'giftCardStatuses',\n                    multiple: false\n                },\n\n            ]\n        }\n\n    ]\n\n};\n\n","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=11ed7a49\"\nimport script from \"./Form.vue?vue&type=script&lang=js\"\nexport * from \"./Form.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/pedja/work/poklon/poklon/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('11ed7a49')) {\n      api.createRecord('11ed7a49', component.options)\n    } else {\n      api.reload('11ed7a49', component.options)\n    }\n    module.hot.accept(\"./Form.vue?vue&type=template&id=11ed7a49\", function () {\n      api.rerender('11ed7a49', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/dashboard/views/giftCard/Form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=template&id=11ed7a49\""],"sourceRoot":""}