{"version":3,"sources":["webpack:///./resources/js/dashboard/views/producent/Form.vue","webpack:///resources/js/dashboard/views/producent/Form.vue","webpack:///./resources/js/dashboard/EventBus.js","webpack:///./resources/js/dashboard/mixins/forms/helper.js","webpack:///./resources/js/dashboard/static/producent/producent.js","webpack:///./resources/js/dashboard/views/producent/Form.vue?f571","webpack:///./resources/js/dashboard/views/producent/Form.vue?401d","webpack:///./resources/js/dashboard/views/producent/Form.vue?ae3c"],"names":["render","_vm","_c","_self","attrs","title","getFormTitle","isEditForm","noShadow","cardBorder","staticClass","_l","formStructure","sections","item","index","key","label","getSectionTitle","slug","fields","field","type","getFieldLabel","model","danger","validateField","value","callback","$$v","$set","expression","_e","_v","autocomplete","multiple","producent","on","updateIsSelected","$event","getOptions","options","valueKey","text","labelKey","directives","name","rawName","_s","$t","color","click","submitForm","to","staticRenderFns","_withStripped","mixins","formHelper","props","Boolean","formModel","String","data","validations","methods","create","_this","requestParams","axios","post","API","then","response","showNotification","afterCreateCallback","error","update","_this2","id","put","instance","component","setTimeout","redirectToIndex","setModel","Object","assign","getSingleItem","_this3","$route","params","get","single","loadData","$v","$invalid","mounted","created","setInstance","EventBus","Vue","components","Datepicker","statuses","Array","default","products","producents","categories","banners","filters","attributes","selectedImages","shippingMethods","paymentMethods","orderStatuses","isEdit","getFormSectionTitle","getPropertyTitle","property","section","getProducts","product","list","getProducents","getCategories","category","getBanners","_this4","banner","getFilters","_this5","filter","getAttributes","_this6","attribute","getShippingMethods","_this7","requestUrl","shippingMethod","defaultSortParams","getPaymentMethods","_this8","paymentMethod","getOrderStatuses","_this9","orderStatus","searchProducts","search","loading","searchCategories","searchFilters","message","customInstance","isPlural","count","$tc","$vs","notify","normalizeData","normalized","forEach","option","push","description","phone_number","email","location","required","validates"],"mappings":"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","file":"12.js","sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"vx-card\",\n    {\n      attrs: {\n        title: _vm.getFormTitle(_vm.isEditForm),\n        noShadow: \"\",\n        cardBorder: \"\",\n      },\n    },\n    [\n      _c(\n        \"vs-tabs\",\n        { staticClass: \"px-0\" },\n        _vm._l(_vm.formStructure.sections, function (item, index) {\n          return _c(\n            \"vs-tab\",\n            { key: index, attrs: { label: _vm.getSectionTitle(item.slug) } },\n            _vm._l(item.fields, function (field, index) {\n              return _c(\"div\", { key: index, staticClass: \"vx-row mb-6\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"vx-col w-full\" },\n                  [\n                    field.type === \"text\" || field.type === \"number\"\n                      ? _c(\"vs-input\", {\n                          staticClass: \"w-full\",\n                          attrs: {\n                            type: field.type,\n                            label: _vm.getFieldLabel(item.slug, field.model),\n                            danger: _vm.validateField(field.model),\n                            \"val-icon-danger\": \"close\",\n                          },\n                          model: {\n                            value: _vm.model[field.model],\n                            callback: function ($$v) {\n                              _vm.$set(_vm.model, field.model, $$v)\n                            },\n                            expression: \"model[field.model]\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    field.type === \"textarea\"\n                      ? _c(\"vs-textarea\", {\n                          staticClass: \"mb-0\",\n                          attrs: {\n                            label: _vm.getFieldLabel(item.slug, field.model),\n                          },\n                          model: {\n                            value: _vm.model[field.model],\n                            callback: function ($$v) {\n                              _vm.$set(_vm.model, field.model, $$v)\n                            },\n                            expression: \"model[field.model]\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    field.type === \"select\"\n                      ? _c(\n                          \"vs-select\",\n                          {\n                            staticClass: \"w-full\",\n                            attrs: {\n                              autocomplete: \"\",\n                              label: _vm.getFieldLabel(item.slug, field.model),\n                              multiple: field.multiple,\n                              \"is-selected\": _vm.producent[field.model],\n                            },\n                            on: {\n                              \"update:isSelected\": function ($event) {\n                                return _vm.$set(\n                                  _vm.producent,\n                                  field.model,\n                                  $event\n                                )\n                              },\n                              \"update:is-selected\": function ($event) {\n                                return _vm.$set(\n                                  _vm.producent,\n                                  field.model,\n                                  $event\n                                )\n                              },\n                            },\n                            model: {\n                              value: _vm.model[field.model],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, field.model, $$v)\n                              },\n                              expression: \"model[field.model]\",\n                            },\n                          },\n                          _vm._l(\n                            _vm.getOptions(field.options),\n                            function (item, index) {\n                              return _c(\"vs-select-item\", {\n                                key: index,\n                                attrs: {\n                                  value: item[field.valueKey],\n                                  text: item[field.labelKey],\n                                },\n                              })\n                            }\n                          ),\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.validateField(field.model),\n                            expression: \"validateField(field.model)\",\n                          },\n                        ],\n                        staticClass: \"text-danger text-xs\",\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(_vm.$t(\"messages.validation.invalidField\"))\n                        ),\n                      ]\n                    ),\n                  ],\n                  1\n                ),\n              ])\n            }),\n            0\n          )\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"vx-row\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"vx-col w-full\" },\n          [\n            !_vm.isEditForm\n              ? _c(\n                  \"vs-button\",\n                  {\n                    staticClass: \"mr-3 mb-2\",\n                    attrs: { color: \"primary\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.submitForm()\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"actions.create\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.isEditForm\n              ? _c(\n                  \"vs-button\",\n                  {\n                    staticClass: \"mr-3 mb-2\",\n                    attrs: { color: \"primary\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.submitForm()\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"actions.update\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"vs-button\",\n              {\n                staticClass: \"mb-2\",\n                attrs: {\n                  color: \"danger\",\n                  type: \"border\",\n                  to: { name: \"producents\" },\n                },\n              },\n              [_vm._v(_vm._s(_vm.$t(\"actions.cancel\")))]\n            ),\n          ],\n          1\n        ),\n      ]),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\n    <vx-card :title=\"getFormTitle(isEditForm)\" noShadow cardBorder>\n\n        <vs-tabs class=\"px-0\">\n\n            <vs-tab :label=\"getSectionTitle(item.slug)\" :key=\"index\" v-for=\"item, index in formStructure.sections\">\n\n                <div class=\"vx-row mb-6\" v-for=\"field, index in item.fields\" :key=\"index\">\n\n                    <div class=\"vx-col w-full\">\n\n                        <!-- Render inputs dynamically based on its types -->\n\n                        <!-- Input type text or number -->\n                        <vs-input\n                                v-if=\"field.type === 'text' || field.type === 'number'\"\n                                :type=\"field.type\"\n                                class=\"w-full\"\n                                :label=\"getFieldLabel(item.slug, field.model)\"\n                                v-model=\"model[field.model]\"\n                                :danger=\"validateField(field.model)\"\n                                val-icon-danger=\"close\"\n                        />\n\n                        <!-- Textarea -->\n                        <vs-textarea v-if=\"field.type === 'textarea'\" :label=\"getFieldLabel(item.slug, field.model)\" v-model=\"model[field.model]\" class=\"mb-0\" />\n\n                        <!-- Select -->\n                        <vs-select\n                                v-if=\"field.type === 'select'\"\n                                autocomplete\n                                class=\"w-full\"\n                                :label=\"getFieldLabel(item.slug, field.model)\"\n                                v-model=\"model[field.model]\"\n                                :multiple=\"field.multiple\"\n                                :is-selected.sync=\"producent[field.model]\"\n                        >\n                            <vs-select-item :key=\"index\" :value=\"item[field.valueKey]\" :text=\"item[field.labelKey]\" v-for=\"item,index in getOptions(field.options)\" />\n                        </vs-select>\n\n                        <!-- Validation text -->\n                        <span class=\"text-danger text-xs\" v-show=\"validateField(field.model)\">{{ $t('messages.validation.invalidField') }}</span>\n\n                    </div>\n\n                </div>\n\n            </vs-tab>\n\n        </vs-tabs>\n\n        <!-- Actions -->\n        <div class=\"vx-row\">\n            <div class=\"vx-col w-full\">\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"!isEditForm\">{{ $t('actions.create') }}</vs-button>\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"isEditForm\">{{ $t('actions.update') }}</vs-button>\n                <vs-button color=\"danger\" type=\"border\" class=\"mb-2\" :to=\"{ name: 'producents' }\">{{ $t('actions.cancel') }}</vs-button>\n            </div>\n        </div>\n\n    </vx-card>\n\n</template>\n<script>\n\n    //Library for working with requests\n    import axios from 'axios';\n\n    //Form helper functions\n    import formHelper from \"@/mixins/forms/helper\";\n\n    //Proucent model, validations and types\n    import { model, validations, formStructure } from \"@/static/producent/producent\";\n\n    export default {\n        mixins: [ formHelper ],\n        props: {\n            isEditForm: Boolean,\n            formModel: {\n\n                type: String,\n                default: 'producent'\n\n            }\n        },\n        data() {\n\n            return {\n\n                formStructure\n\n            }\n\n        },\n        validations: validations,\n        methods: {\n            create(){\n\n                let requestParams = this.model;\n\n                axios.post(this.API.producent.create, requestParams)\n                    .then(\n                        response => {\n\n                            if (response.data === 'success') {\n\n                                this.showNotification('success', 'request.createdSuccess', 'success');\n\n                                this.afterCreateCallback();\n\n                            }\n\n                        })\n                    .catch(\n                        error => {\n\n                            this.showNotification('error', 'request.error', 'danger');\n\n                        }\n                    );\n\n            },\n            update(){\n\n                let requestParams = this.model;\n\n                let id = this.model.id;\n\n                axios.put(this.API[this.instance].update + '/' + id, requestParams)\n                    .then(\n                        response => {\n\n                            if (response.data === 'success') {\n\n                                this.showNotification('success', 'request.updatedSuccess', 'success');\n\n                            }\n\n                        })\n                    .catch(\n                        error => {\n\n                            this.showNotification('error', 'request.error', 'danger');\n\n                        }\n                    );\n\n            },\n            afterCreateCallback(){\n\n                const component = this;\n\n                setTimeout(function () {\n                    component.redirectToIndex('producents');\n                    component.setModel();\n                }, 500);\n\n            },\n            setModel(){\n\n                this.model = Object.assign({}, model);\n\n            },\n            getSingleItem(){\n\n                let id = this.$route.params.id;\n\n                let requestParams = {\n\n                    params: {\n\n                        id: id\n\n                    }\n\n                };\n\n                axios.get(this.API.producent.single, requestParams).then(response => {\n                    this.model = response.data;\n                });\n\n            },\n            loadData(){\n\n                //Get the data for editing\n                if(this.isEditForm){\n\n                    this.getSingleItem();\n\n                }\n\n            },\n            submitForm() {\n\n                if(!this.$v.$invalid){\n\n                    if(this.isEditForm){\n\n                        this.update();\n\n                    }\n                    else{\n\n                        this.create();\n\n                    }\n\n                }\n                else{\n\n                    this.showNotification('error', 'validation.invalidForm', 'danger');\n\n                }\n\n            }\n        },\n        mounted() {\n\n            //Set the model\n            this.setModel();\n\n            //Load the necessary data\n            this.loadData();\n\n        },\n        created: function () {\n\n            //Set an instance for the form rendering\n            this.setInstance(this.formModel);\n\n        }\n\n    }\n\n</script>","import Vue from 'vue';\nexport const EventBus = new Vue();\nexport default EventBus;","//Library for working with requests\nimport axios from 'axios';\n\n//Event bus for sending and processing global events\nimport EventBus from '../../EventBus';\n\n//Datepicker component\nimport Datepicker from 'vuejs-datepicker';\n\nconst formHelper = {\n    components: { Datepicker },\n    props: {\n        statuses: {\n            type: Array,\n            default() {\n                return [\n                    {\n                        title: this.$t('statuses.general.published'),\n                        value: true\n                    },\n                    {\n                        title: this.$t('statuses.general.hidden'),\n                        value: false\n                    }\n                ]\n            }\n        }\n    },\n    data() {\n\n        return {\n\n            instance: '',\n            model: {},\n            products: [],\n            producents: [],\n            categories: [],\n            banners: [],\n            filters: [],\n            attributes: [],\n            selectedImages: [],\n            shippingMethods: [],\n            paymentMethods: [],\n            orderStatuses: []\n\n        }\n\n    },\n    methods: {\n\n        setInstance(instance){\n\n            this.instance = instance;\n\n        },\n        getFormTitle(isEdit){\n\n            if(isEdit){\n\n                return this.$t('forms.' + this.instance + '.titles.edit');\n\n            }\n            else{\n\n                return this.$t('forms.' + this.instance + '.titles.create');\n\n            }\n\n        },\n        getSectionTitle(slug){\n\n            return this.$t('forms.' + this.instance + '.sections.' + slug + '.label');\n\n        },\n        //Newer and more advanced method for retrieving a form section title\n        getFormSectionTitle(slug){\n\n            return this.$t('models.' + this.instance + '.form.' + slug);\n\n        },\n        //Newer and more advanced method for retrieving a model property name\n        getPropertyTitle(property){\n\n            return this.$t('models.' + this.instance + '.properties.' + property);\n\n        },\n        getFieldLabel(section, field){\n\n            return this.$t('forms.' + this.instance + '.sections.' + section + '.fields.' + field);\n\n        },\n        getProducts(params) {\n\n            axios.get(this.API.product.list, params).then(response => {\n\n                this.products =  response.data.data\n\n            });\n\n        },\n        getProducents(params) {\n\n            axios.get(this.API.producent.list, params).then(response => {\n\n                this.producents =  response.data.data\n\n            });\n\n        },\n        getCategories(params) {\n\n            axios.get(this.API.category.list, params).then(response => {\n\n                this.categories =  response.data.data\n\n            });\n\n        },\n        getBanners(params) {\n\n            axios.get(this.API.banner.list, params).then(response => {\n\n                this.banners = response.data.data\n\n            });\n\n        },\n        getFilters(params) {\n\n            axios.get(this.API.filter.list, params).then(response => {\n\n                this.filters = response.data.data\n\n            });\n\n        },\n        getAttributes(params) {\n\n            axios.get(this.API.attribute.list, params).then(response => {\n\n                this.attributes = response.data.data\n\n            });\n\n        },\n        getShippingMethods(){\n\n            let requestUrl = this.API.shippingMethod.list;\n\n            let requestParams = this.defaultSortParams();\n\n            axios.get(requestUrl, {params: requestParams}).then(response => {\n\n                this.shippingMethods = response.data.data;\n\n            });\n\n        },\n        getPaymentMethods(){\n\n            let requestUrl = this.API.paymentMethod.list;\n\n            let requestParams = this.defaultSortParams();\n\n            axios.get(requestUrl, {params: requestParams}).then(response => {\n\n                this.paymentMethods = response.data.data;\n\n            });\n\n        },\n        getOrderStatuses(){\n\n            let requestUrl = this.API.orderStatus.list;\n\n            axios.get(requestUrl).then(response => {\n\n                this.orderStatuses = response.data.data;\n\n            });\n\n        },\n        searchProducts(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getProducts(requestParams);\n\n        },\n        searchCategories(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getCategories(requestParams);\n\n        },\n        searchFilters(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getFilters(requestParams);\n\n        },\n        showNotification(type, message, color, customInstance, isPlural){\n\n            let instance = '';\n\n            let count = 1;\n\n            if(isPlural){\n\n                count = 2;\n\n            }\n\n            if(customInstance){\n\n                instance = this.$tc('models.' + customInstance + '.title', count);\n\n            }\n            else{\n\n                instance = this.$tc('models.' + this.instance + '.title', count);\n\n            }\n\n            let title = this.$t('messages.' + type);\n\n            let text = this.$tc('messages.' + message, count, { instance: instance });\n\n            this.$vs.notify(\n                {\n                    title: title,\n                    text:  text,\n                    color: color\n                }\n            );\n\n        },\n        getOptions(options){\n\n            //Get the form's field options by the property name\n            return this[options];\n\n        },\n        normalizeData(options){\n\n            let normalized = [];\n\n            options.forEach(function(option){\n\n                normalized.push(option.id);\n\n            });\n\n            return normalized;\n\n        }\n    },\n    created() {\n\n    },\n    mounted: function(){\n\n    }\n\n};\n\nexport default formHelper;","//Validation library\nimport { required, minLength, between } from 'vuelidate/lib/validators';\n\n//Producent model\nexport const model = {\n\n    title: '',\n    description: '',\n    slug: '',\n    phone_number: '',\n    email: '',\n    location: ''\n\n};\n\n//Producent validation params\nexport const validations = {\n\n    model: {\n\n        title: {\n            required\n        },\n        phone_number: {\n            required\n        },\n        email: {\n            required\n        },\n        location: {\n            required\n        }\n\n    }\n\n};\n\n//Producent form structure\nexport const formStructure = {\n\n    sections: [\n\n        {\n            slug: 'general',\n            fields: [\n\n                {\n                    model: 'title',\n                    type: 'text',\n                    validates: true\n                },\n                {\n                    model: 'description',\n                    type: 'textarea'\n                }\n\n            ]\n        },\n        {\n            slug: 'contact',\n            fields: [\n                {\n                    model: 'phone_number',\n                    type: 'text'\n                },\n                {\n                    model: 'email',\n                    type: 'text'\n                },\n                {\n                    model: 'location',\n                    type: 'text'\n                }\n            ]\n        }\n\n    ]\n\n};\n\n","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=1b6ea2f2\"\nimport script from \"./Form.vue?vue&type=script&lang=js\"\nexport * from \"./Form.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/work/poseban-poklon/poklon/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1b6ea2f2')) {\n      api.createRecord('1b6ea2f2', component.options)\n    } else {\n      api.reload('1b6ea2f2', component.options)\n    }\n    module.hot.accept(\"./Form.vue?vue&type=template&id=1b6ea2f2\", function () {\n      api.rerender('1b6ea2f2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/dashboard/views/producent/Form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/.pnpm/vue-loader@15.11.1_css-loader@1.0.1_webpack@4.47.0__lodash@4.17.21_vue-template-compiler@2.7.16_webpack@4.47.0/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=template&id=1b6ea2f2\""],"sourceRoot":""}