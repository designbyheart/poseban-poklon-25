{"version":3,"sources":["webpack:///./resources/js/dashboard/EventBus.js","webpack:///./resources/js/dashboard/views/page/Form.vue?090f","webpack:///./resources/js/dashboard/views/page/Form.vue?ba3a","webpack:///./resources/js/dashboard/views/page/Form.vue?2974","webpack:///./resources/js/dashboard/static/page/page.js","webpack:///resources/js/dashboard/views/page/Form.vue","webpack:///./resources/js/dashboard/views/page/Form.vue?6233","webpack:///./resources/js/dashboard/views/page/Form.vue","webpack:///./resources/js/dashboard/views/page/Form.vue?fcca","webpack:///./resources/js/dashboard/mixins/forms/helper.js","webpack:///./resources/js/dashboard/components/images/ImageUpload.vue?7026","webpack:///./resources/js/dashboard/components/images/ImageUpload.vue?da11","webpack:///resources/js/dashboard/components/images/ImageUpload.vue","webpack:///./resources/js/dashboard/components/images/ImageUpload.vue"],"names":["__webpack_require__","d","__webpack_exports__","EventBus","vue__WEBPACK_IMPORTED_MODULE_0__","n","Vue","_node_modules_style_loader_index_js_node_modules_css_loader_index_js_ref_23_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_23_2_node_modules_vue_loader_lib_index_js_vue_loader_options_Form_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","content","module","i","options","hmr","transform","insertInto","undefined","locals","exports","model","title","slug","seo_title","seo_description","seo_keywords","status","show_in_menu","validations","required","toolbarOptions","header","list","script","indent","size","color","background","align","page_Formvue_type_script_lang_js_","mixins","helper","components","quillEditor","vue_quill_editor","ImageUpload","props","isEditForm","Boolean","formModel","type","String","default","indexRoute","data","editorOption","modules","toolbar","container","handlers","image","value","$emit","this","quill","format","theme","uploadedImage","computed","editor","$refs","pageQuillEditor","watch","images","length","getSelection","index","insertEmbed","url","setSelection","methods","create","_this","requestParams","requestUrl","API","instance","axios_default","a","post","then","response","showNotification","afterCreateCallback","error","update","_this2","id","$route","params","put","component","setTimeout","redirectToIndex","setModel","Object","assign","getSingleItem","_this3","single","get","loadData","submitForm","$v","$invalid","openImageUploader","mounted","created","setInstance","componentNormalizer","_vm","_h","$createElement","_c","_self","attrs","getFormTitle","noShadow","cardBorder","staticClass","label","getSectionTitle","_v","_s","getPropertyTitle","danger","validateField","val-icon-danger","callback","$$v","$set","expression","directives","name","rawName","$t","ref","multiple","is-quill-editor","_l","item","key","text","_e","on","click","$event","to","push","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","formHelper","Datepicker","statuses","Array","products","producents","categories","banners","filters","attributes","selectedImages","shippingMethods","paymentMethods","orderStatuses","isEdit","getFormSectionTitle","property","getFieldLabel","section","field","getProducts","axios","product","getProducents","producent","getCategories","category","getBanners","_this4","banner","getFilters","_this5","filter","getAttributes","_this6","attribute","getShippingMethods","_this7","shippingMethod","defaultSortParams","getPaymentMethods","_this8","paymentMethod","getOrderStatuses","_this9","orderStatus","searchProducts","search","loading","searchCategories","searchFilters","message","customInstance","isPlural","count","$tc","$vs","notify","getOptions","normalizeData","normalized","forEach","option","images_ImageUploadvue_type_script_lang_js_","FilePond","vue_filepond_default","filepond_plugin_file_validate_type_default","filepond_plugin_file_validate_size_default","per_page","Number","isQuillEditor","previewWidth","maxFileSize","allowedFileTypes","popupActive","uploadPopupActive","uploadLabel","uploadUrl","files","currentImage","sort_key","sort_order","pagination","currentPage","nextPageUrl","totalPages","loadedImages","api","pagination.currentPage","oldValue","getImages","$attrs.value","setData","hideLoad","close","showLoading","request_url","page","next_page_url","last_page","imageUploaded","selectImage","setCurrentImage","imagesCount","multipleUpload","existingImage","find","isEmpty","splice","_existingImage","handleSelect","isSelected","updateImage","removeImage","selectedPosition","indexOf","deleteImage","position","scale","setImages","obj","prop","hasOwnProperty","showImagesModal","closeImagesModal","e","$attrs","isArray","JSON","parse","setUploadUrl","getActionName","action","useModel","actionText","listenEvents","$on","style","width","image-id","src","fullscreen","active","update:active","class","border-primary","load","label-placeholder","change","total","label-idle","allow-multiple","accepted-file-types","server","max-file-size","processfiles"],"mappings":"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","file":"14.js","sourcesContent":["import Vue from 'vue';\nexport const EventBus = new Vue();\nexport default EventBus;","import mod from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js??ref--23-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--23-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js??ref--23-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--23-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&lang=css&\"","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--23-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--23-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&lang=css&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--23-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--23-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&lang=css&\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--23-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--23-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&lang=css&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":_vm.getFormTitle(_vm.isEditForm),\"noShadow\":\"\",\"cardBorder\":\"\"}},[_c('vs-tabs',{staticClass:\"px-0\"},[_c('vs-tab',{attrs:{\"label\":_vm.getSectionTitle('general')}},[_c('div',{staticClass:\"con-tab pt-3\"},[_c('div',{staticClass:\"vx-row mb-6\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold text-sm mb-2\"},[_vm._v(_vm._s(_vm.getPropertyTitle('title')))]),_vm._v(\" \"),_c('vs-input',{staticClass:\"w-full\",attrs:{\"type\":\"text\",\"danger\":_vm.validateField('title'),\"val-icon-danger\":\"close\"},model:{value:(_vm.model.title),callback:function ($$v) {_vm.$set(_vm.model, \"title\", $$v)},expression:\"model.title\"}}),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.validateField('title')),expression:\"validateField('title')\"}],staticClass:\"text-danger text-xs\"},[_vm._v(_vm._s(_vm.$t('messages.validation.invalidField')))])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row mb-6\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold text-sm mb-2\"},[_vm._v(_vm._s(_vm.getPropertyTitle('content')))]),_vm._v(\" \"),_c('quill-editor',{ref:\"pageQuillEditor\",attrs:{\"options\":_vm.editorOption},model:{value:(_vm.model.content),callback:function ($$v) {_vm.$set(_vm.model, \"content\", $$v)},expression:\"model.content\"}}),_vm._v(\" \"),_c('image-upload',{attrs:{\"multiple\":false,\"is-quill-editor\":true},model:{value:(_vm.uploadedImage),callback:function ($$v) {_vm.uploadedImage=$$v},expression:\"uploadedImage\"}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row mb-6\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold text-sm mb-2\"},[_vm._v(_vm._s(_vm.getPropertyTitle('slug')))]),_vm._v(\" \"),_c('vs-input',{staticClass:\"w-full\",attrs:{\"type\":\"text\",\"danger\":_vm.validateField('slug'),\"val-icon-danger\":\"close\"},model:{value:(_vm.model.slug),callback:function ($$v) {_vm.$set(_vm.model, \"slug\", $$v)},expression:\"model.slug\"}}),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.validateField('slug')),expression:\"validateField('slug')\"}],staticClass:\"text-danger text-xs\"},[_vm._v(_vm._s(_vm.$t('messages.validation.invalidField')))])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row mb-6\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold text-sm mb-2\"},[_vm._v(_vm._s(_vm.getPropertyTitle('status')))]),_vm._v(\" \"),_c('vs-select',{staticClass:\"w-full\",model:{value:(_vm.model.status),callback:function ($$v) {_vm.$set(_vm.model, \"status\", $$v)},expression:\"model.status\"}},_vm._l((_vm.statuses),function(item,index){return _c('vs-select-item',{key:index,attrs:{\"value\":item.value,\"text\":item.title}})}),1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row mb-6\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('vs-checkbox',{model:{value:(_vm.model.show_in_menu),callback:function ($$v) {_vm.$set(_vm.model, \"show_in_menu\", $$v)},expression:\"model.show_in_menu\"}},[_c('p',{staticClass:\"font-bold text-sm\"},[_vm._v(_vm._s(_vm.getPropertyTitle('showInMenu')))])])],1)])])]),_vm._v(\" \"),_c('vs-tab',{staticClass:\"overflow-visible\",attrs:{\"label\":_vm.getSectionTitle('seo')}},[_c('div',{staticClass:\"con-tab pt-3\"},[_c('div',{staticClass:\"vx-row mb-3\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold text-sm mb-2\"},[_vm._v(_vm._s(_vm.getPropertyTitle('seoTitle')))]),_vm._v(\" \"),_c('vs-input',{staticClass:\"w-full\",attrs:{\"type\":\"text\",\"danger\":_vm.validateField('seo_title'),\"val-icon-danger\":\"close\"},model:{value:(_vm.model.seo_title),callback:function ($$v) {_vm.$set(_vm.model, \"seo_title\", $$v)},expression:\"model.seo_title\"}}),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.validateField('seo_title')),expression:\"validateField('seo_title')\"}],staticClass:\"text-danger text-xs\"},[_vm._v(_vm._s(_vm.$t('messages.validation.invalidField')))])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row mb-3\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold text-sm mb-2\"},[_vm._v(_vm._s(_vm.getPropertyTitle('seoDescription')))]),_vm._v(\" \"),_c('vs-textarea',{model:{value:(_vm.model.seo_description),callback:function ($$v) {_vm.$set(_vm.model, \"seo_description\", $$v)},expression:\"model.seo_description\"}})],1)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row mb-3\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('p',{staticClass:\"font-bold text-sm mb-2\"},[_vm._v(_vm._s(_vm.getPropertyTitle('seoKeywords')))]),_vm._v(\" \"),_c('vs-input',{staticClass:\"w-full\",attrs:{\"type\":\"text\",\"danger\":_vm.validateField('seo_keywords'),\"val-icon-danger\":\"close\"},model:{value:(_vm.model.seo_keywords),callback:function ($$v) {_vm.$set(_vm.model, \"seo_keywords\", $$v)},expression:\"model.seo_keywords\"}}),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.validateField('seo_keywords')),expression:\"validateField('seo_keywords')\"}],staticClass:\"text-danger text-xs\"},[_vm._v(_vm._s(_vm.$t('messages.validation.invalidField')))])],1)])])])],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col w-full\"},[(!_vm.isEditForm)?_c('vs-button',{staticClass:\"mr-3 mb-2\",attrs:{\"color\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm()}}},[_vm._v(_vm._s(_vm.$t('actions.create')))]):_vm._e(),_vm._v(\" \"),(_vm.isEditForm)?_c('vs-button',{staticClass:\"mr-3 mb-2\",attrs:{\"color\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm()}}},[_vm._v(_vm._s(_vm.$t('actions.update')))]):_vm._e(),_vm._v(\" \"),_c('vs-button',{staticClass:\"mb-2\",attrs:{\"color\":\"danger\",\"type\":\"border\",\"to\":{ name: _vm.indexRoute }}},[_vm._v(_vm._s(_vm.$t('actions.cancel')))])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//Validation library\nimport { required, minLength, between, url } from 'vuelidate/lib/validators';\n\n//Model\nexport const model = {\n\n    title: \"\",\n    content: \"\",\n    slug: \"\",\n    seo_title: \"\",\n    seo_description: \"\",\n    seo_keywords: \"\",\n    status: false,\n    show_in_menu: false\n\n};\n\n//Shipping method validation params\nexport const validations = {\n\n    model: {\n\n        title: {\n            required\n        },\n        slug: {\n            required\n        }\n\n    }\n\n};\n","<template>\n\n    <vx-card :title=\"getFormTitle(isEditForm)\" noShadow cardBorder>\n\n        <vs-tabs class=\"px-0\">\n\n            <vs-tab :label=\"getSectionTitle('general')\">\n\n                <div class=\"con-tab pt-3\">\n\n                    <div class=\"vx-row mb-6\">\n\n                        <div class=\"vx-col w-full\">\n\n                            <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('title') }}</p>\n                            <vs-input\n                                    type=\"text\"\n                                    class=\"w-full\"\n                                    v-model=\"model.title\"\n                                    :danger=\"validateField('title')\"\n                                    val-icon-danger=\"close\"\n                            />\n\n                            <!-- Validation text -->\n                            <span class=\"text-danger text-xs\" v-show=\"validateField('title')\">{{ $t('messages.validation.invalidField') }}</span>\n\n                        </div>\n\n                    </div>\n\n                    <div class=\"vx-row mb-6\">\n\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('content') }}</p>\n                            <quill-editor\n                                v-model=\"model.content\"\n                                :options=\"editorOption\"\n                                ref=\"pageQuillEditor\"\n                            ></quill-editor>\n                            <image-upload v-model=\"uploadedImage\" :multiple=\"false\" :is-quill-editor=\"true\"></image-upload>\n                        </div>\n\n                    </div>\n\n                    <div class=\"vx-row mb-6\">\n\n                        <div class=\"vx-col w-full\">\n\n                            <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('slug') }}</p>\n                            <vs-input\n                                    type=\"text\"\n                                    class=\"w-full\"\n                                    v-model=\"model.slug\"\n                                    :danger=\"validateField('slug')\"\n                                    val-icon-danger=\"close\"\n                            />\n\n                            <!-- Validation text -->\n                            <span class=\"text-danger text-xs\" v-show=\"validateField('slug')\">{{ $t('messages.validation.invalidField') }}</span>\n\n                        </div>\n\n                    </div>\n\n                    <div class=\"vx-row mb-6\">\n\n                        <div class=\"vx-col w-full\">\n                            <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('status') }}</p>\n                            <vs-select\n                                    class=\"w-full\"\n                                    v-model=\"model.status\"\n                            >\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.title\" v-for=\"item,index in statuses\" />\n                            </vs-select>\n                        </div>\n\n                    </div>\n\n                    <div class=\"vx-row mb-6\">\n\n                        <div class=\"vx-col w-full\">\n\n                            <vs-checkbox v-model=\"model.show_in_menu\">\n                                <p class=\"font-bold text-sm\">{{ getPropertyTitle('showInMenu') }}</p>\n                            </vs-checkbox>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </vs-tab>\n\n            <vs-tab :label=\"getSectionTitle('seo')\" class=\"overflow-visible\">\n\n                <div class=\"con-tab pt-3\">\n\n                    <div class=\"vx-row mb-3\">\n\n                        <div class=\"vx-col w-full\">\n\n                            <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('seoTitle') }}</p>\n                            <vs-input\n                                    type=\"text\"\n                                    class=\"w-full\"\n                                    v-model=\"model.seo_title\"\n                                    :danger=\"validateField('seo_title')\"\n                                    val-icon-danger=\"close\"\n                            />\n\n                            <!-- Validation text -->\n                            <span class=\"text-danger text-xs\" v-show=\"validateField('seo_title')\">{{ $t('messages.validation.invalidField') }}</span>\n\n                        </div>\n\n                    </div>\n\n                    <div class=\"vx-row mb-3\">\n\n                        <div class=\"vx-col w-full\">\n\n                            <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('seoDescription') }}</p>\n                            <vs-textarea v-model=\"model.seo_description\"></vs-textarea>\n\n                        </div>\n\n                    </div>\n\n                    <div class=\"vx-row mb-3\">\n\n                        <div class=\"vx-col w-full\">\n\n                            <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('seoKeywords') }}</p>\n                            <vs-input\n                                    type=\"text\"\n                                    class=\"w-full\"\n                                    v-model=\"model.seo_keywords\"\n                                    :danger=\"validateField('seo_keywords')\"\n                                    val-icon-danger=\"close\"\n                            />\n\n                            <!-- Validation text -->\n                            <span class=\"text-danger text-xs\" v-show=\"validateField('seo_keywords')\">{{ $t('messages.validation.invalidField') }}</span>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </vs-tab>\n\n\n        </vs-tabs>\n\n        <!-- Actions -->\n        <div class=\"vx-row\">\n            <div class=\"vx-col w-full\">\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"!isEditForm\">{{ $t('actions.create') }}</vs-button>\n                <vs-button color=\"primary\" class=\"mr-3 mb-2\" @click=\"submitForm()\" v-if=\"isEditForm\">{{ $t('actions.update') }}</vs-button>\n                <vs-button color=\"danger\" type=\"border\" class=\"mb-2\" :to=\"{ name: indexRoute }\">{{ $t('actions.cancel') }}</vs-button>\n            </div>\n        </div>\n\n    </vx-card>\n\n</template>\n<script>\n\n    //Library for working with requests\n    import axios from 'axios';\n\n    //Form helper functions\n    import formHelper from \"@/mixins/forms/helper\";\n\n    //Model, validations and types\n    import { model, validations } from \"@/static/page/page\";\n\n    //Quill editor\n    import 'quill/dist/quill.core.css'\n    import 'quill/dist/quill.snow.css'\n    import 'quill/dist/quill.bubble.css'\n\n    import { quillEditor } from 'vue-quill-editor'\n\n    //Fonts list\n    const fontsList = ['Rubik-light', 'Rubik-regular', 'Rubik-medium', 'Rubik-bold'];\n\n    // Set toolbar options\n    const toolbarOptions = [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n\n        [{'header': 1}, {'header': 2}],\n        [{'list': 'ordered'}, {'list': 'bullet'}],\n        [{'script': 'sub'}, {'script': 'super'}],\n        [{'indent': '-1'}, {'indent': '+1'}],\n\n        [{'size': ['small', false, 'large', 'huge']}],\n        [{'header': [1, 2, 3, 4, 5, 6, false]}],\n\n        [{'color': []}, {'background': []}],\n        [{'align': []}],\n        ['link', 'image']\n    ];\n\n    //Image manager\n    import ImageUpload from '../../components/images/ImageUpload';\n\n    //Events bus\n    import EventBus from '../../EventBus';\n\n    //Open image uploader\n    function openImageUploader(){\n\n        EventBus.$emit('open-image-uploader', true);\n\n    }\n\n    export default {\n        mixins: [ formHelper ],\n        components: { quillEditor, ImageUpload },\n        props: {\n            isEditForm: Boolean,\n            formModel: {\n\n                type: String,\n                default: 'page'\n\n            },\n            indexRoute: {\n\n                type: String,\n                default: 'pages'\n\n            }\n        },\n        data() {\n\n            return {\n                editorOption: {\n                    modules: {\n                        toolbar: {\n                            container: toolbarOptions,\n                            handlers: {\n                                'image': function (value) {\n                                    if (value) {\n                                        openImageUploader();\n                                    } else {\n                                        this.quill.format('image', false);\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    theme: 'snow'\n                },\n                uploadedImage: ''\n            }\n\n        },\n        computed: {\n            editor(){\n                return this.$refs.pageQuillEditor.quill\n            }\n        },\n        watch: {\n          'uploadedImage': function (images) {\n\n              let quill = this.editor;\n\n              // Get cursor location\n              let length = quill.getSelection().index;\n\n              // Insert image at cursor location\n              quill.insertEmbed(length, 'image', images[0].url);\n\n              // Set cursor to the end\n              quill.setSelection(length + 1);\n\n          }\n        },\n        validations: validations,\n        methods: {\n            create(){\n\n                let requestParams = this.model;\n\n                let requestUrl = this.API[this.instance].create;\n\n                axios.post(requestUrl, requestParams)\n                    .then(\n                        response => {\n\n                            if (response.data === 'success') {\n\n                                this.showNotification('success', 'request.createdSuccess', 'success');\n\n                                this.afterCreateCallback();\n\n                            }\n\n                        })\n                    .catch(\n                        error => {\n\n                            this.showNotification('error', 'request.error', 'danger');\n\n                        }\n                    );\n\n            },\n            update(){\n\n                let requestParams = this.model;\n\n                let id = this.$route.params.id;\n\n                let requestUrl = this.API[this.instance].update + '/' + id;\n\n                axios.put(requestUrl, requestParams)\n                    .then(\n                        response => {\n\n                            if (response.data === 'success') {\n\n                                this.showNotification('success', 'request.updatedSuccess', 'success');\n\n                            }\n\n                        })\n                    .catch(\n                        error => {\n\n                            this.showNotification('error', 'request.error', 'danger');\n\n                        }\n                    );\n\n            },\n            afterCreateCallback(){\n\n                const component = this;\n\n                setTimeout(function () {\n                    component.redirectToIndex(component.indexRoute);\n                    component.setModel();\n                }, 500);\n\n            },\n            setModel(){\n\n                this.model = Object.assign({}, model);\n\n            },\n            getSingleItem(){\n\n                let id = this.$route.params.id;\n\n                let requestParams = {\n\n                    params: {\n\n                        id: id\n\n                    }\n\n                };\n\n                let requestUrl = this.API[this.instance].single;\n\n                axios.get(requestUrl, requestParams).then(response => {\n\n                    this.model = response.data;\n\n                });\n\n            },\n            loadData(){\n\n                //Get the data for editing\n                if(this.isEditForm){\n\n                    this.getSingleItem();\n\n                }\n\n            },\n            submitForm() {\n\n                if(!this.$v.$invalid){\n\n                    if(this.isEditForm){\n\n                        this.update();\n\n                    }\n                    else{\n\n                        this.create();\n\n                    }\n\n                }\n                else{\n\n                    this.showNotification('error', 'validation.invalidForm', 'danger');\n\n                }\n\n            },\n            openImageUploader(){\n\n                EventBus.$emit('open-image-uploader');\n\n            }\n        },\n        mounted() {\n\n            //Set the model\n            this.setModel();\n\n            //Load the necessary data\n            this.loadData();\n\n        },\n        created: function () {\n\n            //Set an instance for the form rendering\n            this.setInstance(this.formModel);\n\n        }\n\n    }\n\n</script>\n\n<style>\n\n    body .ql-container{\n        min-height: 450px;\n    }\n\n    .ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-light']::before,\n    .ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-light']::before\n    {\n        content: 'Rubik Light';\n        font-family: 'Rubik-light';\n    }\n\n    .ql-font-Rubik-light {\n        font-family: 'Rubik-light';\n    }\n\n    .ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-regular']::before,\n    .ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-regular']::before\n    {\n        content: 'Rubik regular';\n        font-family: 'Rubik-regular';\n    }\n\n    .ql-font-Rubik-regular {\n        font-family: 'Rubik-regular';\n    }\n\n    .ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-medium']::before,\n    .ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-medium']::before\n    {\n        content: 'Rubik Medium';\n        font-family: 'Rubik-medium';\n    }\n\n    .ql-font-Rubik-medium {\n        font-family: 'Rubik-medium';\n    }\n\n    .ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-bold']::before,\n    .ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-bold']::before\n    {\n        content: 'Rubik Bold';\n        font-family: 'Rubik-bold';\n    }\n\n    .ql-font-Rubik-bold {\n        font-family: 'Rubik-bold';\n    }\n\n</style>","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=2b988fac&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Form.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\nbody .ql-container{\\n    min-height: 450px;\\n}\\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-light']::before,\\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-light']::before\\n{\\n    content: 'Rubik Light';\\n    font-family: 'Rubik-light';\\n}\\n.ql-font-Rubik-light {\\n    font-family: 'Rubik-light';\\n}\\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-regular']::before,\\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-regular']::before\\n{\\n    content: 'Rubik regular';\\n    font-family: 'Rubik-regular';\\n}\\n.ql-font-Rubik-regular {\\n    font-family: 'Rubik-regular';\\n}\\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-medium']::before,\\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-medium']::before\\n{\\n    content: 'Rubik Medium';\\n    font-family: 'Rubik-medium';\\n}\\n.ql-font-Rubik-medium {\\n    font-family: 'Rubik-medium';\\n}\\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value='Rubik-bold']::before,\\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value='Rubik-bold']::before\\n{\\n    content: 'Rubik Bold';\\n    font-family: 'Rubik-bold';\\n}\\n.ql-font-Rubik-bold {\\n    font-family: 'Rubik-bold';\\n}\\n\\n\", \"\"]);\n\n// exports\n","//Library for working with requests\nimport axios from 'axios';\n\n//Event bus for sending and processing global events\nimport EventBus from '../../EventBus';\n\n//Datepicker component\nimport Datepicker from 'vuejs-datepicker';\n\nconst formHelper = {\n    components: { Datepicker },\n    props: {\n        statuses: {\n            type: Array,\n            default() {\n                return [\n                    {\n                        title: this.$t('statuses.general.published'),\n                        value: true\n                    },\n                    {\n                        title: this.$t('statuses.general.hidden'),\n                        value: false\n                    }\n                ]\n            }\n        }\n    },\n    data() {\n\n        return {\n\n            instance: '',\n            model: {},\n            products: [],\n            producents: [],\n            categories: [],\n            banners: [],\n            filters: [],\n            attributes: [],\n            selectedImages: [],\n            shippingMethods: [],\n            paymentMethods: [],\n            orderStatuses: []\n\n        }\n\n    },\n    methods: {\n\n        setInstance(instance){\n\n            this.instance = instance;\n\n        },\n        getFormTitle(isEdit){\n\n            if(isEdit){\n\n                return this.$t('forms.' + this.instance + '.titles.edit');\n\n            }\n            else{\n\n                return this.$t('forms.' + this.instance + '.titles.create');\n\n            }\n\n        },\n        getSectionTitle(slug){\n\n            return this.$t('forms.' + this.instance + '.sections.' + slug + '.label');\n\n        },\n        //Newer and more advanced method for retrieving a form section title\n        getFormSectionTitle(slug){\n\n            return this.$t('models.' + this.instance + '.form.' + slug);\n\n        },\n        //Newer and more advanced method for retrieving a model property name\n        getPropertyTitle(property){\n\n            return this.$t('models.' + this.instance + '.properties.' + property);\n\n        },\n        getFieldLabel(section, field){\n\n            return this.$t('forms.' + this.instance + '.sections.' + section + '.fields.' + field);\n\n        },\n        getProducts(params) {\n\n            axios.get(this.API.product.list, params).then(response => {\n\n                this.products =  response.data.data\n\n            });\n\n        },\n        getProducents(params) {\n\n            axios.get(this.API.producent.list, params).then(response => {\n\n                this.producents =  response.data.data\n\n            });\n\n        },\n        getCategories(params) {\n\n            axios.get(this.API.category.list, params).then(response => {\n\n                this.categories =  response.data.data\n\n            });\n\n        },\n        getBanners(params) {\n\n            axios.get(this.API.banner.list, params).then(response => {\n\n                this.banners = response.data.data\n\n            });\n\n        },\n        getFilters(params) {\n\n            axios.get(this.API.filter.list, params).then(response => {\n\n                this.filters = response.data.data\n\n            });\n\n        },\n        getAttributes(params) {\n\n            axios.get(this.API.attribute.list, params).then(response => {\n\n                this.attributes = response.data.data\n\n            });\n\n        },\n        getShippingMethods(){\n\n            let requestUrl = this.API.shippingMethod.list;\n\n            let requestParams = this.defaultSortParams();\n\n            axios.get(requestUrl, {params: requestParams}).then(response => {\n\n                this.shippingMethods = response.data.data;\n\n            });\n\n        },\n        getPaymentMethods(){\n\n            let requestUrl = this.API.paymentMethod.list;\n\n            let requestParams = this.defaultSortParams();\n\n            axios.get(requestUrl, {params: requestParams}).then(response => {\n\n                this.paymentMethods = response.data.data;\n\n            });\n\n        },\n        getOrderStatuses(){\n\n            let requestUrl = this.API.orderStatus.list;\n\n            axios.get(requestUrl).then(response => {\n\n                this.orderStatuses = response.data.data;\n\n            });\n\n        },\n        searchProducts(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getProducts(requestParams);\n\n        },\n        searchCategories(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getCategories(requestParams);\n\n        },\n        searchFilters(search, loading){\n\n            let requestParams = {\n\n                params: {\n                    search: search\n                }\n\n            };\n\n            //Search products\n            this.getFilters(requestParams);\n\n        },\n        showNotification(type, message, color, customInstance, isPlural){\n\n            let instance = '';\n\n            let count = 1;\n\n            if(isPlural){\n\n                count = 2;\n\n            }\n\n            if(customInstance){\n\n                instance = this.$tc('models.' + customInstance + '.title', count);\n\n            }\n            else{\n\n                instance = this.$tc('models.' + this.instance + '.title', count);\n\n            }\n\n            let title = this.$t('messages.' + type);\n\n            let text = this.$tc('messages.' + message, count, { instance: instance });\n\n            this.$vs.notify(\n                {\n                    title: title,\n                    text:  text,\n                    color: color\n                }\n            );\n\n        },\n        getOptions(options){\n\n            //Get the form's field options by the property name\n            return this[options];\n\n        },\n        normalizeData(options){\n\n            let normalized = [];\n\n            options.forEach(function(option){\n\n                normalized.push(option.id);\n\n            });\n\n            return normalized;\n\n        }\n    },\n    created() {\n\n    },\n    mounted: function(){\n\n    }\n\n};\n\nexport default formHelper;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.isQuillEditor)?_c('div',{staticClass:\"vx-row mb-3\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('div',{staticClass:\"abr-form-images flex flex-wrap content-start w-full\"},_vm._l((_vm.selectedImages),function(image){return _c('div',{key:image.id,staticClass:\"abr-form-image\",style:({width: _vm.previewWidth}),attrs:{\"image-id\":image.id}},[_c('img',{staticClass:\"object-cover rounded\",attrs:{\"src\":image.url,\"width\":\"100%\"}}),_vm._v(\" \"),_c('div',{staticClass:\"abr-image-btn bg-danger rounded shadow\",on:{\"click\":function($event){return _vm.removeImage(image)}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"\\n                            close\\n                        \")])])])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"filled\"},on:{\"click\":function($event){return _vm.showImagesModal()}}},[_vm._v(_vm._s(_vm.getActionName('choose', true, _vm.multiple)))])],1)]):_vm._e(),_vm._v(\" \"),_c('vs-popup',{attrs:{\"fullscreen\":\"\",\"title\":_vm.getPropertyTitle('uploaderTitle'),\"active\":_vm.popupActive},on:{\"update:active\":function($event){_vm.popupActive=$event}}},[_c('div',{staticClass:\"vx-row abr-images-container mb-0\"},[_c('div',{staticClass:\"vx-col w-3/4 h-full abr-images flex flex-wrap content-start mb-0 pr-0 vs-con-loading__container\",attrs:{\"id\":\"abr-images\"}},_vm._l((_vm.images),function(image,index){return _c('div',{key:image.id,staticClass:\"abr-images-item rounded\",class:{'border-primary': _vm.isSelected(image.id)},attrs:{\"image-id\":image.id}},[_c('img',{staticClass:\"object-cover\",attrs:{\"src\":image.url,\"width\":\"100%\"},on:{\"click\":function($event){return _vm.selectImage(image)},\"load\":function($event){return _vm.hideLoad(index)}}}),_vm._v(\" \"),(_vm.isSelected(image.id))?_c('div',{staticClass:\"abr-image-btn bg-danger rounded shadow\",on:{\"click\":function($event){return _vm.removeImage(image)}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"\\n                            close\\n                        \")])]):_vm._e()])}),0),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-1/4 pl-0\"},[_c('div',{staticClass:\"vx-row\"},[(!_vm.isEmpty(_vm.currentImage))?_c('div',{staticClass:\"vx-col w-full abr-selected-image\"},[_c('h3',{staticClass:\"mb-6\"},[_vm._v(_vm._s(_vm.getPropertyTitle('imageParameters')))]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row abr-image-preview mb-6\"},[_c('div',{staticClass:\"vx-col w-full\"},[_c('img',{staticClass:\"mb-3\",attrs:{\"src\":_vm.currentImage.url}}),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.currentImage.title))])])]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row abr-image-form\"},[_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-input',{staticClass:\"w-full\",attrs:{\"label-placeholder\":_vm.getPropertyTitle('title')},on:{\"change\":function($event){return _vm.updateImage(_vm.currentImage)}},model:{value:(_vm.currentImage.title),callback:function ($$v) {_vm.$set(_vm.currentImage, \"title\", $$v)},expression:\"currentImage.title\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-input',{staticClass:\"w-full\",attrs:{\"label-placeholder\":_vm.getPropertyTitle('description')},on:{\"change\":function($event){return _vm.updateImage(_vm.currentImage)}},model:{value:(_vm.currentImage.description),callback:function ($$v) {_vm.$set(_vm.currentImage, \"description\", $$v)},expression:\"currentImage.description\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-input',{staticClass:\"w-full\",attrs:{\"label-placeholder\":_vm.getPropertyTitle('alt')},on:{\"change\":function($event){return _vm.updateImage(_vm.currentImage)}},model:{value:(_vm.currentImage.alt),callback:function ($$v) {_vm.$set(_vm.currentImage, \"alt\", $$v)},expression:\"currentImage.alt\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full mb-6\"},[_c('vs-button',{staticClass:\"w-1/2\",attrs:{\"color\":\"danger\",\"type\":\"filled\"},on:{\"click\":function($event){return _vm.deleteImage(_vm.currentImage)}}},[_vm._v(_vm._s(_vm.getActionName('delete', true)))])],1)])]):_vm._e()])])]),_vm._v(\" \"),_c('div',{staticClass:\"vx-row abr-images-pagination mb-0\"},[_c('div',{staticClass:\"vx-col flex justify-center items-center w-3/4\"},[_c('vs-pagination',{attrs:{\"total\":_vm.pagination.totalPages},model:{value:(_vm.pagination.currentPage),callback:function ($$v) {_vm.$set(_vm.pagination, \"currentPage\", $$v)},expression:\"pagination.currentPage\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col flex justify-center items-center w-1/4 pl-0\"},[_c('vs-button',{staticClass:\"mr-3\",attrs:{\"color\":\"primary\",\"type\":\"filled\"},on:{\"click\":function($event){return _vm.closeImagesModal()}}},[_vm._v(_vm._s(_vm.getActionName('choose', true, _vm.multiple)))]),_vm._v(\" \"),_c('vs-button',{attrs:{\"type\":\"border\"},on:{\"click\":function($event){_vm.uploadPopupActive = true}}},[_vm._v(_vm._s(_vm.getActionName('upload')))])],1)]),_vm._v(\" \"),_c('vs-popup',{attrs:{\"title\":_vm.getActionName('upload', true, _vm.multiple),\"active\":_vm.uploadPopupActive},on:{\"update:active\":function($event){_vm.uploadPopupActive=$event}}},[_c('div',{staticClass:\"vx-row m-0\"},[_c('div',{staticClass:\"vx-col w-full p-0\"},[_c('file-pond',{attrs:{\"name\":\"file[]\",\"label-idle\":_vm.uploadLabel,\"allow-multiple\":\"true\",\"accepted-file-types\":_vm.allowedFileTypes,\"server\":_vm.uploadUrl,\"files\":_vm.files,\"max-file-size\":_vm.maxFileSize},on:{\"processfiles\":function($event){return _vm.imageUploaded()}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"vx-col w-full p-0\"},[_c('vs-button',{staticClass:\"float-right\",on:{\"click\":function($event){_vm.uploadPopupActive = false}}},[_vm._v(_vm._s(_vm.getActionName('close')))])],1)])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageUpload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageUpload.vue?vue&type=script&lang=js&\"","<template>\n\n\n    <div>\n\n        <div class=\"vx-row mb-3\" v-if=\"!isQuillEditor\">\n\n            <div class=\"vx-col w-full\">\n                <div class=\"abr-form-images flex flex-wrap content-start w-full\">\n\n                    <div class=\"abr-form-image\" :style=\"{width: previewWidth}\" :key=\"image.id\" v-for=\"image in selectedImages\" :image-id=\"image.id\">\n                        <img :src=\"image.url\" width=\"100%\" class=\"object-cover rounded\" />\n                        <div class=\"abr-image-btn bg-danger rounded shadow\" @click=\"removeImage(image)\">\n                            <i class=\"material-icons\">\n                                close\n                            </i>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"vx-col w-full\">\n                <vs-button color=\"primary\" type=\"filled\" @click=\"showImagesModal()\">{{ getActionName('choose', true, multiple) }}</vs-button>\n            </div>\n\n        </div>\n\n        <vs-popup fullscreen :title=\"getPropertyTitle('uploaderTitle')\" :active.sync=\"popupActive\">\n\n            <div class=\"vx-row abr-images-container mb-0\">\n                <div id=\"abr-images\" class=\"vx-col w-3/4 h-full abr-images flex flex-wrap content-start mb-0 pr-0 vs-con-loading__container\">\n\n                    <div class=\"abr-images-item rounded\" v-bind:class=\"{'border-primary': isSelected(image.id)}\" :key=\"image.id\" v-for=\"image, index in images\" :image-id=\"image.id\">\n                        <img :src=\"image.url\" width=\"100%\" class=\"object-cover\" v-on:click=\"selectImage(image)\" @load=\"hideLoad(index)\" />\n                        <div class=\"abr-image-btn bg-danger rounded shadow\" v-if=\"isSelected(image.id)\" @click=\"removeImage(image)\">\n                            <i class=\"material-icons\">\n                                close\n                            </i>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"vx-col w-1/4 pl-0\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col w-full abr-selected-image\" v-if=\"!isEmpty(currentImage)\">\n                            <h3 class=\"mb-6\">{{ getPropertyTitle('imageParameters') }}</h3>\n                            <div class=\"vx-row abr-image-preview mb-6\">\n                                <div class=\"vx-col w-full\">\n                                    <img :src=\"currentImage.url\" class=\"mb-3\" />\n                                    <p>{{ currentImage.title }}</p>\n                                </div>\n                            </div>\n                            <div class=\"vx-row abr-image-form\">\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-input :label-placeholder=\"getPropertyTitle('title')\" class=\"w-full\" v-model=\"currentImage.title\" @change=\"updateImage(currentImage)\" />\n                                </div>\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-input :label-placeholder=\"getPropertyTitle('description')\" class=\"w-full\" v-model=\"currentImage.description\" @change=\"updateImage(currentImage)\" />\n                                </div>\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-input :label-placeholder=\"getPropertyTitle('alt')\" class=\"w-full\" v-model=\"currentImage.alt\" @change=\"updateImage(currentImage)\" />\n                                </div>\n                                <div class=\"vx-col w-full mb-6\">\n                                    <vs-button color=\"danger\" class=\"w-1/2\" type=\"filled\" @click=\"deleteImage(currentImage)\">{{ getActionName('delete', true) }}</vs-button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"vx-row abr-images-pagination mb-0\">\n                <div class=\"vx-col flex justify-center items-center w-3/4\">\n                    <vs-pagination :total=\"pagination.totalPages\" v-model=\"pagination.currentPage\"></vs-pagination>\n                </div>\n                <div class=\"vx-col flex justify-center items-center w-1/4 pl-0\">\n                    <vs-button color=\"primary\" type=\"filled\" class=\"mr-3\" @click=\"closeImagesModal()\">{{ getActionName('choose', true, multiple) }}</vs-button>\n                    <vs-button type=\"border\" @click=\"uploadPopupActive = true\">{{ getActionName('upload') }}</vs-button>\n                </div>\n            </div>\n\n            <vs-popup :title=\"getActionName('upload', true, multiple)\" :active.sync=\"uploadPopupActive\">\n                <div class=\"vx-row m-0\">\n                    <div class=\"vx-col w-full p-0\">\n                        <file-pond\n                                name=\"file[]\"\n                                :label-idle=\"uploadLabel\"\n                                allow-multiple=\"true\"\n                                :accepted-file-types=\"allowedFileTypes\"\n                                :server=\"uploadUrl\"\n                                v-bind:files=\"files\"\n                                v-on:processfiles=\"imageUploaded()\"\n                                :max-file-size=\"maxFileSize\"\n                        />\n                    </div>\n                    <div class=\"vx-col w-full p-0\">\n                        <vs-button class=\"float-right\" @click=\"uploadPopupActive = false\">{{ getActionName('close') }}</vs-button>\n                    </div>\n                </div>\n            </vs-popup>\n\n        </vs-popup>\n\n    </div>\n\n\n</template>\n\n<script>\n\n    import axios from 'axios';\n\n    //Application routes\n    import { API } from '../../mixins/api/api.js';\n\n    // Import Vue FilePond\n    import vueFilePond from 'vue-filepond';\n\n    // Import FilePond styles\n    import 'filepond/dist/filepond.min.css';\n\n    //FilePond plugins\n    import FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\n    import FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\n\n    // Create component\n    const FilePond = vueFilePond(FilePondPluginFileValidateType, FilePondPluginFileValidateSize);\n\n    //Events bus\n    import { EventBus } from '../../EventBus';\n\n    export default {\n        name: \"ImageUpload\",\n        components: { FilePond },\n        props: {\n            per_page: {\n                type: Number,\n                default: 20\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            isQuillEditor: {\n                type: Boolean,\n                default: false\n            },\n            previewWidth: {\n                type: String,\n                default: '24%'\n            },\n            maxFileSize: {\n                type: String,\n                default: '1MB'\n            },\n            allowedFileTypes: {\n                type: String,\n                default: 'image/jpeg, image/png, image/svg+xml'\n            }\n        },\n        data() {\n            return {\n                popupActive: false,\n                uploadPopupActive: false,\n                uploadLabel: 'Drag & Drop your image or <span class=\"filepond--label-action\"> Browse </span>',\n                uploadUrl: '',\n                files: [],\n                images: [],\n                currentImage: {},\n                selectedImages: [],\n                requestParams: {\n                    per_page: this.per_page,\n                    sort_key: 'created_at',\n                    sort_order: 'desc'\n                },\n                pagination: {\n                    currentPage: 1,\n                    nextPageUrl: '',\n                    totalPages: 1\n                },\n                loadedImages: [],\n                API\n            }\n        },\n        watch: {\n\n            'pagination.currentPage': function(value, oldValue) {\n\n                this.getImages();\n\n            },\n            '$attrs.value': function (value, oldValue) {\n\n                this.setData();\n\n            }\n\n        },\n        methods: {\n            hideLoad(index){\n\n                this.loadedImages.push(index);\n\n                if(this.loadedImages.length === this.images.length){\n\n                    this.$vs.loading.close('#abr-images > .con-vs-loading')\n\n                }\n\n            },\n            getImages() {\n\n                this.showLoading();\n\n                let request_url = this.API.image.list;\n\n                let page = this.pagination.currentPage;\n\n                if (this.pagination.nextPageUrl != '') {\n\n                    request_url = request_url + '?page=' + page\n\n                }\n\n                //Clear the loaded images list\n                this.images = [];\n                this.loadedImages = [];\n\n                axios.get(request_url, {params: this.requestParams}).then(response => {\n\n                    this.images = response.data.data;\n\n                    this.pagination.nextPageUrl = response.data.next_page_url;\n\n                    this.pagination.totalPages = response.data.last_page;\n\n                });\n\n            },\n            imageUploaded(){\n\n                this.getImages();\n\n            },\n            selectImage(image){\n\n                //Set current image for the image form\n                this.setCurrentImage(image);\n\n                let selectedImages = this.selectedImages;\n\n                let imagesCount = selectedImages.length;\n\n                let multipleUpload = this.multiple;\n\n                let existingImage = selectedImages.find(function (item) {\n\n                    return item.id === image.id;\n\n                });\n\n                if(this.isEmpty(existingImage)){\n\n                    if(multipleUpload){\n\n                        this.selectedImages.push(image);\n\n                    }\n                    else{\n\n                        this.selectedImages.splice(0, 1);\n\n                        this.selectedImages.push(image);\n\n                    }\n\n                }\n\n                if(imagesCount < 1 || multipleUpload) {\n\n                    let existingImage = selectedImages.find(function (item) {\n\n                        return item.id === image.id;\n\n                    });\n\n                    if(this.isEmpty(existingImage)){\n\n                        this.selectedImages.push(image);\n\n                    }\n\n                }\n\n                //Send the selected image\n                this.handleSelect();\n\n            },\n            isSelected(image){\n\n                let selectedImage = this.selectedImages.find(function(item){\n\n                    return item.id === image;\n\n                });\n\n                if(selectedImage){\n\n                    return true;\n\n                }\n\n            },\n            updateImage(image){\n\n                axios.put(this.API.image.update + '/' + image.id, image).then(response => {\n\n                    if(response.data === 'success'){\n\n                        this.showNotification('success', 'request.updatedSuccess', 'success');\n\n                    }\n                    else{\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n\n                });\n\n            },\n            removeImage(image){\n\n                let selectedImages = this.selectedImages;\n\n                let existingImage = selectedImages.find(function(item){\n\n                    return item.id === image.id;\n\n                });\n\n                if(existingImage !== undefined){\n\n                    let selectedPosition = selectedImages.indexOf(existingImage);\n\n                    selectedImages.splice(selectedPosition, 1);\n\n                }\n\n                if(this.currentImage.id === image.id){\n\n                    this.currentImage = {};\n\n                }\n\n            },\n            deleteImage(image){\n\n                this.removeImage(image);\n\n                let images = this.images;\n\n                let existingImage = images.find(function(item){\n\n                    return item.id === image.id;\n\n                });\n\n                axios.delete(this.API.image.delete + '/' + image.id).then(response => {\n\n                    if(response.data === 'success'){\n\n                        this.showNotification('success', 'request.deletedSuccess', 'success');\n\n                        if(existingImage !== undefined){\n\n                            let position = images.indexOf(image);\n\n                            images.splice(position, 1);\n\n                        }\n\n                    }\n                    else{\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n\n                });\n\n            },\n            showNotification(type, message, color, customInstance, isPlural){\n\n                let instance = '';\n\n                let count = 1;\n\n                if(isPlural){\n\n                    count = 2;\n\n                }\n\n                if(customInstance){\n\n                    instance = this.$tc('models.' + customInstance + '.title', count);\n\n                }\n                else{\n\n                    instance = this.$tc('models.image.title', count);\n\n                }\n\n                let title = this.$t('messages.' + type);\n\n                let text = this.$tc('messages.' + message, count, { instance: instance });\n\n                this.$vs.notify(\n                    {\n                        title: title,\n                        text:  text,\n                        color: color\n                    }\n                );\n\n            },\n            showLoading(){\n\n                this.$vs.loading({\n                    container: '#abr-images',\n                    scale: 1,\n                    background: '#fff',\n                    color: 'primary'\n                });\n\n            },\n            setImages(images){\n\n                this.selectedImages = images;\n\n                if(this.currentImage === {}){\n\n                    this.setCurrentImage();\n\n                }\n\n            },\n            setCurrentImage(image){\n\n                if(image === undefined){\n\n                    if (this.selectedImages.length > 0) {\n\n                        this.currentImage = Object.assign({}, this.selectedImages[0]);\n\n                    }\n                    else {\n\n                        this.currentImage = {};\n\n                    }\n\n                }\n                else {\n\n                    this.currentImage = Object.assign(image);\n\n                }\n\n            },\n            isEmpty(obj) {\n                for (var prop in obj) {\n                    if (obj.hasOwnProperty(prop)) return false;\n                }\n                return true;\n            },\n            showImagesModal(){\n                this.popupActive = true;\n                if(this.selectedImages.length === 0 && this.pagination.currentPage === 1) {\n\n                    //Show loading animation\n                    this.showLoading();\n\n                }\n                this.getImages();\n                this.setCurrentImage();\n            },\n            closeImagesModal(){\n                this.popupActive = false;\n            },\n            handleSelect (e) {\n\n                this.$emit('input', this.selectedImages);\n\n            },\n            setData(){\n\n                let images = this.$attrs.value;\n\n                if(images !== \"\" && images !== undefined){\n\n                    if(!Array.isArray(images)){\n\n                        images = JSON.parse(images);\n\n                    }\n\n                    this.setImages(images);\n\n                }\n\n                this.setUploadUrl();\n\n            },\n            getActionName(action, useModel, isPlural){\n\n                let count = 1;\n\n                if(isPlural){\n\n                    count = 2;\n\n                }\n\n                let actionText = this.$t('actions.' + action);\n\n                if(useModel){\n\n                    let instanceTitle = this.$tc('models.image.title', count);\n\n                    return actionText + ' ' + instanceTitle;\n\n                }\n                else{\n\n                    return actionText;\n\n                }\n\n            },\n            //Newer and more advanced method for retrieving a model property name\n            getPropertyTitle(property){\n\n                return this.$t('models.image.properties.' + property);\n\n            },\n            setUploadUrl(){\n\n                this.uploadUrl = this.API.image.create;\n\n            },\n            listenEvents(){\n\n                //Open images manager from quill editor\n                EventBus.$on('open-image-uploader', action => {\n\n                    this.showImagesModal();\n\n                });\n\n            }\n        },\n        created() {\n\n            //Set data for the images manager\n            this.setData();\n\n            //Listen to events\n            this.listenEvents();\n\n        }\n    }\n</script>","import { render, staticRenderFns } from \"./ImageUpload.vue?vue&type=template&id=50de4f08&\"\nimport script from \"./ImageUpload.vue?vue&type=script&lang=js&\"\nexport * from \"./ImageUpload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}