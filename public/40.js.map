{"version":3,"sources":["webpack:///./resources/js/dashboard/views/setting/Settings.vue","webpack:///resources/js/dashboard/views/setting/Settings.vue","webpack:///./resources/js/dashboard/static/setting/setting.js","webpack:///./resources/js/dashboard/views/setting/Settings.vue?e1d5","webpack:///./resources/js/dashboard/views/setting/Settings.vue?5573","webpack:///./resources/js/dashboard/views/setting/Settings.vue?1b7c"],"names":["render","_vm","_c","_self","attrs","title","$t","staticClass","_l","settingsList","setting","index","key","_v","_s","getSettingName","slug","type","autocomplete","value","on","updateIsSelected","$event","$set","model","callback","$$v","expression","getOptions","options","item","valueKey","text","labelKey","_e","click","updateSettings","staticRenderFns","_withStripped","components","vSelect","ImageUpload","data","instance","instanceSlug","settings","API","methods","getOptionsData","component","forEach","getData","name","container","find","params","_this","items","axios","get","list","then","response","undefined","getSettings","_this2","setValues","settingItem","content","_this3","requestUrl","update","requestParams","settingObject","id","push","put","showNotification","error","message","color","customInstance","isPlural","count","$tc","$vs","notify","created","mounted"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA,IAAIA,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7B,IAAIC,GAAG,GAAG,IAAI;IACZC,EAAE,GAAGD,GAAG,CAACE,KAAK,CAACD,EAAE;EACnB,OAAOA,EAAE,CACP,KAAK,EACL,CACEA,EAAE,CAAC,SAAS,EAAE;IAAEE,KAAK,EAAE;MAAEC,KAAK,EAAEJ,GAAG,CAACK,EAAE,CAAC,oBAAoB;IAAE;EAAE,CAAC,EAAE,CAChEJ,EAAE,CAAC,KAAK,EAAE;IAAEK,WAAW,EAAE;EAAS,CAAC,EAAE,CACnCL,EAAE,CACA,KAAK,EACL;IAAEK,WAAW,EAAE;EAAgB,CAAC,EAChCN,GAAG,CAACO,EAAE,CAACP,GAAG,CAACQ,YAAY,EAAE,UAAUC,OAAO,EAAEC,KAAK,EAAE;IACjD,OAAOT,EAAE,CAAC,KAAK,EAAE;MAAEU,GAAG,EAAED,KAAK;MAAEJ,WAAW,EAAE;IAAc,CAAC,EAAE,CAC3DL,EAAE,CAAC,KAAK,EAAE;MAAEK,WAAW,EAAE;IAAgB,CAAC,EAAE,CAC1CL,EAAE,CAAC,GAAG,EAAE;MAAEK,WAAW,EAAE;IAAiB,CAAC,EAAE,CACzCN,GAAG,CAACY,EAAE,CAACZ,GAAG,CAACa,EAAE,CAACb,GAAG,CAACc,cAAc,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CACjD,CAAC,CACH,CAAC,EACFf,GAAG,CAACY,EAAE,CAAC,GAAG,CAAC,EACXX,EAAE,CACA,KAAK,EACL;MAAEK,WAAW,EAAE;IAAgB,CAAC,EAChC,CACEG,OAAO,CAACO,IAAI,KAAK,QAAQ,GACrBf,EAAE,CACA,WAAW,EACX;MACEK,WAAW,EAAE,QAAQ;MACrBH,KAAK,EAAE;QACLc,YAAY,EAAE,EAAE;QAChB,aAAa,EAAER,OAAO,CAACS;MACzB,CAAC;MACDC,EAAE,EAAE;QACF,mBAAmB,EAAE,SAArBC,gBAAmBA,CAAYC,MAAM,EAAE;UACrC,OAAOrB,GAAG,CAACsB,IAAI,CAACb,OAAO,EAAE,OAAO,EAAEY,MAAM,CAAC;QAC3C,CAAC;QACD,oBAAoB,EAAE,SAAtBD,gBAAoBA,CAAYC,MAAM,EAAE;UACtC,OAAOrB,GAAG,CAACsB,IAAI,CAACb,OAAO,EAAE,OAAO,EAAEY,MAAM,CAAC;QAC3C;MACF,CAAC;MACDE,KAAK,EAAE;QACLL,KAAK,EAAET,OAAO,CAACS,KAAK;QACpBM,QAAQ,EAAE,SAAVA,QAAQA,CAAYC,GAAG,EAAE;UACvBzB,GAAG,CAACsB,IAAI,CAACb,OAAO,EAAE,OAAO,EAAEgB,GAAG,CAAC;QACjC,CAAC;QACDC,UAAU,EAAE;MACd;IACF,CAAC,EACD1B,GAAG,CAACO,EAAE,CACJP,GAAG,CAAC2B,UAAU,CAAClB,OAAO,CAACmB,OAAO,CAAC,EAC/B,UAAUC,IAAI,EAAEnB,KAAK,EAAE;MACrB,OAAOT,EAAE,CAAC,gBAAgB,EAAE;QAC1BU,GAAG,EAAED,KAAK;QACVP,KAAK,EAAE;UACLe,KAAK,EAAEW,IAAI,CAACpB,OAAO,CAACqB,QAAQ,CAAC;UAC7BC,IAAI,EAAEF,IAAI,CAACpB,OAAO,CAACuB,QAAQ;QAC7B;MACF,CAAC,CAAC;IACJ,CACF,CAAC,EACD,CACF,CAAC,GACDhC,GAAG,CAACiC,EAAE,CAAC,CAAC,EACZjC,GAAG,CAACY,EAAE,CAAC,GAAG,CAAC,EACXH,OAAO,CAACO,IAAI,KAAK,UAAU,GACvBf,EAAE,CAAC,aAAa,EAAE;MAChBK,WAAW,EAAE,MAAM;MACnBiB,KAAK,EAAE;QACLL,KAAK,EAAET,OAAO,CAACS,KAAK;QACpBM,QAAQ,EAAE,SAAVA,QAAQA,CAAYC,GAAG,EAAE;UACvBzB,GAAG,CAACsB,IAAI,CAACb,OAAO,EAAE,OAAO,EAAEgB,GAAG,CAAC;QACjC,CAAC;QACDC,UAAU,EAAE;MACd;IACF,CAAC,CAAC,GACF1B,GAAG,CAACiC,EAAE,CAAC,CAAC,EACZjC,GAAG,CAACY,EAAE,CAAC,GAAG,CAAC,EACXH,OAAO,CAACO,IAAI,KAAK,WAAW,GACxBf,EAAE,CAAC,UAAU,EAAE;MACbK,WAAW,EAAE,aAAa;MAC1BiB,KAAK,EAAE;QACLL,KAAK,EAAET,OAAO,CAACS,KAAK;QACpBM,QAAQ,EAAE,SAAVA,QAAQA,CAAYC,GAAG,EAAE;UACvBzB,GAAG,CAACsB,IAAI,CAACb,OAAO,EAAE,OAAO,EAAEgB,GAAG,CAAC;QACjC,CAAC;QACDC,UAAU,EAAE;MACd;IACF,CAAC,CAAC,GACF1B,GAAG,CAACiC,EAAE,CAAC,CAAC,EACZjC,GAAG,CAACY,EAAE,CAAC,GAAG,CAAC,EACXH,OAAO,CAACO,IAAI,KAAK,OAAO,GACpBf,EAAE,CAAC,cAAc,EAAE;MACjBsB,KAAK,EAAE;QACLL,KAAK,EAAET,OAAO,CAACS,KAAK;QACpBM,QAAQ,EAAE,SAAVA,QAAQA,CAAYC,GAAG,EAAE;UACvBzB,GAAG,CAACsB,IAAI,CAACb,OAAO,EAAE,OAAO,EAAEgB,GAAG,CAAC;QACjC,CAAC;QACDC,UAAU,EAAE;MACd;IACF,CAAC,CAAC,GACF1B,GAAG,CAACiC,EAAE,CAAC,CAAC,CACb,EACD,CACF,CAAC,CACF,CAAC;EACJ,CAAC,CAAC,EACF,CACF,CAAC,CACF,CAAC,EACFjC,GAAG,CAACY,EAAE,CAAC,GAAG,CAAC,EACXX,EAAE,CAAC,KAAK,EAAE;IAAEK,WAAW,EAAE;EAAS,CAAC,EAAE,CACnCL,EAAE,CACA,KAAK,EACL;IAAEK,WAAW,EAAE;EAAgB,CAAC,EAChC,CACEL,EAAE,CACA,WAAW,EACX;IACEkB,EAAE,EAAE;MACFe,KAAK,EAAE,SAAPA,KAAKA,CAAYb,MAAM,EAAE;QACvB,OAAOrB,GAAG,CAACmC,cAAc,CAAC,CAAC;MAC7B;IACF;EACF,CAAC,EACD,CAACnC,GAAG,CAACY,EAAE,CAACZ,GAAG,CAACa,EAAE,CAACb,GAAG,CAACK,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAC3C,CAAC,CACF,EACD,CACF,CAAC,CACF,CAAC,CACH,CAAC,CACH,EACD,CACF,CAAC;AACH,CAAC;AACD,IAAI+B,eAAe,GAAG,EAAE;AACxBrC,MAAM,CAACsC,aAAa,GAAG,IAAI;;;;;;;;;;;;;ACzE3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;EACAC,UAAA;IAAAC,OAAA,EAAAA,iDAAA;IAAAC,WAAA,EAAAA;EAAA;EACAC,IAAA,WAAAA,KAAA;IAEA;MAEAC,QAAA;MACAC,YAAA;MACAnC,YAAA,EAAAA,oEAAA;MACAoB,OAAA,EAAAA,+DAAA;MACAgB,QAAA;MACAC,GAAA,EAAAA;IACA;EAEA;EACAC,OAAA;IAEAC,cAAA,WAAAA,eAAA;MAEA,IAAAC,SAAA;MAEA,KAAApB,OAAA,CAAAqB,OAAA,WAAApB,IAAA;QAEAmB,SAAA,CAAAE,OAAA,CAAArB,IAAA,CAAAa,QAAA;MAEA;IAEA;IACAf,UAAA,WAAAA,WAAAwB,IAAA;MAEA,IAAAC,SAAA,QAAAxB,OAAA,CAAAyB,IAAA,WAAAxB,IAAA;QAEA,OAAAA,IAAA,CAAAsB,IAAA,KAAAA,IAAA;MAEA;MAEA,OAAAC,SAAA,CAAAX,IAAA;IAEA;IACAS,OAAA,WAAAA,QAAAR,QAAA,EAAAY,MAAA;MAAA,IAAAC,KAAA;MAEA,IAAAC,KAAA;MAEAC,6CAAA,CAAAC,GAAA,MAAAb,GAAA,CAAAH,QAAA,EAAAiB,IAAA,EAAAL,MAAA,EAAAM,IAAA,WAAAC,QAAA;QAEAL,KAAA,GAAAK,QAAA,CAAApB,IAAA,CAAAA,IAAA;QAEA,IAAAW,SAAA,GAAAG,KAAA,CAAA3B,OAAA,CAAAyB,IAAA,WAAAxB,IAAA;UAEA,OAAAA,IAAA,CAAAa,QAAA,KAAAA,QAAA;QAEA;QAEA,IAAAU,SAAA,KAAAU,SAAA;UAEAV,SAAA,CAAAX,IAAA,GAAAe,KAAA;QAEA;MAEA;IAGA;IACAO,WAAA,WAAAA,YAAAT,MAAA;MAAA,IAAAU,MAAA;MAEAP,6CAAA,CAAAC,GAAA,MAAAb,GAAA,MAAAH,QAAA,EAAAiB,IAAA,EAAAL,MAAA,EAAAM,IAAA,WAAAC,QAAA;QAEAG,MAAA,CAAApB,QAAA,GAAAiB,QAAA,CAAApB,IAAA,CAAAA,IAAA;;QAEA;QACAuB,MAAA,CAAAC,SAAA;MAEA;IAEA;IACAA,SAAA,WAAAA,UAAA;MAEA,IAAArB,QAAA,QAAAA,QAAA;MAEA,KAAApC,YAAA,CAAAyC,OAAA,WAAAxC,OAAA;QAEA,IAAAyD,WAAA,GAAAtB,QAAA,CAAAS,IAAA,WAAAxB,IAAA;UAEA,OAAAA,IAAA,CAAAd,IAAA,KAAAN,OAAA,CAAAM,IAAA;QAEA;QAEA,IAAAmD,WAAA,KAAAJ,SAAA;UAEArD,OAAA,CAAAS,KAAA,GAAAgD,WAAA,CAAAC,OAAA;QAEA;MAEA;IAEA;IACAhC,cAAA,WAAAA,eAAA;MAAA,IAAAiC,MAAA;MAEA,IAAApB,SAAA;MAEA,IAAAJ,QAAA,QAAAA,QAAA;MAEA,IAAAyB,UAAA,QAAAxB,GAAA,MAAAH,QAAA,EAAA4B,MAAA;MAEA,IAAAC,aAAA;QACA3B,QAAA;MACA;MAEA,KAAApC,YAAA,CAAAyC,OAAA,WAAAxC,OAAA;QAGA,IAAAyD,WAAA,GAAAtB,QAAA,CAAAS,IAAA,WAAAxB,IAAA;UAEA,OAAAA,IAAA,CAAAd,IAAA,KAAAN,OAAA,CAAAM,IAAA;QAEA;QAEA,IAAAmD,WAAA,KAAAJ,SAAA,IAAArD,OAAA,CAAAS,KAAA,KAAAgD,WAAA,CAAAC,OAAA;UAEA,IAAAK,aAAA;YACAC,EAAA,EAAAP,WAAA,CAAAO,EAAA;YACAN,OAAA,EAAA1D,OAAA,CAAAS;UACA;UAEAqD,aAAA,CAAA3B,QAAA,CAAA8B,IAAA,CAAAF,aAAA;QAEA;MAGA;MAGAf,6CAAA,CAAAkB,GAAA,CAAAN,UAAA,EAAAE,aAAA,EAAAX,IAAA,CACA,UAAAC,QAAA;QAEA,IAAAA,QAAA,CAAApB,IAAA;UAEA2B,MAAA,CAAAQ,gBAAA,iDAAAd,SAAA;QAEA;MAEA,WACA,CACA,UAAAe,KAAA;QAEAT,MAAA,CAAAQ,gBAAA;MAEA,CACA;IAEA;IACA9D,cAAA,WAAAA,eAAAC,IAAA;MAEA,YAAAV,EAAA,eAAAU,IAAA;IAEA;IACA6D,gBAAA,WAAAA,iBAAA5D,IAAA,EAAA8D,OAAA,EAAAC,KAAA,EAAAC,cAAA,EAAAC,QAAA;MAEA,IAAAvC,QAAA;MAEA,IAAAwC,KAAA;MAEA,IAAAD,QAAA;QAEAC,KAAA;MAEA;MAEA,IAAAF,cAAA;QAEAtC,QAAA,QAAAyC,GAAA,aAAAH,cAAA,aAAAE,KAAA;MAEA,OACA;QAEAxC,QAAA,QAAAyC,GAAA,kBAAAzC,QAAA,aAAAwC,KAAA;MAEA;MAEA,IAAA9E,KAAA,QAAAC,EAAA,eAAAW,IAAA;MAEA,IAAAe,IAAA,QAAAoD,GAAA,eAAAL,OAAA,EAAAI,KAAA;QAAAxC,QAAA,EAAAA;MAAA;MAEA,KAAA0C,GAAA,CAAAC,MAAA,CACA;QACAjF,KAAA,EAAAA,KAAA;QACA2B,IAAA,EAAAA,IAAA;QACAgD,KAAA,EAAAA;MACA,CACA;IAEA;EAEA;EACAO,OAAA,WAAAA,QAAA,GAEA;EACAC,OAAA,WAAAA,QAAA;IAEA;IACA,KAAAxC,cAAA;;IAEA;IACA,KAAAgB,WAAA;EAEA;AACA,G;;;;;;;;;;;;AC5RA;AAAA;AAAA;AAAA;AACO,IAAMvD,YAAY,GAAG,CAExB;EACIO,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,OAAO;EACbE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,QAAQ;EACdY,OAAO,EAAE,YAAY;EACrBI,QAAQ,EAAE,OAAO;EACjBF,QAAQ,EAAE,MAAM;EAChBZ,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,QAAQ;EACdY,OAAO,EAAE,eAAe;EACxBI,QAAQ,EAAE,OAAO;EACjBF,QAAQ,EAAE,IAAI;EACdZ,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,yBAAyB;EAC/BC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,4BAA4B;EAClCC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,WAAW;EACjBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,EACD;EACIH,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,UAAU;EAChBE,KAAK,EAAE;AACX,CAAC,CAEJ;AAEM,IAAMU,OAAO,GAAG,CAEnB;EACIuB,IAAI,EAAE,YAAY;EAClBT,QAAQ,EAAE,UAAU;EACpBD,IAAI,EAAE;AACV,CAAC,EACD;EACIU,IAAI,EAAE,eAAe;EACrBT,QAAQ,EAAE,aAAa;EACvBD,IAAI,EAAE;AACV,CAAC,CAEJ,C;;;;;;;;;;;;ACxHD;AAAA;AAAA;AAAA;AAAsF;AAC3B;AACL;;;AAGtD;AACmG;AACnG,gBAAgB,2GAAU;AAC1B,EAAE,6EAAM;AACR,EAAE,kFAAM;AACR,EAAE,2FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAmM,CAAgB,mPAAG,EAAC,C;;;;;;;;;;;;ACAvN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"40.js","sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"vx-card\", { attrs: { title: _vm.$t(\"settings.pageTitle\") } }, [\n        _c(\"div\", { staticClass: \"vx-row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"vx-col w-full\" },\n            _vm._l(_vm.settingsList, function (setting, index) {\n              return _c(\"div\", { key: index, staticClass: \"vx-row mb-3\" }, [\n                _c(\"div\", { staticClass: \"vx-col w-full\" }, [\n                  _c(\"p\", { staticClass: \"font-bold mb-2\" }, [\n                    _vm._v(_vm._s(_vm.getSettingName(setting.slug))),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"vx-col w-full\" },\n                  [\n                    setting.type === \"select\"\n                      ? _c(\n                          \"vs-select\",\n                          {\n                            staticClass: \"w-full\",\n                            attrs: {\n                              autocomplete: \"\",\n                              \"is-selected\": setting.value,\n                            },\n                            on: {\n                              \"update:isSelected\": function ($event) {\n                                return _vm.$set(setting, \"value\", $event)\n                              },\n                              \"update:is-selected\": function ($event) {\n                                return _vm.$set(setting, \"value\", $event)\n                              },\n                            },\n                            model: {\n                              value: setting.value,\n                              callback: function ($$v) {\n                                _vm.$set(setting, \"value\", $$v)\n                              },\n                              expression: \"setting.value\",\n                            },\n                          },\n                          _vm._l(\n                            _vm.getOptions(setting.options),\n                            function (item, index) {\n                              return _c(\"vs-select-item\", {\n                                key: index,\n                                attrs: {\n                                  value: item[setting.valueKey],\n                                  text: item[setting.labelKey],\n                                },\n                              })\n                            }\n                          ),\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    setting.type === \"textarea\"\n                      ? _c(\"vs-textarea\", {\n                          staticClass: \"mb-0\",\n                          model: {\n                            value: setting.value,\n                            callback: function ($$v) {\n                              _vm.$set(setting, \"value\", $$v)\n                            },\n                            expression: \"setting.value\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    setting.type === \"textInput\"\n                      ? _c(\"vs-input\", {\n                          staticClass: \"w-full mb-0\",\n                          model: {\n                            value: setting.value,\n                            callback: function ($$v) {\n                              _vm.$set(setting, \"value\", $$v)\n                            },\n                            expression: \"setting.value\",\n                          },\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    setting.type === \"image\"\n                      ? _c(\"image-upload\", {\n                          model: {\n                            value: setting.value,\n                            callback: function ($$v) {\n                              _vm.$set(setting, \"value\", $$v)\n                            },\n                            expression: \"setting.value\",\n                          },\n                        })\n                      : _vm._e(),\n                  ],\n                  1\n                ),\n              ])\n            }),\n            0\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"vx-row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"vx-col w-full\" },\n            [\n              _c(\n                \"vs-button\",\n                {\n                  on: {\n                    click: function ($event) {\n                      return _vm.updateSettings()\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.$t(\"actions.update\")))]\n              ),\n            ],\n            1\n          ),\n        ]),\n      ]),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\r\n\r\n    <div>\r\n\r\n        <vx-card :title=\"$t('settings.pageTitle')\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\">\r\n\r\n                    <div class=\"vx-row mb-3\" :key=\"index\" v-for=\"setting, index in settingsList\">\r\n\r\n                        <div class=\"vx-col w-full\">\r\n                            <p class=\"font-bold mb-2\">{{ getSettingName(setting.slug) }}</p>\r\n                        </div>\r\n                        <div class=\"vx-col w-full\">\r\n\r\n                            <!--Select-->\r\n                            <vs-select\r\n                                autocomplete\r\n                                v-model=\"setting.value\"\r\n                                :is-selected.sync=\"setting.value\"\r\n                                class=\"w-full\"\r\n                                v-if=\"setting.type === 'select'\"\r\n                            >\r\n                                <vs-select-item :key=\"index\" :value=\"item[setting.valueKey]\" :text=\"item[setting.labelKey]\" v-for=\"item,index in getOptions(setting.options)\" />\r\n                            </vs-select>\r\n\r\n                            <!--Textarea-->\r\n                            <vs-textarea\r\n                                v-model=\"setting.value\"\r\n                                class=\"mb-0\"\r\n                                v-if=\"setting.type === 'textarea'\"\r\n                            >\r\n                            </vs-textarea>\r\n\r\n                            <!--Text input-->\r\n                            <vs-input\r\n                                v-model=\"setting.value\"\r\n                                class=\"w-full mb-0\"\r\n                                v-if=\"setting.type === 'textInput'\"\r\n                            >\r\n                            </vs-input>\r\n\r\n                            <!-- Image upload component -->\r\n                            <image-upload v-if=\"setting.type === 'image'\" v-model=\"setting.value\"></image-upload>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\">\r\n                    <vs-button @click=\"updateSettings()\">{{ $t('actions.update') }}</vs-button>\r\n                </div>\r\n            </div>\r\n        </vx-card>\r\n\r\n    </div>\r\n\r\n</template>\r\n<script>\r\n\r\n    //Library for working with requests\r\n    import axios from 'axios';\r\n\r\n    //Vue select\r\n    import vSelect from 'vue-select'\r\n\r\n    //Image uploader\r\n    import ImageUpload from '../../components/images/ImageUpload';\r\n\r\n    //Settings list\r\n    import { settingsList, options } from \"../../static/setting/setting\";\r\n\r\n    //Applications routes\r\n    import { API } from '@/mixins/api/api';\r\n\r\n    export default {\r\n        components: {vSelect, ImageUpload},\r\n        data() {\r\n\r\n            return {\r\n\r\n                instance: 'setting',\r\n                instanceSlug: 'settings',\r\n                settingsList,\r\n                options,\r\n                settings: [],\r\n                API\r\n            }\r\n\r\n        },\r\n        methods: {\r\n\r\n            getOptionsData(){\r\n\r\n                let component = this;\r\n\r\n                this.options.forEach(function(item){\r\n\r\n                    component.getData(item.instance);\r\n\r\n                });\r\n\r\n            },\r\n            getOptions(name){\r\n\r\n                let container = this.options.find(function(item){\r\n\r\n                    return item.name === name;\r\n\r\n                });\r\n\r\n                return container.data;\r\n\r\n            },\r\n            getData(instance, params){\r\n\r\n                let items = [];\r\n\r\n                axios.get(this.API[instance].list, params).then(response => {\r\n\r\n                    items = response.data.data;\r\n\r\n                    let container = this.options.find(function(item){\r\n\r\n                        return item.instance === instance;\r\n\r\n                    });\r\n\r\n                    if(container !== undefined){\r\n\r\n                        container.data = items;\r\n\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            },\r\n            getSettings(params){\r\n\r\n                axios.get(this.API[this.instance].list, params).then(response => {\r\n\r\n                    this.settings = response.data.data;\r\n\r\n                    //Set values for settings\r\n                    this.setValues();\r\n\r\n                });\r\n\r\n            },\r\n            setValues(){\r\n\r\n                let settings = this.settings;\r\n\r\n                this.settingsList.forEach(function(setting){\r\n\r\n                    let settingItem = settings.find(function(item){\r\n\r\n                        return item.slug === setting.slug;\r\n\r\n                    });\r\n\r\n                    if(settingItem !== undefined){\r\n\r\n                        setting.value = settingItem.content;\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            },\r\n            updateSettings(){\r\n\r\n                let component = this;\r\n\r\n                let settings = this.settings;\r\n\r\n                let requestUrl = this.API[this.instance].update;\r\n\r\n                let requestParams = {\r\n                    settings: []\r\n                };\r\n\r\n                this.settingsList.forEach(function(setting){\r\n\r\n\r\n                    let settingItem = settings.find(function(item){\r\n\r\n                        return item.slug === setting.slug;\r\n\r\n                    });\r\n\r\n                    if(settingItem !== undefined && setting.value !== settingItem.content){\r\n\r\n                        let settingObject = {\r\n                            id: settingItem.id,\r\n                            content: setting.value\r\n                        };\r\n\r\n                        requestParams.settings.push(settingObject);\r\n\r\n                    }\r\n\r\n\r\n                });\r\n\r\n\r\n                axios.put(requestUrl, requestParams).then(\r\n                    response => {\r\n\r\n                        if (response.data === 'success') {\r\n\r\n                            this.showNotification('success', 'request.updatedSuccess', 'success', undefined, true);\r\n\r\n                        }\r\n\r\n                    })\r\n                    .catch(\r\n                        error => {\r\n\r\n                            this.showNotification('success', 'request.error', 'danger');\r\n\r\n                        }\r\n                    );\r\n\r\n            },\r\n            getSettingName(slug){\r\n\r\n                return this.$t('settings.' + slug + '.title');\r\n\r\n            },\r\n            showNotification(type, message, color, customInstance, isPlural){\r\n\r\n                let instance = '';\r\n\r\n                let count = 1;\r\n\r\n                if(isPlural){\r\n\r\n                    count = 2;\r\n\r\n                }\r\n\r\n                if(customInstance){\r\n\r\n                    instance = this.$tc('models.' + customInstance + '.title', count);\r\n\r\n                }\r\n                else{\r\n\r\n                    instance = this.$tc('models.' + this.instance + '.title', count);\r\n\r\n                }\r\n\r\n                let title = this.$t('messages.' + type);\r\n\r\n                let text = this.$tc('messages.' + message, count, { instance: instance });\r\n\r\n                this.$vs.notify(\r\n                    {\r\n                        title: title,\r\n                        text:  text,\r\n                        color: color\r\n                    }\r\n                );\r\n\r\n            },\r\n\r\n        },\r\n        created(){\r\n\r\n        },\r\n        mounted() {\r\n\r\n            //Get the data for selects\r\n            this.getOptionsData();\r\n\r\n            //Get settings values\r\n            this.getSettings();\r\n\r\n        }\r\n    }\r\n</script>","//The list of all settings\nexport const settingsList = [\n\n    {\n        slug: 'site_logo',\n        type: 'image',\n        value: ''\n    },\n    {\n        slug: 'default_currency',\n        type: 'select',\n        options: 'currencies',\n        labelKey: 'title',\n        valueKey: 'code',\n        value: ''\n    },\n    {\n        slug: 'order_status',\n        type: 'select',\n        options: 'orderStatuses',\n        labelKey: 'title',\n        valueKey: 'id',\n        value: ''\n    },\n    {\n        slug: 'analytics_code',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'pixel_code',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'custom_js',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'custom_css',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'fb_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'twitter_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'instagram_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'youtube_url',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'contact_phone',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'contact_email',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'categories_seo_title',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'categories_seo_keywords',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'categories_seo_description',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'home_seo_title',\n        type: 'textInput',\n        value: ''\n    },\n    {\n        slug: 'home_seo_keywords',\n        type: 'textarea',\n        value: ''\n    },\n    {\n        slug: 'home_seo_description',\n        type: 'textarea',\n        value: ''\n    }\n\n];\n\nexport const options = [\n\n    {\n        name: 'currencies',\n        instance: 'currency',\n        data: []\n    },\n    {\n        name: 'orderStatuses',\n        instance: 'orderStatus',\n        data: []\n    }\n\n];","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=2876a9fc\"\nimport script from \"./Settings.vue?vue&type=script&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/work/poseban-poklon/poklon/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2876a9fc')) {\n      api.createRecord('2876a9fc', component.options)\n    } else {\n      api.reload('2876a9fc', component.options)\n    }\n    module.hot.accept(\"./Settings.vue?vue&type=template&id=2876a9fc\", function () {\n      api.rerender('2876a9fc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/dashboard/views/setting/Settings.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/.pnpm/vue-loader@15.11.1_css-loader@1.0.1_webpack@4.47.0__lodash@4.17.21_vue-template-compiler@2.7.16_webpack@4.47.0/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=template&id=2876a9fc\""],"sourceRoot":""}