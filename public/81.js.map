{"version":3,"sources":["webpack:///resources/js/dashboard/views/user/AdminUsers.vue","webpack:///./resources/js/dashboard/views/user/AdminUsers.vue?c96c","webpack:///./resources/js/dashboard/mixins/tables/helper.js","webpack:///./resources/js/dashboard/views/user/AdminUsers.vue","webpack:///./resources/js/dashboard/views/user/AdminUsers.vue?6c0d","webpack:///./resources/js/dashboard/views/user/AdminUsers.vue?4a57"],"names":["tableHelper","props","data","instance","items","per_page","pagination","currentPage","nextPageUrl","totalPages","search","sortKey","sortOrder","API","watch","value","oldValue","getItems","methods","setInstance","requestparams","params","requestUrl","list","selectedPage","axios","get","then","response","next_page_url","last_page","deleteItem","id","showNotification","error","getTableTitle","$t","getColumnTitle","model","getPropertyTitle","property","convertDate","date","selectedDate","Date","dateDay","getDate","dateMonth","getMonth","dateYear","getFullYear","convertedDate","type","message","color","customInstance","isPlural","count","$tc","title","text","$vs","notify","showDeleteAlert","deleteItemFunction","bind","dialog","accept","mounted"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;CAGA;;AACA;AAEA;AACA,yEADA;AAEA,MAFA,kBAEA;AAEA;AAEA,sBAFA;AAGA,2BAHA;AAIA;AACA,qBADA;AAEA;AAFA,OAJA;AAQA,cACA;AACA,aADA;AAEA;AAFA,OADA,EAKA;AACA,aADA;AAEA;AAFA,OALA,EASA;AACA,aADA;AAEA;AAFA,OATA,CARA;AAsBA,iBACA;AACA,mBADA;AAEA;AAFA,OADA,EAKA;AACA,oBADA;AAEA;AAFA,OALA;AAtBA;AAmCA,GAvCA;AAwCA;AACA,iBADA,yBACA,IADA,EACA;AAEA;AACA;AAEA,KANA;AAOA,kBAPA,0BAOA,MAPA,EAOA,MAPA,EAOA;AAEA;AAEA;AACA,oBADA;AAEA;AAFA;AAKA;AAEA,KAlBA;AAmBA,oBAnBA,4BAmBA,MAnBA,EAmBA;AAEA;AAEA;AACA;AADA;AAIA;AAEA,KA7BA;AA8BA,cA9BA,wBA8BA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA,OAJA;;AAMA;AAEA;AAEA;AAEA;AAEA;;AAEA;AAEA;AAEA;;AAEA,gFAdA,CAgBA;;AACA;AAEA,SAnBA,CAoBA;AAEA;AAEA;AAEA;AAEA;AA1EA,GAxCA;AAoHA,SApHA,qBAoHA;AAEA;AACA;AAEA,GAzHA;AA0HA,SA1HA,qBA0HA;AAEA;AACA;AAEA;AA/HA,G;;;;;;;;;;;;AC1HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA,sCAAsC,eAAe;AACrD;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,sCAAsC,kCAAkC;AACxE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,iBAAiB;AAC3C,uBAAuB,wCAAwC;AAC/D,yBAAyB,mDAAmD;AAC5E,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA,2BAA2B,SAAS,qBAAqB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,sBAAsB,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,qBAAqB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,uBAAuB,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,WAAW,iEAAiE;AAC5E;AACA;AACA,sBAAsB,mCAAmC;AACzD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,wBAAwB;AAC7C,uBAAuB,kCAAkC;AACzD,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAiD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,8BAA8B;AAC9B,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2CAA2C;AACvE;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,8BAA8B;AAC9B,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA,iCAAiC,MAAM,wBAAwB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClWA;AAAA;AAAA;AAAA;AAAA;CAGA;;AACA;AAEA,IAAMA,WAAW,GAAG;AAChBC,OAAK,EAAE,EADS;AAGhBC,MAHgB,kBAGT;AAEH,WAAO;AAEHC,cAAQ,EAAE,EAFP;AAGHC,WAAK,EAAE,EAHJ;AAIHC,cAAQ,EAAE,EAJP;AAKHC,gBAAU,EAAE;AACRC,mBAAW,EAAE,CADL;AAERC,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","file":"81.js","sourcesContent":["<template>\n\n    <div>\n        <vs-table :max-items=\"per_page\" :sst=\"true\" :data=\"items\" :noDataText=\"$t('messages.notFound')\">\n\n            <template slot=\"header\">\n                <div class=\"vx-row w-full pb-3 m-0\">\n                    <div class=\"vx-col flex items-center w-50 p-0\">\n                        <h3 class=\"mb-0 mr-3\">\n                            {{ getTableTitle() }}\n                        </h3>\n                    </div>\n                    <div class=\"vx-col flex items-center justify-end w-50 p-0\">\n                        <vs-input icon=\"search\" :placeholder=\"$t('actions.search')\" v-model=\"search\" class=\"w-full\" />\n                    </div>\n                </div>\n            </template>\n\n            <template slot=\"thead\">\n                <vs-th sort-key=\"name\">\n                    {{ getPropertyTitle('name') }}\n                </vs-th>\n                <vs-th sort-key=\"email\">\n                    {{ getPropertyTitle('email') }}\n                </vs-th>\n                <vs-th sort-key=\"role\">\n                    {{ getPropertyTitle('role') }}\n                </vs-th>\n                <vs-th sort-key=\"status\">\n                    {{ getPropertyTitle('status') }}\n                </vs-th>\n                <vs-th>\n                    {{ $t('actions.title') }}\n                </vs-th>\n            </template>\n\n            <template slot-scope=\"{data}\">\n                <vs-tr :key=\"indexItem\" v-for=\"(user, indexItem) in data\" >\n                    <vs-td>\n                        {{ user.name }}\n                    </vs-td>\n                    <vs-td>\n                        {{ user.email }}\n                    </vs-td>\n                    <vs-td>\n                        {{ user.role.name }}\n                    </vs-td>\n                    <vs-td>\n                        <vs-icon icon=\"check\" color=\"success\" size=\"medium\" v-if=\"user.status\"></vs-icon>\n                        <vs-icon icon=\"close\" color=\"danger\" size=\"medium\" v-else></vs-icon>\n                    </vs-td>\n                    <vs-td>\n                        <div class=\"flex\">\n                            <vs-button icon=\"edit\" class=\"mr-2\" @click=\"showUserPopup(user)\"></vs-button>\n                            <vs-button color=\"danger\" icon=\"delete\" @click=\"showDeleteAlert(user.id)\"></vs-button>\n                        </div>\n                    </vs-td>\n                </vs-tr>\n            </template>\n\n        </vs-table>\n        <div class=\"vx-row\">\n            <div class=\"vx-col flex justify-end items-center w-full p-3\">\n                <vs-pagination :total=\"pagination.totalPages\" v-model=\"pagination.currentPage\"></vs-pagination>\n            </div>\n        </div>\n\n        <vs-popup :title=\"$t('actions.edit') + ' ' + $tc('models.user.title', 1)\" :active.sync=\"userPopup.active\">\n\n            <div class=\"vx-row\">\n\n                <div class=\"vx-col w-50 mb-3\">\n\n                    <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('name') }}</p>\n                    <p>{{ userPopup.data.name }}</p>\n\n                </div>\n\n                <div class=\"vx-col w-50 mb-3\">\n\n                    <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('email') }}</p>\n                    <p>{{ userPopup.data.email }}</p>\n\n                </div>\n\n                <div class=\"vx-col w-50 mb-3\">\n\n                    <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('role') }}</p>\n                    <vs-select v-model=\"userPopup.data.user_role_id\" :is-selected.sync=\"userPopup.data.user_role_id\">\n                        <vs-select-item :key=\"index\" :value=\"item.id\" :text=\"item.name\" v-for=\"item,index in roles\" />\n                    </vs-select>\n\n                </div>\n\n                <div class=\"vx-col w-50 mb-3\">\n\n                    <p class=\"font-bold text-sm mb-2\">{{ getPropertyTitle('status') }}</p>\n                    <vs-select v-model=\"userPopup.data.status\" :is-selected.sync=\"userPopup.data.status\">\n                        <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.name\" v-for=\"item,index in statuses\" />\n                    </vs-select>\n\n                </div>\n\n                <div class=\"vx-col w-full\">\n                    <vs-button @click=\"updateUser\">{{ $t('actions.update') }}</vs-button>\n                </div>\n\n            </div>\n\n        </vs-popup>\n\n    </div>\n\n</template>\n<script>\n\n    //Library for working with requests\n    import axios from 'axios';\n\n    //Table helper functions\n    import tableHelper from \"@/mixins/tables/helper\";\n\n    export default {\n        mixins: [tableHelper],\n        data() {\n\n            return {\n\n                instance: 'user',\n                instanceSlug: 'users',\n                userPopup: {\n                    active: false,\n                    data: []\n                },\n                roles: [\n                    {\n                        id: 1,\n                        name: \"user\"\n                    },\n                    {\n                        id: 2,\n                        name: \"admin\"\n                    },\n                    {\n                        id: 3,\n                        name: \"editor\"\n                    }\n                ],\n                statuses: [\n                    {\n                        value: true,\n                        name: 'Active'\n                    },\n                    {\n                        value: false,\n                        name: 'Suspended'\n                    }\n                ]\n\n            }\n\n        },\n        methods: {\n            showUserPopup(user){\n\n                this.userPopup.data = Object.assign({}, user);\n                this.userPopup.active = true;\n\n            },\n            changeUserRole(userId, roleId){\n\n                let requestUrl = this.API.user.changeRole;\n\n                let requestParams = {\n                    user: userId,\n                    role: roleId\n                };\n\n                axios.post(requestUrl, requestParams);\n\n            },\n            changeUserStatus(userId){\n\n                let requestUrl = this.API.user.changeStatus;\n\n                let requestParams = {\n                    user: userId\n                };\n\n                axios.post(requestUrl, requestParams);\n\n            },\n            updateUser(){\n\n                let user = this.userPopup.data;\n\n                let roleId = user.user_role_id;\n\n                let status = user.status;\n\n                let initialData = this.items.find(function(item){\n\n                    return item.id === user.id;\n\n                });\n\n                if(initialData !== undefined){\n\n                    try{\n\n                        if(roleId !== initialData.user_role_id){\n\n                            this.changeUserRole(user.id, roleId);\n\n                        }\n\n                        if(status != initialData.status){\n\n                            this.changeUserStatus(user.id);\n\n                        }\n\n                        this.showNotification('success', 'request.updatedSuccess', 'success');\n\n                        //Refresh the list\n                        this.getItems();\n\n                    }\n                    catch(e){\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n\n                }\n\n            }\n        },\n        created(){\n\n            //Set the instance\n            this.setInstance(this.instance);\n\n        },\n        mounted() {\n\n            //Load items\n            this.getItems(this.per_page);\n\n        }\n    }\n</script>","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"vs-table\",\n        {\n          attrs: {\n            \"max-items\": _vm.per_page,\n            sst: true,\n            data: _vm.items,\n            noDataText: _vm.$t(\"messages.notFound\")\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"default\",\n              fn: function(ref) {\n                var data = ref.data\n                return _vm._l(data, function(user, indexItem) {\n                  return _c(\n                    \"vs-tr\",\n                    { key: indexItem },\n                    [\n                      _c(\"vs-td\", [\n                        _vm._v(\n                          \"\\n                    \" +\n                            _vm._s(user.name) +\n                            \"\\n                \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-td\", [\n                        _vm._v(\n                          \"\\n                    \" +\n                            _vm._s(user.email) +\n                            \"\\n                \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"vs-td\", [\n                        _vm._v(\n                          \"\\n                    \" +\n                            _vm._s(user.role.name) +\n                            \"\\n                \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"vs-td\",\n                        [\n                          user.status\n                            ? _c(\"vs-icon\", {\n                                attrs: {\n                                  icon: \"check\",\n                                  color: \"success\",\n                                  size: \"medium\"\n                                }\n                              })\n                            : _c(\"vs-icon\", {\n                                attrs: {\n                                  icon: \"close\",\n                                  color: \"danger\",\n                                  size: \"medium\"\n                                }\n                              })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"vs-td\", [\n                        _c(\n                          \"div\",\n                          { staticClass: \"flex\" },\n                          [\n                            _c(\"vs-button\", {\n                              staticClass: \"mr-2\",\n                              attrs: { icon: \"edit\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.showUserPopup(user)\n                                }\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"vs-button\", {\n                              attrs: { color: \"danger\", icon: \"delete\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.showDeleteAlert(user.id)\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ])\n                    ],\n                    1\n                  )\n                })\n              }\n            }\n          ])\n        },\n        [\n          _c(\"template\", { slot: \"header\" }, [\n            _c(\"div\", { staticClass: \"vx-row w-full pb-3 m-0\" }, [\n              _c(\"div\", { staticClass: \"vx-col flex items-center w-50 p-0\" }, [\n                _c(\"h3\", { staticClass: \"mb-0 mr-3\" }, [\n                  _vm._v(\n                    \"\\n                        \" +\n                      _vm._s(_vm.getTableTitle()) +\n                      \"\\n                    \"\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"vx-col flex items-center justify-end w-50 p-0\"\n                },\n                [\n                  _c(\"vs-input\", {\n                    staticClass: \"w-full\",\n                    attrs: {\n                      icon: \"search\",\n                      placeholder: _vm.$t(\"actions.search\")\n                    },\n                    model: {\n                      value: _vm.search,\n                      callback: function($$v) {\n                        _vm.search = $$v\n                      },\n                      expression: \"search\"\n                    }\n                  })\n                ],\n                1\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"template\",\n            { slot: \"thead\" },\n            [\n              _c(\"vs-th\", { attrs: { \"sort-key\": \"name\" } }, [\n                _vm._v(\n                  \"\\n                \" +\n                    _vm._s(_vm.getPropertyTitle(\"name\")) +\n                    \"\\n            \"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"vs-th\", { attrs: { \"sort-key\": \"email\" } }, [\n                _vm._v(\n                  \"\\n                \" +\n                    _vm._s(_vm.getPropertyTitle(\"email\")) +\n                    \"\\n            \"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"vs-th\", { attrs: { \"sort-key\": \"role\" } }, [\n                _vm._v(\n                  \"\\n                \" +\n                    _vm._s(_vm.getPropertyTitle(\"role\")) +\n                    \"\\n            \"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"vs-th\", { attrs: { \"sort-key\": \"status\" } }, [\n                _vm._v(\n                  \"\\n                \" +\n                    _vm._s(_vm.getPropertyTitle(\"status\")) +\n                    \"\\n            \"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"vs-th\", [\n                _vm._v(\n                  \"\\n                \" +\n                    _vm._s(_vm.$t(\"actions.title\")) +\n                    \"\\n            \"\n                )\n              ])\n            ],\n            1\n          )\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"vx-row\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"vx-col flex justify-end items-center w-full p-3\" },\n          [\n            _c(\"vs-pagination\", {\n              attrs: { total: _vm.pagination.totalPages },\n              model: {\n                value: _vm.pagination.currentPage,\n                callback: function($$v) {\n                  _vm.$set(_vm.pagination, \"currentPage\", $$v)\n                },\n                expression: \"pagination.currentPage\"\n              }\n            })\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"vs-popup\",\n        {\n          attrs: {\n            title:\n              _vm.$t(\"actions.edit\") + \" \" + _vm.$tc(\"models.user.title\", 1),\n            active: _vm.userPopup.active\n          },\n          on: {\n            \"update:active\": function($event) {\n              return _vm.$set(_vm.userPopup, \"active\", $event)\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"vx-row\" }, [\n            _c(\"div\", { staticClass: \"vx-col w-50 mb-3\" }, [\n              _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                _vm._v(_vm._s(_vm.getPropertyTitle(\"name\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\"p\", [_vm._v(_vm._s(_vm.userPopup.data.name))])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"vx-col w-50 mb-3\" }, [\n              _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                _vm._v(_vm._s(_vm.getPropertyTitle(\"email\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\"p\", [_vm._v(_vm._s(_vm.userPopup.data.email))])\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"vx-col w-50 mb-3\" },\n              [\n                _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                  _vm._v(_vm._s(_vm.getPropertyTitle(\"role\")))\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"vs-select\",\n                  {\n                    attrs: { \"is-selected\": _vm.userPopup.data.user_role_id },\n                    on: {\n                      \"update:isSelected\": function($event) {\n                        return _vm.$set(\n                          _vm.userPopup.data,\n                          \"user_role_id\",\n                          $event\n                        )\n                      },\n                      \"update:is-selected\": function($event) {\n                        return _vm.$set(\n                          _vm.userPopup.data,\n                          \"user_role_id\",\n                          $event\n                        )\n                      }\n                    },\n                    model: {\n                      value: _vm.userPopup.data.user_role_id,\n                      callback: function($$v) {\n                        _vm.$set(_vm.userPopup.data, \"user_role_id\", $$v)\n                      },\n                      expression: \"userPopup.data.user_role_id\"\n                    }\n                  },\n                  _vm._l(_vm.roles, function(item, index) {\n                    return _c(\"vs-select-item\", {\n                      key: index,\n                      attrs: { value: item.id, text: item.name }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"vx-col w-50 mb-3\" },\n              [\n                _c(\"p\", { staticClass: \"font-bold text-sm mb-2\" }, [\n                  _vm._v(_vm._s(_vm.getPropertyTitle(\"status\")))\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"vs-select\",\n                  {\n                    attrs: { \"is-selected\": _vm.userPopup.data.status },\n                    on: {\n                      \"update:isSelected\": function($event) {\n                        return _vm.$set(_vm.userPopup.data, \"status\", $event)\n                      },\n                      \"update:is-selected\": function($event) {\n                        return _vm.$set(_vm.userPopup.data, \"status\", $event)\n                      }\n                    },\n                    model: {\n                      value: _vm.userPopup.data.status,\n                      callback: function($$v) {\n                        _vm.$set(_vm.userPopup.data, \"status\", $$v)\n                      },\n                      expression: \"userPopup.data.status\"\n                    }\n                  },\n                  _vm._l(_vm.statuses, function(item, index) {\n                    return _c(\"vs-select-item\", {\n                      key: index,\n                      attrs: { value: item.value, text: item.name }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"vx-col w-full\" },\n              [\n                _c(\"vs-button\", { on: { click: _vm.updateUser } }, [\n                  _vm._v(_vm._s(_vm.$t(\"actions.update\")))\n                ])\n              ],\n              1\n            )\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","//Application routes\nimport { API } from \"@/mixins/api/api\";\n\n//Library for working with requests\nimport axios from 'axios';\n\nconst tableHelper = {\n    props: {\n    },\n    data() {\n\n        return {\n\n            instance: '',\n            items: [],\n            per_page: 20,\n            pagination: {\n                currentPage: 1,\n                nextPageUrl: '',\n                totalPages: 1\n            },\n            search: '',\n            sortKey: '',\n            sortOrder: '',\n            API\n\n        }\n\n    },\n    watch: {\n        'pagination.currentPage': function(value, oldValue) {\n\n            this.getItems();\n\n        },\n        'search': function () {\n\n            this.getItems();\n\n        }\n    },\n    methods: {\n\n        setInstance(instance){\n\n            this.instance = instance;\n\n        },\n        getItems() {\n\n            const instance = this.instance;\n\n            let requestparams = {\n\n                params: {\n\n                    per_page: this.per_page,\n                    //'X-CSRF-TOKEN': this.csrf\n\n                }\n\n            };\n\n            if(this.search !== ''){\n\n                requestparams.params.search = this.search;\n\n                this.pagination.currentPage = 1;\n\n            }\n\n            let requestUrl = this.API[instance].list;\n\n            let selectedPage = this.pagination.currentPage;\n\n            if(this.pagination.nextPageUrl !== '' && this.search === '') {\n\n                requestUrl = requestUrl + '?page=' + selectedPage;\n\n            }\n\n            axios.get(requestUrl, requestparams).then(response => {\n                this.items = response.data.data;\n                this.pagination.nextPageUrl = response.data.next_page_url;\n                this.pagination.totalPages = response.data.last_page;\n            });\n\n        },\n        deleteItem(id) {\n\n            const instance = this.instance;\n\n            axios.delete(this.API[instance].delete + '/' + id)\n                .then(\n                    response => {\n\n                        if (response.data === 'success') {\n\n                            this.showNotification('success', 'request.deletedSuccess', 'success');\n\n                            //Update the items list\n                            this.getItems();\n\n                        }\n\n                    })\n                .catch(\n                    error => {\n\n                        this.showNotification('error', 'request.error', 'danger');\n\n                    }\n                );\n\n        },\n        getTableTitle(){\n\n            return this.$t('tables.' + this.instance + '.title');\n\n        },\n        getColumnTitle(model){\n\n            return this.$t('models.' + this.instance + '.properties.' + model);\n\n        },\n        getPropertyTitle(property){\n\n            return this.$t('models.' + this.instance + '.properties.' + property);\n\n        },\n        convertDate(date){\n\n            let selectedDate = new Date(date);\n            let dateDay = selectedDate.getDate();\n            let dateMonth = selectedDate.getMonth()+1;\n            let dateYear = selectedDate.getFullYear();\n\n            if(dateDay < 10){\n                dateDay = '0' + dateDay;\n            }\n\n            if(dateMonth < 10){\n                dateMonth = '0' + dateMonth;\n            }\n\n            let convertedDate = dateDay + '.' + dateMonth + '.' + dateYear;\n\n            return convertedDate;\n\n        },\n        showNotification(type, message, color, customInstance, isPlural){\n\n            let instance = '';\n\n            let count = 1;\n\n            if(isPlural){\n\n                count = 2;\n\n            }\n\n            if(customInstance){\n\n                instance = this.$tc('models.' + customInstance + '.title', count);\n\n            }\n            else{\n\n                instance = this.$tc('models.' + this.instance + '.title', count);\n\n            }\n\n            let title = this.$t('messages.' + type);\n\n            let text = this.$tc('messages.' + message, count, { instance: instance });\n\n            this.$vs.notify(\n                {\n                    title: title,\n                    text:  text,\n                    color: color\n                }\n            );\n\n        },\n        showDeleteAlert(id){\n\n            let deleteItemFunction = this.deleteItem.bind(null, id);\n\n            let instance = this.$tc('models.' + this.instance + '.title', 1);\n\n            let text = this.$t('messages.confirmation.delete', { instance: instance });\n\n            this.$vs.dialog({\n                color:'primary',\n                title: 'Confirm',\n                text: text,\n                accept: deleteItemFunction\n            });\n\n        }\n\n    },\n    mounted: function(){\n\n    }\n\n};\n\nexport default tableHelper;","import { render, staticRenderFns } from \"./AdminUsers.vue?vue&type=template&id=2bab1973&\"\nimport script from \"./AdminUsers.vue?vue&type=script&lang=js&\"\nexport * from \"./AdminUsers.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/html/posebanpoklon/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2bab1973')) {\n      api.createRecord('2bab1973', component.options)\n    } else {\n      api.reload('2bab1973', component.options)\n    }\n    module.hot.accept(\"./AdminUsers.vue?vue&type=template&id=2bab1973&\", function () {\n      api.rerender('2bab1973', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/dashboard/views/user/AdminUsers.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdminUsers.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdminUsers.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdminUsers.vue?vue&type=template&id=2bab1973&\""],"sourceRoot":""}